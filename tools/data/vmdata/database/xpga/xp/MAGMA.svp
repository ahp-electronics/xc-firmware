<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE		SVF_Plus	SYSTEM	"SVF_Plus.dtd" >
<!-- 08/12/03 Spinti Created from a copy of LAVA1.svp and added SERIAL_PROGRAM from Orca4.svp
	09/07/04 Nguyen Added ISC_DATA_SHIFT 		 = 0x02
					Changed LSCC_BITSTREAM_BURST = 0x04
    09/20/04 Spinti: Changed Preload to all 1's
	09/24/04 Spinti: Added SRAM Fast Program operation, and BURST_PROGRAM, ENG_INIT, and ENG_DISABLE function.
	11/17/04 Nguyen added "Read programming Status" operation
	11/17/04 Nguyen added "Capture Only" operation
	02/02/04 Ong   : Removed the word Intelligent" from the LatticeXP-ES Device Operation List.
	02/03/04 Spinti: Changed FLASH Uploaded to FLASH Upload to Static RAM, and changed the function call from
                       REFRESH_FUNCTION to UPLOAD_FUNCTION.
 			     Created UPLOAD_FUNCTION that performs enable and disable.
	02/09/05 Nguyen added the XSRAM Display ID operation 			     
    03/04/05 Spinti: Changed the PROGRAM_SECURITY, PROGRAM_DONE_BIT, and ERASE_DONE_BIT pulse width to 50.
    03/07/05 Spinti: Changed the DISABLE delay to 200ms, ENABLE delay to 20ms, and DISCHARGE delay to 10ms.
    03/18/05 Nguyen increased the fix rease and programming time for SVF Flash
    04/11/05 Nguyen added the FLASH MDR and XFLASH MDR operations 
    05/02/05 Nguyen changed the FLASH MDR and XFLASH MDR to toggle the IO pin B22
    05/03/05 Nguyen added manufacturing mode to turn on slow fclk for flash erase
    05/05/05 Nguyen use PL5A (H4 on the 388 fpBGA, D1 on the 256 fpBGA) as the default MDR PROGRAMN toggle I/O.
    05/05/05 Nguyen changed FLASH and XFLASH MDR to FLASH and XFLASH Dynamic Upgrade
    05/10/05 Nguyen changed FLASH Dynamic Upgrade and XFLASH Dynamic Upgrade operations to FLASH TransFR
    05/20/05 Nguyen added SRAM Fast Program operation
    06/06/05 Nguyen added XFLASH Program and TransFR Operation 
    06/06/05 Nguyen removed the IO_STATE on XFLASH Operations
    07/15/05 Nguyen added "VERIFY_DONE_BIT" to all Verify operations
    08/23/05 Nguyen added "XFLASH Program USF with Static EBR" and "XSRAM Read EBR"
    09/23/05 Ong	 : Updated the Erase message to "The Standard FLASH Erase is Unsuccessful. Re-try using
			   Extended Erase." 
	09/26/05 Nguyen changed the Max Erase time to 85
	10/10/05 Nguyen changed the Max Time Erase Done bit to 5s and max program done bit to 500ms
	10/10/05 Nguyen use looping for Flash Erase done bit
	10/10/05 Added Erase the DONE bit before Erase			 
	10/27/05 Nguyen added "Program Only" flow for FLASH Program only
	10/28/05 Nguyen removed the usercode programming pre-erasure conditioning
	11/22/05 Nguyen removed the extended flash erase
	01/04/06 Nguyen added "FLASH Calculate Checksum" Operation
	01/18/06 Ong  : Added "Verify ID" to Flash Operation List.
	02/21/06 Nguyen changed the FLASH Erase flow to test the trim-row for a match of the
                        32MHZ setting. If match then use standard flow, else use extended erase flow.
      06/14/06 Nguyen changed the LDDELAY STATE from DRCAPTURE back to DRPAUSE to make it JTAG SVF compliance
      06/21/06 Ong   : Added Verify Done Bit to Verify Only operation for FLASH mode.  	
	10/04/06 Spinti: Correct typo; changed "Veirfy" to "Verify".
	10/16/06 Nguyen added "XSRAM Display USERCODE" and "XFLASH Display USERCODE" to the operation lists.
	12/05/06 Ong   : Verify Done Bit to be done prior to Disable for FLASH Verify Only operation.
	12/11/06 Nguyen added "XFLASH Calculate Checksum" Operation
	01/09/07 Nguyen reduced the erasing time.
	01/10/07 Nguyen took out the discharge instruction (howard requested)
	01/12/07 Ong   : Added Verify Done Bit to FLASH Verify Only and Verify Only for RevC and RevD generated SVF files.
	02/28/2007 Nguyen removed the check completed status from the Rev D (fixed pulse width) of the FLASH Erase
    		 flow and use the verify USERCODE flow instead to make sure the device has been erased correctly.
    03/05/2007 Nguyen removed the check completed status from the Rev D (fixed pulse width) of the FLASH Program
	03/22/2007 Nguyen changed the LDELAY state to DRPAUSE and added 5 TCK for Erase and Program status operations.
			   (Howard requested)
	07/20/07 Nguyen modified to support "SRAM Program,Verify" Operation
	09/12/07 Nguyen changed the LSDR keyword to the loop keyword to be consistent with XP2 (Howard requested)
-->
<SVF_Plus version="1.0">
<Header>
	<Device name="DEVICE_NAME"/>
</Header>
<Setup> <!-- use default Header, Trailer and Frequency value -->
	<Interface protocol="JTAG_1149.1"/>
</Setup>
<Parameter>
	<!-- Length fields are in number if bits -->
	<Instruction_Length value="INSTRUCTION_REGISTER_LENGTH"/> 
	<Row_Width			value="DEVICE_ROW_WIDTH"/> 
	<Address_Length		value="ADDRESS_REGISTER_LENGTH"/> 
	<Address length="ADDRESS_LENGTH">
		INI_ADDRESS			
	</Address>
	<ID_Length 			value="DEVICE_ID_LENGTH"/>
	<Usercode_Length 	value="DEVICE_USERCODE_LENGTH"/>
	<BSCAN_Length value="BSCAN_REGISTER_LENGTH"/> 
	<Bscan length="BSCAN_LENGTH">
		BSCAN_DATA
	</Bscan>
	<BscanMask length="BSCAN_LENGTH">
		BSCAN_MASK
	</BscanMask>
	<TotalFuse value="TOTAL_FUSE_MAP"/>
	<PWP	value="PROGRAMING_PULSE_WIDTH"/>
	<PWV	value="VERIFY_PULSE_WIDTH"/>
	<PWE	value="ERASE_PULSE_WIDTH"/>
	<SkipRow value="1"/>
	<MDRDelay value="MDR_DELAY"/>
	<MDRIspEN value="MDR_ISPEN"/>
	<MDRTRST value="MDR_TRST"/> 
	<Instruction>
		EXTEST	 			= 0x00;
		INTEST	 			= 0x2C;
		CLAMP	 			= 0x20;
		HIGH_Z	 			= 0x18;
		BPRELOAD 			= 0x1C;
		ISC_ENABLE 			= 0x15;
		ISC_XPROGRAM_ENABLE = 0x35;
		ISC_SRAM_ENABLE 	= 0x55;
		ISC_DISABLE			= 0x1E;
		ISC_ADDRESS_SHIFT 	= 0x01;
		ISC_DATA_SHIFT 		= 0x02;
		ISC_ERASE 			= 0x03;
		ISC_PROGRAM			= 0x07;
		ISC_READ			= 0x0A;
		ISC_PROGRAM_ASIC	= 0xA6;
		ISC_READ_ASIC		= 0xAB;
		ISC_PROGRAM_USERCODE		= 0x1A;
		ISC_PROGRAM_PES = 0x0F;
		ISC_READ_PES = 0x11;
		USERCODE 			= 0x17;
		ISC_PROGRAM_SECURITY	= 0x09;
		ISC_PROGRAM_DONE 		= 0x2F;
		ISC_ERASE_DONE			= 0x24;
		ISC_DISCHARGE			= 0x14;
		IDCODE 				= 0x16;
		BYPASS				= 0xFF;
		ISC_NOOP			= 0x30;
		<!-- Alternate Instructions -->
		LSCC_PROGRAM_INCR_RTI	= 0x67;
		LSCC_READ_INCR_RTI 		= 0x6A;
		<!-- Proprietary Mode Instructions -->
      	LSCC_TRANSPARENT_ENABLE	= 0x75;
		LSCC_BITSTREAM_BURST	= 0x04;
		LSCC_RESET_ADDRESS		= 0x21;
		LSCC_REFRESH			= 0x23;
		LSCC_ERASE_ROW			= 0x05;
		LSCC_PROGRAM_CTRL0		= 0x47;
		LSCC_READ_CTRL0			= 0x4A;
		LSCC_PROGRAM_ERR_MASK	= 0x68;
		LSCC_READ_ERR_MASK		= 0x6B;
		LSCC_RESET_CRC			= 0x12;
		LSCC_READ_CRC			= 0x73;
		LSCC_READ_STATUS		= 0x53;
		<!-- IP instructions -->
		LSCC_IPA			= 0x32;
		LSCC_IPTESTA		= 0x33;
		LSCC_IPB			= 0x38;
		LSCC_IPTESTB		= 0x39;	
		<!-- Manufacturing instructions -->
		LSCC_MANUFACTURING_SHIFT = 0x80;
		LSCC_ERASE_ALL			 = 0x10;
		LSCC_PROGRAM_PES		 = 0x0F;
		LSCC_READ_PES			 = 0x11;
		LSCC_USER_LOGIC_RESET	 = 0x22;
		READ_STATUS			= 0xB2;
		PGM_STATUS			= 0x52;
		
	</Instruction>
</Parameter>
<Data>
	<DataField	name="IDTDI">
		<FieldBlock	row_width="DEVICE_ID_LENGTH">
			ID_DATA
		</FieldBlock>
	</DataField>
	<DataField	name="BSCANTDO">
		<FieldBlock	row_width="BSCAN_REGISTER_LENGTH">
			0x00000000000000000200000000000000000000000000000800000000000
			  000000000000000000000000000000000000000000000000000000000000000000
		</FieldBlock>
	</DataField>
	<DataField	name="BSCANMASK">
		<FieldBlock	row_width="BSCAN_REGISTER_LENGTH">
			0x00000000000000000200000000000000000000000000000800000000000
			  000000000000000000000000000000000000000000000000000000000000000000
		</FieldBlock>
	</DataField>
	<DataField	name="BSCANPROGRAM">
		<FieldBlock	row_width="BSCAN_REGISTER_LENGTH">
			MDR_BSCANPROGRAM
		</FieldBlock>
	</DataField>
	<DataField	name="BSCANPROGRAMMASK">
		<FieldBlock	row_width="BSCAN_REGISTER_LENGTH">
			MDR_BSCANPROGRAMMASK
		</FieldBlock>
	</DataField>
</Data>
<Operation_List>								
	"FLASH Program Trim Code"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_PROGRAM_TRIMCODE	! Program the Trim Code, 
							CHECK_STATUS ! Read the status bit,
							DISABLE ! Exit the programming mode"	;
	"FLASH Read Trim Code"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							SAVE_ID,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_READ_TRIMCODE	! Program the Trim Code, 
							DISABLE ! Exit the programming mode"	;
	"FLASH Bypass"	=	"INIT 	! Initialize";
	"FLASH Verify ID" = 	"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"Verify ID" = 		"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"FLASH Display ID" = "INIT, READ_ID, SAVE_ID";
	"FLASH Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable the programming mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 							
	"FLASH Display USERCODE"	=	"INIT, 
									 READ_ID	! Check the IDCODE,
									 SAVE_ID,
									FLASH_ENABLE	! Enable the programming mode, 
									SAVE_USERCODE,
									DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "INIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   IO_STATE ! Program Bscan register,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Program DONE bit"	=	"INIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
									 FLASH_ENABLE	! Enable the programming mode, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"FLASH Read DONE bit" = 	"INIT, 
								 READ_ID, 
								 FLASH_ENABLE	! Enable the programming mode, 
								 READ_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "INIT 	! Initialize,  
						  	 FLASH_ENABLE	! Enable programming mode, 
						  	 DIRECT_FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
			 			 		
	"FLASH Erase,Program,Verify" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								DIRECT_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
								PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
		
	"FLASH Erase,Program,Verify,Secure" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								DIRECT_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
								PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"FLASH Program"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode,
							DIRECT_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"FLASH Verify Only" =	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE,
							CHECK_STATUS ! Read the status bit, 
							VERIFY_DONE_BIT ! Verify Done Bit,
		 			 		DISABLE ! Exit the programming mode" ;
	"FLASH Erase Only"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							DIRECT_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	
	"FLASH Calculate Data CRC"	=	"INIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SAVE_ARRAY,
						             SAVE_USERCODE,
			 						 DISABLE";
	"FLASH Calculate Checksum"	=	"INIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SAVE_ARRAY,
						             SAVE_USERCODE,
			 						 DISABLE";	
	"XFLASH Calculate Checksum"	=	"INIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,  
						             SAVE_ARRAY,
						             SAVE_USERCODE,
			 						 DISABLE";				 						 		 						 
	"FLASH Read and Save"	=	"INIT, 
								 READ_ID, 
								 SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 FLASH_ENABLE, 
								 SAVE_ARRAY, 
								 SAVE_USERCODE, 
								 DISABLE";
	
	"FLASH Read Programming Status" = "INIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";
	"FLASH Capture Only" = "	INIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 							 
	"FLASH Upload to Static RAM" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	INIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
					FLASH_MDR ! Transparent Field Reconfiguration"	;
 			 								
	"XFLASH Upload to Static RAM" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"XFLASH Bypass"	=	"INIT 	! Initialize";
	"XFLASH Verify ID" = 	"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "INIT, READ_ID, SAVE_ID";
	"XFLASH Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 
	"Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 								
	"XFLASH Display USERCODE"	=	"INIT, 
									 READ_ID	! Check the IDCODE,
									 SAVE_ID,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 	SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "INIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Program DONE bit"	=	"INIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"XFLASH Read DONE bit" = 	"INIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 READ_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Read Programming Status" = "INIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	INIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
					 			 
	"XFLASH Re-Initialize" = "INIT 	! Initialize,  
						  	 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						  	 DIRECT_FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
	
	"XFLASH TransFR" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
			 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program and TransFR" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								DIRECT_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode,
			 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program USF with Static EBR" =	"	INIT 	! Initialize, 
											READ_ID	! Check the IDCODE, 
											FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
											DIRECT_FLASH_ERASE	! Erase the device, 
											CHECK_STATUS ! Read the status bit,
						 			 		PROGRAM_STATUS	! Program Fuse Map,
						 			 		PROGRAM_USERCODE	! Program USERCODE,
											CHECK_STATUS ! Read the status bit,
											FLASH_VERIFY	! Verify Fuse Map, 
											VERIFY_USERCODE		! Verify USERCODE,
						 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
											CHECK_STATUS ! Read the status bit,
						 			 		DISABLE ! Exit the programming mode"	;								
	
	"XFLASH Program USF from PROM file" =	"	INIT 	! Initialize, 
											READ_ID	! Check the IDCODE, 
											FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
											DIRECT_FLASH_ERASE	! Erase the device, 
											CHECK_STATUS ! Read the status bit,
						 			 		PROGRAM_STATUS	! Program Fuse Map,
						 			 		PROGRAM_USERCODE	! Program USERCODE,
											CHECK_STATUS ! Read the status bit,
											FLASH_VERIFY	! Verify Fuse Map, 
											VERIFY_USERCODE		! Verify USERCODE,
						 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
											CHECK_STATUS ! Read the status bit,
						 			 		DISABLE ! Exit the programming mode"	;
			 			 				 			 		
	"XFLASH Erase,Program,Verify" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								DIRECT_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								DIRECT_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"XFLASH Program"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
							DIRECT_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"XFLASH Verify Only" =	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE,
							CHECK_STATUS ! Read the status bit, 
							DISABLE ! Exit the programming mode"	;										
	"XFLASH Erase Only"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							DIRECT_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"INIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						             SAVE_ARRAY,
						             SAVE_USERCODE,
			 						 DISABLE";
	"XFLASH Read and Save"	=	"INIT, 
								 READ_ID, 
								 SAVE_ID, 
								 FLASH_TRANSPARENT_ENABLE, 
								 SAVE_ARRAY, 
								 SAVE_USERCODE, 
								 DISABLE";
								 
	"SRAM Bypass"	=	"INIT 	! Initialize";
	"SRAM Verify ID" = 	"INIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "INIT, READ_ID, SAVE_ID";
	
	"SRAM Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"INIT, READ_ID, SAVE_ID,SRAM_ENABLE,SAVE_USERCODE,DISABLE";
	
	
	"SRAM Disable Only" = "	INIT 	! Initialize, 
	 			 		DISABLE ! Exit the programming mode"	;
	 			 		
	"SRAM Enable Only" = "INIT 	! Initialize, 
						READ_ID	! Check the IDCODE,
						IO_STATE ! Program Bscan register,
						SRAM_ENABLE	! Enable SRAM programming mode"	;
						
	"SRAM Fast Program" = "	INIT 	! Initialize,   
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
						 		SRAM_ENABLE	! Enable SRAM programming mode,
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	;
	"SRAM Program,Verify" = "INIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register, 
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,	
							PROGRAM_USERCODE	! Program USERCODE,													
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit,
				 			DISABLE ! Exit the programming mode"	;
	"SRAM Erase,Program,Verify" = "	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								SRAM_ENABLE	! Enable SRAM programming mode, 
								ERASE	! Erase the device, 
								PROGRAM	! Program Fuse Map,
								VERIFY	! Verify Fuse Map, 
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								VERIFY_USERCODE		! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		DISABLE ! Exit the programming mode"	;					
	"SRAM Program,Verify,Secure"	=	"INIT 	! Initialize, 
									READ_ID	! Check the IDCODE, 
									IO_STATE ! Program Bscan register,
									SRAM_ENABLE	! Enable SRAM programming mode, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map, 
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_SECURITY ! Secure device,
				 			 		PROGRAM_DONE_BIT	! Program DONE bit, 
				 			 		DISABLE ! Exit the programming mode"	;
	
	"SRAM Erase Only"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program Only" = "	INIT 	! Initialize, 
					READ_ID	! Check the IDCODE,  
					IO_STATE ! Program Bscan register,
					SRAM_ENABLE	! Enable SRAM programming mode, 
					ERASE	! Erase the device, 
					PROGRAM	! Program Fuse Map,
					PROGRAM_USERCODE	! Program USERCODE,
					PROGRAM_DONE_BIT	! Program DONE bit,
		 			DISABLE ! Exit the programming mode"	;
	"SRAM Verify Only"	=	"	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,  
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE, 
							VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 		DISABLE ! Exit the programming mode"	;
	"Re-Initialize" = " INIT 	! Initialize,
						SRAM_ENABLE	! Enable SRAM programming mode, 
						ERASE	! Erase the device, 
	 			 		DISABLE ! Exit the programming mode"	;
	
	"SRAM Re-Initialize" = " INIT 	! Initialize,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Erase DONE bit"	=	"INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase the done bit, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program DONE bit"	=	"INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase DONE bit,
							PROGRAM_DONE_BIT	! Program DONE bit,
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Read Programming Status" = "INIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"SRAM Capture Only" = "	INIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
	"SRAM Read DONE bit"	=	"INIT 	! Initialize, 
					 READ_ID	! Check the IDCODE,
					 READ_DONE_BIT	! Erase the done bit"	;
	
	"SRAM Calculate Data CRC"	=	"INIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SAVE_ARRAY,
					             SAVE_USERCODE,
		 						 DISABLE";
	"SRAM Read and Save"	=	"INIT, 
						 READ_ID, 
						 SAVE_ID, 
						 IO_STATE ! Program Bscan register,
						 SRAM_ENABLE, 
						 SAVE_ARRAY, 
						 SAVE_USERCODE, 
						 DISABLE";
	"SRAM Refresh" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
					             
	"SRAM Read Control Register0" = "INIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 SAVE_ID,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SAVE_CONTROL0 !Read Control Register 0,
					             DISABLE";
	"SRAM Program Control Register0" = "INIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             PROGRAM_CONTROL0 ! Program Control Register 0,
					             DISABLE";			
	"Serial Program" = "	INIT 	! Initialize,   
							SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "INIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "	INIT 	! Initialize, 
								SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
													             				
	"XSRAM Bypass"	=	"	INIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "INIT, READ_ID, SAVE_ID";							
	"XSRAM Disable Only" = "	INIT 	! Initialize, 
	 			 				DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"INIT, 
								 READ_ID, 
								 SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 SRAM_TRANSPARENT_READ_ENABLE, 
								 SAVE_ARRAY, 
								 SAVE_USERCODE, 
								 DISABLE";					 
	"XSRAM Calculate Data CRC"	=	"INIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
						             SAVE_ARRAY,
						             SAVE_USERCODE,
			 						 DISABLE";
		 			 		
	"XSRAM Verify Only"	=	"	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
								VERIFY	! Verify Fuse Map, 
		 			 			VERIFY_USERCODE		! Verify USERCODE, 
		 			 			VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Verify USERCODE"	=	"	INIT 	! Initialize, 
									READ_ID	! Check the IDCODE,
									SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
									VERIFY_USERCODE		! Verify USERCODE,
			 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Read DONE bit"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
					 			SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					 			READ_DONE_BIT	! Read the done bit,
					 			DISABLE ! Exit the programming mode"	;				             
	"XSRAM Read Control Register0" = "INIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 SAVE_ID,
					 			 SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					             SAVE_CONTROL0 !Read Control Register 0,
					             DISABLE";
	"XSRAM Read Programming Status" = "INIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XSRAM Capture Only" = "	INIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;	
	"XSRAM Display USERCODE"	=	"INIT, READ_ID, SAVE_ID,SRAM_TRANSPARENT_READ_ENABLE,SAVE_USERCODE,DISABLE";						
	"Capture Only" = "	INIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;										 			 
</Operation_List>
<Operation_List label="SingleSVFOperation">
	"FLASH Bypass"	=	"SVFINIT 	! Initialize";
	"FLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";
	"Verify ID" = 		"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";  
	"FLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"FLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable PROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 							
	"FLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									 FLASH_ENABLE	! Enable PROGRAM mode, 
									 SVF_SAVE_USERCODE,
									 DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   IO_STATE ! Program Bscan register,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
									 FLASH_ENABLE	! Enable the programming mode, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"FLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 FLASH_ENABLE	! Enable programming mode, 
						  	 FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
	
	"FLASH Erase,Program,Verify" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map,
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"Erase,Program,Verify" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map,
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"Program Only" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
									
	"FLASH Erase,Program,Verify,Secure" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"Erase,Program,Verify,Secure"	=	"	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
		
	"FLASH Program"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode,
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"FLASH Verify Only" =	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit,
 							VERIFY_DONE_BIT ! Verify Done Bit,
							DISABLE ! Exit the programming mode"  ;	
	"Verify Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit, 
		 			 		DISABLE ! Exit the programming mode"	;		 			 		
	
	"FLASH Erase Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	"Erase Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;	

	"FLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
	"FLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
	"XFLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";			 						 			 						 
	"FLASH Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 FLASH_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	
	"FLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"FLASH Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
	"FLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
					FLASH_MDR ! Transparent Field Reconfiguration"	;						
	"XFLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";				 			 							 
	"XFLASH Bypass"	=	"SVFINIT 	! Initialize";
	"XFLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"XFLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 
	"Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 								
	"XFLASH Display USERCODE"	=	"SVFINIT, 
								     READ_ID	! Check the IDCODE,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"XFLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Re-Initialize" = "SVF_INIT 	! Initialize,  
						  	 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						  	 FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
	
	"XFLASH TransFR" = "	SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE, 
	 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	"XFLASH Program and TransFR" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode,
			 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;	 			 		
	
	"XFLASH Program USF with Static EBR" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XFLASH mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	"XFLASH Program USF from PROM file"	= "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XFLASH mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;		 			 		
				 			 		
	"XFLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"XFLASH Program"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"XFLASH Verify Only" =	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit, 
							DISABLE ! Exit the programming mode"	;	
	"XFLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
	"XFLASH Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 FLASH_TRANSPARENT_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	"XFLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
	"SRAM Bypass"	=	"SVFINIT 	! Initialize";
	"SRAM Verify ID" = 	"SVFINIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"SRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"SVFINIT, READ_ID, SRAM_ENABLE,SVF_SAVE_USERCODE,DISABLE";
	"SRAM Disable Only" = "	SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"SRAM Enable Only" = "SVFINIT 	! Initialize, 
						  READ_ID	! Check the IDCODE,
						  IO_STATE ! Program Bscan register,
						  SRAM_ENABLE	! Enable SRAM programming mode"	;
	"SRAM Fast Program" = "	SVFINIT 	! Initialize,   
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
						 		SRAM_ENABLE	! Enable the programming mode, 
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	;
	"SRAM Program,Verify" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,  
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit,
				 			DISABLE ! Exit the programming mode"	;
	"SRAM Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								SRAM_ENABLE	! Enable SRAM programming mode, 
								ERASE	! Erase the device, 
								PROGRAM	! Program Fuse Map,
								VERIFY	! Verify Fuse Map, 
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								VERIFY_USERCODE		! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		DISABLE ! Exit the programming mode"	;	
	"SRAM Program,Verify,Secure"	=	"SVFINIT 	! Initialize, 
									READ_ID	! Check the IDCODE, 
									IO_STATE ! Program Bscan register,
									SRAM_ENABLE	! Enable SRAM programming mode, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map, 
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_SECURITY ! Secure device,
				 			 		PROGRAM_DONE_BIT	! Program DONE bit, 
				 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Erase Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program Only" = "SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE,  
					IO_STATE ! Program Bscan register,
					SRAM_ENABLE	! Enable SRAM programming mode, 
					ERASE	! Erase the device, 
					PROGRAM	! Program Fuse Map,
					PROGRAM_USERCODE	! Program USERCODE,
					PROGRAM_DONE_BIT	! Program DONE bit,
		 			DISABLE ! Exit the programming mode"	;
	"SRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,  
							SRAM_ENABLE	! Enable SRAM programming mode, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE, 
							VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 		DISABLE ! Exit the programming mode"	;
	"Re-Initialize" = "SVFINIT 	! Initialize,
					   SRAM_ENABLE	! Enable SRAM programming mode, 
					   ERASE	! Erase the device,
					   DISABLE ! Exit the programming mode"	;
	"SRAM Re-Initialize" = "SVFINIT 	! Initialize,
						   SRAM_ENABLE	! Enable SRAM programming mode, 
						   ERASE	! Erase the device,
						   DISABLE ! Exit the programming mode"	;
	"SRAM Erase DONE bit"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase the done bit, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program DONE bit"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase DONE bit,
							PROGRAM_DONE_BIT	! Program DONE bit,
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
					 READ_ID	! Check the IDCODE,
					 SVF_SAVE_DONE_BIT	! Erase the done bit"	;
	
	"SRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SVF_SAVE_CONTROL0,
					             SVF_SAVE_ARRAY,
					             SVF_SAVE_USERCODE,
		 						 DISABLE";
	"SRAM Read and Save"	=	"SVFINIT, 
						 		 READ_ID, 
								 SVF_SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 SRAM_ENABLE, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	"SRAM Refresh" = " SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
					             
	"SRAM Read Control Register0" = "SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SVF_SAVE_CONTROL0 !Read Control Register 0,
					             DISABLE";
	"SRAM Program Control Register0" = "SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             PROGRAM_CONTROL0 ! Program Control Register 0,
					             DISABLE";	
	"SRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";							
	"SRAM Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;
						
	"Serial Program" = "	SVFINIT 	! Initialize,   
							SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "SVFINIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "SVFINIT 	! Initialize, 
								SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
																			 			 
	"XSRAM Bypass"	=	"SVFINIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "SVFINIT, READ_ID, SAVE_ID";							
	"XSRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
					!		SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 SRAM_TRANSPARENT_READ_ENABLE, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";					 
	"XSRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
						 			 SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
						             SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
		 			 		
	"XSRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
							VERIFY	! Verify Fuse Map, 
		 			 		VERIFY_USERCODE		! Verify USERCODE, 
		 			 		VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 		DISABLE ! Exit the programming mode"	;
	"XSRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		DISABLE ! Exit the programming mode"	;
	"XSRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
					 			SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					 			SVF_SAVE_DONE_BIT	! Read the done bit,
					 			DISABLE ! Exit the programming mode"	;				             
	"XSRAM Read Control Register0" = "SVFINIT ! Initialize,
								 	READ_ID	! Check the IDCODE,
					 			 	SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					             	SVF_SAVE_CONTROL0 !Read Control Register 0,
					             	DISABLE";
	"XSRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XSRAM Capture Only" = "SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;
	"XSRAM Display USERCODE"	=	"SVFINIT, READ_ID, SRAM_TRANSPARENT_READ_ENABLE,SVF_SAVE_USERCODE,DISABLE";								
	"Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;									 			 
</Operation_List>
<Operation_List label="TurboOperation">
	"FLASH Bypass"	=	"INIT 	! Initialize";
	"FLASH Verify ID" = 	"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"Verify ID" = 		"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"FLASH Display ID" = "INIT, READ_ID, SAVE_ID";
	"FLASH Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable PROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 								
	"FLASH Display USERCODE"	=	"INIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_ENABLE	! Enable PROGRAM mode, 
								 	SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "INIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"INIT 	! Initialize, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit"	;
	"FLASH Program DONE bit"	=	"INIT 	! Initialize, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"FLASH Read DONE bit" = 	"INIT, 
								 READ_ID, 
								 FLASH_ENABLE	! Enable the PROGRAM mode, 
								 READ_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "INIT 	! Initialize,  
						  	 FLASH_ERASE	! Erase the device"	;
	
	"FLASH Erase,Program,Verify" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE, 
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map,
								VERIFY_USERCODE	! Verify USERCODE,  
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
		
	"FLASH Erase,Program,Verify,Secure" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE, 
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	
	"FLASH Program"	=	"	INIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,  
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"FLASH Verify Only" =	"	INIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit"	;
	"FLASH Erase Only"	=	"	INIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	
	"FLASH Calculate Data CRC"	=	"INIT ! Initialize,
									 SAVE_ARRAY,
						             SAVE_USERCODE";
	"FLASH Calculate Checksum"	=	"INIT ! Initialize,
									 SAVE_ARRAY,
						             SAVE_USERCODE";
	"XFLASH Calculate Checksum"	=	"INIT ! Initialize,
									 SAVE_ARRAY,
						             SAVE_USERCODE";						             						             
	"FLASH Read and Save"	=	"INIT, 
								 FLASH_ENABLE, 
								 SAVE_ARRAY, 
								 SAVE_USERCODE";
	
	"FLASH Read Programming Status" = "INIT ! Initialize,
					 			 CAPTURE";	
	"FLASH Capture Only" = "	INIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;	
	"FLASH Upload to Static RAM" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	INIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;						
	"XFLASH Upload to Static RAM" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";												 			 							 
	"XFLASH Bypass"	=	"INIT 	! Initialize";
	"XFLASH Verify ID" = 	"INIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "INIT, READ_ID, SAVE_ID";
	"XFLASH Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 
	"Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 								
	"XFLASH Display USERCODE"	=	"INIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 	SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "INIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"INIT 	! Initialize, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit"	;
	"XFLASH Program DONE bit"	=	"INIT 	! Initialize, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"XFLASH Read DONE bit" = 	"INIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 READ_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Re-Initialize" = "INIT 	! Initialize,  
						  	 FLASH_ERASE	! Erase the device"	;
	
	"XFLASH TransFR" = "	INIT 	! Initialize, 
						READ_ID	! Check the IDCODE, 
			 			FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program and TransFR" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
								DISABLE ! Exit the programming mode,
								FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program USF with Static EBR" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	"XFLASH Program USF from PROM file"	= "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;								
																
	"XFLASH Erase,Program,Verify" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "	INIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	
	"XFLASH Program"	=	"	INIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"XFLASH Verify Only" =	"	INIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map,
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit"	;
	"XFLASH Erase Only"	=	"	INIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"INIT ! Initialize,
									 SAVE_ARRAY,
						             SAVE_USERCODE";
	"XFLASH Read and Save"	=	"INIT, 
								 SAVE_ARRAY, 
								 SAVE_USERCODE";
	"XFLASH Read Programming Status" = "INIT ! Initialize,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	INIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;					 			 
	"SRAM Bypass"	=	"INIT 	! Initialize";
	"SRAM Verify ID" = 	"INIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "INIT, READ_ID, SAVE_ID";
	
	"SRAM Verify USERCODE"	=	"INIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"INIT, READ_ID, SAVE_USERCODE";
	
	"SRAM Disable Only" = "	INIT 	! Initialize, 
	 			 		DISABLE ! Exit the programming mode"	;
	 			 		
	"SRAM Enable Only" = "INIT 	! Initialize, 
						READ_ID	! Check the IDCODE,
						SRAM_ENABLE	! Enable SRAM programming mode"	;
						
	"SRAM Fast Program" = "	INIT 	! Initialize,
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE"	;
	"SRAM Program,Verify" = "INIT 	! Initialize,
							ERASE	! Erase the device,  
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase,Program,Verify" = "	INIT 	! Initialize, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map,
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;					
	"SRAM Program,Verify,Secure"	=	"INIT 	! Initialize, 
										ERASE	! Erase the device, 
										PROGRAM	! Program Fuse Map, 
										VERIFY	! Verify Fuse Map, 
					 			 		PROGRAM_USERCODE	! Program USERCODE,
										VERIFY_USERCODE		! Verify USERCODE, 
					 			 		PROGRAM_SECURITY ! Secure device,
					 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase Only"	=	"	INIT 	! Initialize, 
							ERASE	! Erase the device"	;
	"SRAM Program Only" = 	"INIT 	! Initialize, 
						ERASE	! Erase the device, 
						PROGRAM	! Program Fuse Map,
						PROGRAM_USERCODE	! Program USERCODE,
						PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Verify Only"	=	"INIT 	! Initialize, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE,
							VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"Re-Initialize" = " INIT 	! Initialize,
						ERASE	! Erase the device"	;	
	"SRAM Re-Initialize" = " INIT 	! Initialize,
							ERASE	! Erase the device"	;
	"SRAM Erase DONE bit"	=	"INIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase the done bit"	;
	"SRAM Program DONE bit"	=	"INIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase DONE bit,
								PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Read DONE bit"	=	"INIT 	! Initialize, 
								 READ_DONE_BIT	! Erase the done bit"	;
	"SRAM Calculate Data CRC"	=	"INIT ! Initialize,
									 SAVE_CONTROL0,
						             SAVE_ARRAY,
						             SAVE_USERCODE";
	"SRAM Read and Save"	=	"INIT, 
								 SAVE_CONTROL0,
								 SAVE_ARRAY, 
								 SAVE_USERCODE";
	"SRAM Refresh" = " 	INIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
	"SRAM Read Control Register0" = "INIT ! Initialize,
									 SAVE_CONTROL0 !Read Control Register 0";
	"SRAM Program Control Register0" = "INIT ! Initialize,
								 		PROGRAM_CONTROL0 ! Program Control Register 0";	
	"SRAM Read Programming Status" = "INIT ! Initialize,
					 			 CAPTURE";									 								
	"SRAM Capture Only" = "	INIT 	! Initialize,
						IO_STATE ! Capture Bscan register"	;
	
	"Serial Program" = "	INIT 	! Initialize,   
							SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "INIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "INIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "	INIT 	! Initialize, 
								SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
													 			 
	"XSRAM Bypass"	=	"	INIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"	INIT 	! Initialize, 
								READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "INIT, READ_ID, SAVE_ID";								
	"XSRAM Disable Only" = "	INIT 	! Initialize, 
	 			 				DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "	INIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
					!		SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"INIT, 
								 SAVE_CONTROL0,
								 SAVE_ARRAY, 
								 SAVE_USERCODE";					 
	"XSRAM Calculate Data CRC"	=	"INIT ! Initialize,
									 SAVE_CONTROL0,
						             SAVE_ARRAY,
						             SAVE_USERCODE";
	"XSRAM Verify Only"	=	"	INIT 	! Initialize, 
								VERIFY	! Verify Fuse Map, 
		 			 			VERIFY_USERCODE		! Verify USERCODE,
		 			 			VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"XSRAM Verify USERCODE"	=	"	INIT 	! Initialize, 
									VERIFY_USERCODE		! Verify USERCODE"	;
	"XSRAM Read DONE bit"	=	"INIT 	! Initialize, 
								READ_DONE_BIT	! Read the done bit"	;				             
	"XSRAM Read Control Register0" = "INIT ! Initialize,
									 SAVE_CONTROL0 !Read Control Register 0";
	"XSRAM Read Programming Status" = "INIT ! Initialize,
					 			 CAPTURE";										 
	"XSRAM Capture Only" = "	INIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;	
	"XSRAM Display USERCODE"	=	"INIT, READ_ID, SAVE_USERCODE";								
	"Capture Only" = "	INIT 	! Initialize,
						IO_STATE ! Capture Bscan register"	;												 			 
</Operation_List>
<Operation_List label="ChainSVFOperation">
	"FLASH Bypass"	=	"SVFINIT 	! Initialize";
	"FLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";
	"Verify ID" = 		"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";  
	"FLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"FLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable PROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 							
	"FLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_ENABLE	! Enable PROGRAM mode, 
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit"	;
	"FLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"FLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_ENABLE	! Enable PROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 FLASH_ERASE	! Erase the device"	;
	
	"FLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	
	"FLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	
	
	"FLASH Program"	=	"SVFINIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"FLASH Verify Only" =	"SVFINIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit"	;
	
	"FLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	
	"FLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"FLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XFLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";						             						             
	"FLASH Read and Save"	=	"SVFINIT, 
								 FLASH_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"FLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";									 
	"FLASH Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;					 			 
	"FLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;						
	"XFLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";							 
	"XFLASH Bypass"	=	"SVFINIT 	! Initialize";
	"XFLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"XFLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 	
	"Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 																 
	"XFLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								FLASH_ERASE_DONE_BIT	! Erase the done bit"	;
	"XFLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"XFLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 FLASH_ERASE	! Erase the device"	;
	
	"XFLASH TransFR" = "	SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE, 
	 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program and TransFR" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
								DISABLE ! Exit the programming mode,
								FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program USF with Static EBR" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	"XFLASH Program USF from PROM file" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
															
	"XFLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		FLASH_PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	
	"XFLASH Program"	=	"SVFINIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							FLASH_PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"XFLASH Verify Only" =	"SVFINIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit"	;
	"XFLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XFLASH Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"XFLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;					 			 								 
	"SRAM Bypass"	=	"SVFINIT 	! Initialize";
	"SRAM Verify ID" = 	"SVFINIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"SRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"SVFINIT, READ_ID, SVF_SAVE_USERCODE";
	"SRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 		   DISABLE ! Exit the programming mode"	;
	 			 		
	"SRAM Enable Only" = "SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE,
						SRAM_ENABLE	! Enable SRAM programming mode"	;
						
	"SRAM Fast Program" = "	SVFINIT 	! Initialize,
								INIT	! Initialize the device,
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE"	;
	"SRAM Program,Verify" = "SVFINIT 	! Initialize,
							ERASE	! Erase the device,  
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase,Program,Verify" = "SVFINIT 	! Initialize, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map,
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;					
	"SRAM Program,Verify,Secure"	=	"SVFINIT 	! Initialize,
										ERASE	! Erase the device,  
										PROGRAM	! Program Fuse Map, 
										VERIFY	! Verify Fuse Map, 
					 			 		PROGRAM_USERCODE	! Program USERCODE,
										VERIFY_USERCODE		! Verify USERCODE, 
					 			 		PROGRAM_SECURITY ! Secure device,
					 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase Only"	=	"SVFINIT 	! Initialize, 
							ERASE	! Erase the device"	;
	"SRAM Program Only" = 	"SVFINIT 	! Initialize, 
						ERASE	! Erase the device, 
						PROGRAM	! Program Fuse Map,
						PROGRAM_USERCODE	! Program USERCODE,
						PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE,
							VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"Re-Initialize" = " SVFINIT 	! Initialize,
						ERASE	! Erase the device"	;	
	"SRAM Re-Initialize" = " SVFINIT 	! Initialize,
							ERASE	! Erase the device"	;
	"SRAM Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase the done bit"	;
	"SRAM Program DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase DONE bit,
								PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								 SVF_SAVE_DONE_BIT	! Erase the done bit"	;
	"SRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"SRAM Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"SRAM Refresh" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
	"SRAM Read Control Register0" = "SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0 !Read Control Register 0";
	"SRAM Program Control Register0" = "SVFINIT ! Initialize,
								 		PROGRAM_CONTROL0 ! Program Control Register 0";	
	"SRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";									 								
	"SRAM Capture Only" = "	SVFINIT 	! Initialize,
							IO_STATE ! Capture Bscan register"	;
	
	"Serial Program" = "SVFINIT 	! Initialize,   
						SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "SVFINIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "SVFINIT 	! Initialize, 
							SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
																				 			 
	"XSRAM Bypass"	=	"SVFINIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "SVFINIT, READ_ID, SAVE_ID";							
	"XSRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
					!		SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";					 
	"XSRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XSRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							VERIFY	! Verify Fuse Map, 
		 			 		VERIFY_USERCODE		! Verify USERCODE,
		 			 		VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"XSRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								VERIFY_USERCODE		! Verify USERCODE"	;
	"XSRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								SVF_SAVE_DONE_BIT	! Read the done bit"	;				             
	"XSRAM Read Control Register0" = "SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0 !Read Control Register 0";
	"XSRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";										
	"XSRAM Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;
	"XSRAM Display USERCODE"	=	"SVFINIT, READ_ID, SVF_SAVE_USERCODE";									
	"Capture Only" = "	INIT 	! Initialize,
						IO_STATE ! Capture Bscan register"	;												 			 
</Operation_List>
<Operation_List label="SingleSVFOperationRevC">
	"FLASH Bypass"	=	"SVFINIT 	! Initialize";
	"FLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";
 	"Verify ID" = 		"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"FLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"FLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable PROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 							
	"FLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									 FLASH_ENABLE	! Enable PROGRAM mode, 
									 SVF_SAVE_USERCODE,
									 DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   IO_STATE ! Program Bscan register,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
									 FLASH_ENABLE	! Enable the programming mode, 
									 PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"FLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 FLASH_ENABLE	! Enable programming mode, 
						  	 SVF_FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
	
	"FLASH Erase,Program,Verify" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map,
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"Erase,Program,Verify" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map,
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;	
	"Program Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode,
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							SVF_PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;			 			 		
	"FLASH Erase,Program,Verify,Secure" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"Erase,Program,Verify,Secure" = "	SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								FLASH_ENABLE	! Enable the programming mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	"FLASH Program"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode,
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							SVF_PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"FLASH Verify Only" =	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							VERIFY_DONE_BIT    ! Verify Done Bit,
		 			 		DISABLE ! Exit the programming mode"	;
	"Verify Only" =	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE, 
							CHECK_STATUS ! Read the status bit,
							VERIFY_DONE_BIT    ! Verify Done Bit,
		 			 		DISABLE ! Exit the programming mode"	;		 			 		
	"FLASH Erase Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	"Erase Only"	=	"	SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							FLASH_ENABLE	! Enable the programming mode, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
	"FLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
	"FLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 IO_STATE ! Program Bscan register,
						 			 FLASH_ENABLE	! Enable programming mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";	
	"XFLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";				 						 		 						 
	"FLASH Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 FLASH_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	
	"FLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"FLASH Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
	"FLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"XFLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;										 			 							 
	"XFLASH Bypass"	=	"SVFINIT 	! Initialize";
	"XFLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"XFLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 
	"Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 								
	"XFLASH Display USERCODE"	=	"SVFINIT, 
								     READ_ID	! Check the IDCODE,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								ERASE_DONE_BIT	! Erase the done bit, 
		 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 READ_ID	! Check the IDCODE,
									  FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
									 PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit,
		 			 				 DISABLE ! Exit the programming mode"	;
	"XFLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Re-Initialize" = "SVF_INIT 	! Initialize,  
						  	 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						  	 SVF_FLASH_ERASE	! Erase the device, 
	 			 		  	 DISABLE ! Exit the programming mode"	;
	
	"XFLASH TransFR" = "	SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE, 
	 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program and TransFR" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode,
			 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program USF with Static EBR" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"XFLASH Program USF from PROM file" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
				 			 				 			 		
	"XFLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit,
			 			 		DISABLE ! Exit the programming mode"	;
	
	"XFLASH Program"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							SVF_PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							PROGRAM_DONE_BIT	! Program DONE bit,
							DISABLE ! Exit the programming mode"	;		
	"XFLASH Verify Only" =	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit, 
		 			 		DISABLE ! Exit the programming mode"	;
	"XFLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
		 			 		DISABLE ! Exit the programming mode"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
									 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
	"XFLASH Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 FLASH_TRANSPARENT_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	"XFLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;					 			 
	"SRAM Bypass"	=	"SVFINIT 	! Initialize";
	"SRAM Verify ID" = 	"SVFINIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"SRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"SVFINIT, READ_ID, SRAM_ENABLE,SVF_SAVE_USERCODE,DISABLE";
	"SRAM Disable Only" = "	SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"SRAM Enable Only" = "SVFINIT 	! Initialize, 
						  READ_ID	! Check the IDCODE,
						  IO_STATE ! Program Bscan register,
						  SRAM_ENABLE	! Enable SRAM programming mode"	;
	"SRAM Fast Program" = "	SVFINIT 	! Initialize,   
								READ_ID	! Check the IDCODE,
								IO_STATE ! Program Bscan register,
						 		SRAM_ENABLE	! Enable the programming mode, 
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	;
	"SRAM Program,Verify" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,  
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit,
				 			DISABLE ! Exit the programming mode"	;
	"SRAM Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE, 
								IO_STATE ! Program Bscan register,
								SRAM_ENABLE	! Enable SRAM programming mode, 
								ERASE	! Erase the device, 
								PROGRAM	! Program Fuse Map,
								VERIFY	! Verify Fuse Map, 
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								VERIFY_USERCODE		! Verify USERCODE, 
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		DISABLE ! Exit the programming mode"	;					
	"SRAM Program,Verify,Secure"	=	"SVFINIT 	! Initialize, 
									READ_ID	! Check the IDCODE, 
									IO_STATE ! Program Bscan register,
									SRAM_ENABLE	! Enable SRAM programming mode, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map, 
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_SECURITY ! Secure device,
				 			 		PROGRAM_DONE_BIT	! Program DONE bit, 
				 			 		DISABLE ! Exit the programming mode"	;
	
	"SRAM Erase Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE	! Erase the device, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program Only" = "SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE,  
					IO_STATE ! Program Bscan register,
					SRAM_ENABLE	! Enable SRAM programming mode, 
					ERASE	! Erase the device, 
					PROGRAM	! Program Fuse Map,
					PROGRAM_USERCODE	! Program USERCODE,
					PROGRAM_DONE_BIT	! Program DONE bit,
		 			DISABLE ! Exit the programming mode"	;
	"SRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,  
							SRAM_ENABLE	! Enable SRAM programming mode, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE, 
							VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 		DISABLE ! Exit the programming mode"	;
	"Re-Initialize" = "SVFINIT 	! Initialize,
					   SRAM_ENABLE	! Enable SRAM programming mode, 
					   ERASE	! Erase the device,
					   DISABLE ! Exit the programming mode"	;
	"SRAM Re-Initialize" = "SVFINIT 	! Initialize,
						   SRAM_ENABLE	! Enable SRAM programming mode, 
						   ERASE	! Erase the device,
						   DISABLE ! Exit the programming mode"	;
	"SRAM Erase DONE bit"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase the done bit, 
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Program DONE bit"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
							IO_STATE ! Program Bscan register,
							SRAM_ENABLE	! Enable SRAM programming mode, 
							ERASE_DONE_BIT	! Erase DONE bit,
							PROGRAM_DONE_BIT	! Program DONE bit,
		 			 		DISABLE ! Exit the programming mode"	;
	"SRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
					 READ_ID	! Check the IDCODE,
					 SVF_SAVE_DONE_BIT	! Erase the done bit"	;
	
	"SRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SVF_SAVE_CONTROL0,
					             SVF_SAVE_ARRAY,
					             SVF_SAVE_USERCODE,
		 						 DISABLE";
	"SRAM Read and Save"	=	"SVFINIT, 
						 		 READ_ID, 
								 SVF_SAVE_ID, 
								 IO_STATE ! Program Bscan register,
								 SRAM_ENABLE, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";
	"SRAM Refresh" = " SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
					             
	"SRAM Read Control Register0" = "SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             SVF_SAVE_CONTROL0 !Read Control Register 0,
					             DISABLE";
	"SRAM Program Control Register0" = "SVFINIT ! Initialize,
								 READ_ID	! Check the IDCODE,
								 IO_STATE ! Program Bscan register,
					 			 SRAM_ENABLE	! Enable SRAM programming mode, 
					             PROGRAM_CONTROL0 ! Program Control Register 0,
					             DISABLE";	
	"SRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";							
	"SRAM Capture Only" = "	SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;
	
	"Serial Program" = "SVFINIT 	! Initialize,   
						SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "SVFINIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "SVFINIT 	! Initialize, 
								SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
																			 			 
	"XSRAM Bypass"	=	"SVFINIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "SVFINIT, READ_ID, SAVE_ID";							
	"XSRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
					!		SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"SVFINIT, 
								 READ_ID, 
								 SVF_SAVE_ID, 
								 SRAM_TRANSPARENT_READ_ENABLE, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE, 
								 DISABLE";					 
	"XSRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 READ_ID	! Check the IDCODE,
						 			 SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
						             SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE,
			 						 DISABLE";
		 			 		
	"XSRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE, 
							SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
							VERIFY	! Verify Fuse Map, 
		 			 		VERIFY_USERCODE		! Verify USERCODE, 
		 			 		VERIFY_DONE_BIT   ! Verify the DONE fuse,
		 			 		DISABLE ! Exit the programming mode"	;
	"XSRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode, 
								VERIFY_USERCODE		! Verify USERCODE,
			 			 		DISABLE ! Exit the programming mode"	;
	"XSRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
					 			SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					 			SVF_SAVE_DONE_BIT	! Read the done bit,
					 			DISABLE ! Exit the programming mode"	;				             
	"XSRAM Read Control Register0" = "SVFINIT ! Initialize,
								 	READ_ID	! Check the IDCODE,
					 			 	SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT programming mode,  
					             	SVF_SAVE_CONTROL0 !Read Control Register 0,
					             	DISABLE";
	"XSRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 READ_ID	! Check the IDCODE,
					 			 CAPTURE";	
	"XSRAM Capture Only" = "SVFINIT 	! Initialize,
						READ_ID	! Check the IDCODE,
						IO_STATE ! Capture Bscan register"	;	
	"XSRAM Display USERCODE"	=	"SVFINIT, READ_ID, SRAM_TRANSPARENT_READ_ENABLE,SVF_SAVE_USERCODE,DISABLE";							
	"Capture Only" = "	INIT 	! Initialize,
						IO_STATE ! Capture Bscan register"	;									 			 
</Operation_List>
<Operation_List label="ChainSVFOperationRevC">
	"FLASH Bypass"	=	"SVFINIT 	! Initialize";
	"FLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";
	"Verify ID" = 		"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE";  
	"FLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"FLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_ENABLE	! Enable PROGRAM mode, 
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 							
	"FLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_ENABLE	! Enable PROGRAM mode, 
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"FLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"FLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_ENABLE	! Enable the programming mode"	;
	"FLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase the done bit"	;
	"FLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"FLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_ENABLE	! Enable PROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"FLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 SVF_FLASH_ERASE	! Erase the device"	;
	
	"FLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	"Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	"Program Only" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;									
	"FLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	"Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	"FLASH Program"	=	"SVFINIT 	! Initialize, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							SVF_PROGRAM_STATUS	! Program Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE, 
							CHECK_STATUS ! Read the status bit, 
							PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"FLASH Verify Only" =	"SVFINIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit"	;
	"Verify Only" =	"SVFINIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit"	;							
	"FLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	"Erase Only"	=	"SVFINIT 	! Initialize, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
	"FLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"FLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XFLASH Calculate Checksum"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";						             						             
	"FLASH Read and Save"	=	"SVFINIT, 
								 FLASH_ENABLE, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"FLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";									 
	"FLASH Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;					 			 
	"FLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";
	"FLASH TransFR" = "	SVFINIT 	! Initialize, 
					READ_ID	! Check the IDCODE, 
 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;						
	"XFLASH Upload to Static RAM" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						UPLOAD_FUNCTION ! Uploaded";							 
	"XFLASH Bypass"	=	"SVFINIT 	! Initialize";
	"XFLASH Verify ID" = 	"SVFINIT 	! Initialize, 
						 	READ_ID ! Check the IDCODE"; 
	"XFLASH Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"XFLASH Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	; 
	"Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								VERIFY_USERCODE		! Verify USERCODE,
								DISABLE ! Exit the programming mode"	;																 
	"XFLASH Display USERCODE"	=	"SVFINIT, 
									 READ_ID	! Check the IDCODE,
									FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode,
								 	SVF_SAVE_USERCODE,
								 	DISABLE ! Exit the programming mode";
	"XFLASH Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XFLASH Enable Only" = "SVFINIT 	! Initialize, 
						   READ_ID	! Check the IDCODE,
						   FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode"	;
	"XFLASH Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase the done bit"	;
	"XFLASH Program DONE bit"	=	"SVFINIT 	! Initialize, 
									 PROGRAM_DONE_BIT	! Program DONE bit,
							   		 CHECK_STATUS ! Read the status bit"	;
	"XFLASH Read DONE bit" = 	"SVFINIT, 
								 READ_ID, 
								 FLASH_TRANSPARENT_ENABLE	! Enable XPROGRAM mode, 
								 SVF_SAVE_DONE_BIT,
								 DISABLE ! Exit the programming mode";
	
	"XFLASH Re-Initialize" = "SVFINIT 	! Initialize,  
						  	 SVF_FLASH_ERASE	! Erase the device"	;
	
	"XFLASH TransFR" = "	SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE, 
	 			 		FLASH_MDR ! Transparent Field Reconfiguration"	;
	
	"XFLASH Program and TransFR" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit,
								DISABLE ! Exit the programming mode,
								FLASH_MDR ! Transparent Field Reconfiguration"	;
	"XFLASH Program USF with Static EBR" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
	"XFLASH Program USF from PROM file"	= "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS_EBR	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;														
															
	"XFLASH Erase,Program,Verify" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
								CHECK_STATUS ! Read the status bit"	;
		
	"XFLASH Erase,Program,Verify,Secure" = "SVFINIT 	! Initialize, 
								SVF_FLASH_ERASE	! Erase the device, 
								CHECK_STATUS ! Read the status bit,
			 			 		SVF_PROGRAM_STATUS	! Program Fuse Map,
			 			 		PROGRAM_USERCODE	! Program USERCODE,
								CHECK_STATUS ! Read the status bit,
								FLASH_VERIFY	! Verify Fuse Map, 
								VERIFY_USERCODE	! Verify USERCODE,
			 			 		PROGRAM_DONE_BIT	! Program DONE bit,
			 			 		PROGRAM_SECURITY ! Secure device,
			 			 		CHECK_STATUS ! Read the status bit"	;
	
	"XFLASH Program"	=	"SVFINIT 	! Initialize, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit,
							SVF_PROGRAM_STATUS	! Program Fuse Map, 
							PROGRAM_USERCODE	! Program USERCODE,
							CHECK_STATUS ! Read the status bit, 
							PROGRAM_DONE_BIT	! Program DONE bit"	;		
	"XFLASH Verify Only" =	"SVFINIT 	! Initialize, 
							FLASH_VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE	! Verify USERCODE,
							CHECK_STATUS ! Read the status bit"	;
	"XFLASH Erase Only"	=	"SVFINIT 	! Initialize, 
							SVF_FLASH_ERASE	! Erase the device, 
							CHECK_STATUS ! Read the status bit"	;
		 			 			
	
	"XFLASH Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XFLASH Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"XFLASH Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";	
	"XFLASH Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;					 			 								 
	"SRAM Bypass"	=	"SVFINIT 	! Initialize";
	"SRAM Verify ID" = 	"SVFINIT 	! Initialize, 
						 READ_ID ! Check the IDCODE"; 
	"SRAM Display ID" = "SVFINIT, READ_ID, SVF_SAVE_ID";
	"SRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								READ_ID	! Check the IDCODE,
								VERIFY_USERCODE		! Verify USERCODE"	; 
	"SRAM Display USERCODE"	=	"SVFINIT, READ_ID, SVF_SAVE_USERCODE";
	"SRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 		   DISABLE ! Exit the programming mode"	;
	 			 		
	"SRAM Enable Only" = "SVFINIT 	! Initialize, 
						READ_ID	! Check the IDCODE,
						SRAM_ENABLE	! Enable SRAM programming mode"	;
						
	"SRAM Fast Program" = "	SVFINIT 	! Initialize,
								INIT	! Initialize the device,
								ERASE	! Erase the device, 
								BURST_PROGRAM	! Program Fuse Map,
								VERIFY_USERCODE		! Verify USERCODE"	;
	"SRAM Program,Verify" = "SVFINIT 	! Initialize,
							ERASE	! Erase the device,  
							PROGRAM	! Program Fuse Map,
							VERIFY	! Verify Fuse Map,
							PROGRAM_USERCODE	! Program USERCODE,
							VERIFY_USERCODE		! Verify USERCODE, 
							PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase,Program,Verify" = "SVFINIT 	! Initialize, 
									ERASE	! Erase the device, 
									PROGRAM	! Program Fuse Map,
									VERIFY	! Verify Fuse Map, 
				 			 		PROGRAM_USERCODE	! Program USERCODE,
									VERIFY_USERCODE		! Verify USERCODE, 
				 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;					
	"SRAM Program,Verify,Secure"	=	"SVFINIT 	! Initialize,
										ERASE	! Erase the device,  
										PROGRAM	! Program Fuse Map, 
										VERIFY	! Verify Fuse Map, 
					 			 		PROGRAM_USERCODE	! Program USERCODE,
										VERIFY_USERCODE		! Verify USERCODE, 
					 			 		PROGRAM_SECURITY ! Secure device,
					 			 		PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Erase Only"	=	"SVFINIT 	! Initialize, 
							ERASE	! Erase the device"	;
	"SRAM Program Only" = 	"SVFINIT 	! Initialize, 
						ERASE	! Erase the device, 
						PROGRAM	! Program Fuse Map,
						PROGRAM_USERCODE	! Program USERCODE,
						PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							VERIFY	! Verify Fuse Map, 
							VERIFY_USERCODE		! Verify USERCODE,
							VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"Re-Initialize" = " SVFINIT 	! Initialize,
						ERASE	! Erase the device"	;	
	"SRAM Re-Initialize" = " SVFINIT 	! Initialize,
							ERASE	! Erase the device"	;
	"SRAM Erase DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase the done bit"	;
	"SRAM Program DONE bit"	=	"SVFINIT 	! Initialize, 
								ERASE_DONE_BIT	! Erase DONE bit,
								PROGRAM_DONE_BIT	! Program DONE bit"	;
	"SRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								 SVF_SAVE_DONE_BIT	! Erase the done bit"	;
	"SRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"SRAM Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";
	"SRAM Refresh" = " 	SVFINIT !Initialize,
						READ_ID !Check the IDCODE,
						REFRESH_FUNCTION ! Refresh";
	"SRAM Read Control Register0" = "SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0 !Read Control Register 0";
	"SRAM Program Control Register0" = "SVFINIT ! Initialize,
								 		PROGRAM_CONTROL0 ! Program Control Register 0";	
	"SRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";									 								
	"SRAM Capture Only" = "	SVFINIT 	! Initialize,
							IO_STATE ! Capture Bscan register"	;	
	
	"Serial Program" = "SVFINIT 	! Initialize,   
						SERIAL_PROGRAM	! Program Fuse Map"	;
	"Serial Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	 			 		
	"Serial Enable Only" = "SVFINIT 	! Initialize, 
							SRAM_ENABLE	! Enable SRAM programming mode"	;
	"Serial Read DONE bit" = "SVFINIT 	! Initialize, 
							SERIAL_READ_DONE_BIT 	! Read DONE Bit"	;
																			 			 
	"XSRAM Bypass"	=	"SVFINIT 	! Initialize"	;
	"XSRAM Verify ID" = 	"SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE"	; 
	"XSRAM Display ID" = "SVFINIT, READ_ID, SAVE_ID";							
	"XSRAM Disable Only" = "SVFINIT 	! Initialize, 
	 			 			DISABLE ! Exit the programming mode"	;
	"XSRAM Enable Only" = "SVFINIT 	! Initialize, 
							READ_ID	! Check the IDCODE,
					!		SRAM_TRANSPARENT_READ_ENABLE	! Enable SRAM TRANSPARENT mode"	;
	"XSRAM Read and Save"	=	"SVFINIT, 
								 SVF_SAVE_CONTROL0,
								 SVF_SAVE_ARRAY, 
								 SVF_SAVE_USERCODE";					 
	"XSRAM Calculate Data CRC"	=	"SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0,
						             SVF_SAVE_ARRAY,
						             SVF_SAVE_USERCODE";
	"XSRAM Verify Only"	=	"SVFINIT 	! Initialize, 
							VERIFY	! Verify Fuse Map, 
		 			 		VERIFY_USERCODE		! Verify USERCODE,
		 			 		VERIFY_DONE_BIT   ! Verify the DONE fuse"	;
	"XSRAM Verify USERCODE"	=	"SVFINIT 	! Initialize, 
								VERIFY_USERCODE		! Verify USERCODE"	;
	"XSRAM Read DONE bit"	=	"SVFINIT 	! Initialize, 
								SVF_SAVE_DONE_BIT	! Read the done bit"	;				             
	"XSRAM Read Control Register0" = "SVFINIT ! Initialize,
									 SVF_SAVE_CONTROL0 !Read Control Register 0";
	"XSRAM Read Programming Status" = "SVFINIT ! Initialize,
					 			 CAPTURE";										
	"XSRAM Capture Only" = "	SVFINIT 	! Initialize,
								IO_STATE ! Capture Bscan register"	;	
	"XSRAM Display USERCODE"	=	"SVFINIT, READ_ID, SVF_SAVE_USERCODE";								
	"Capture Only" = "	INIT 	! Initialize,
						IO_STATE ! Capture Bscan register"	;												 			 
</Operation_List>
<Script>
<![CDATA[
function INIT {
	! Row_Width	  : DEVICE_ROW_WIDTH; 
	! Address_Length : ADDRESS_REGISTER_LENGTH; 
	HDR HDR_LENGTH TDI(HDR_PATTERN);
	HIR HIR_LENGTH TDI(HIR_PATTERN);
	TDR TDR_LENGTH TDI(TDR_PATTERN);
	TIR TIR_LENGTH TDI(TIR_PATTERN);
	ENDDR DRPAUSE;
	ENDIR IRPAUSE;
	FREQUENCY 1E6 HZ;
	STATE IDLE;
}


function SVFINIT {
	! Row_Width	  : DEVICE_ROW_WIDTH; 
	! Address_Length : ADDRESS_REGISTER_LENGTH; 
	HDR 0;
	HIR 0;
	TDR 0;
	TIR 0;
	ENDDR DRPAUSE;
	ENDIR IRPAUSE;
	FREQUENCY 1E6 HZ;
	STATE IDLE;
}

function PRELOAD {
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   SDR BSCAN_Length TDI(Bscan[1]);
}

function INI_PRELOAD {				
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   SDR BSCAN_Length TDI(#1^BSCAN_Length);
}
function SAMPLE {				
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   STATE DRPAUSE;
   STATE IDLE;
}

function INI_SAMPLE {				
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   STATE DRPAUSE;
   STATE IDLE;
}
function CAPTURE {	
	datastream SavedBScanTDO[1][BSCAN_Length];	
	file NewFile = "FILE_SAVE";		
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   SDR BSCAN_Length TDI(#1^BSCAN_Length)
   					TDO(SavedBScanTDO[1]);
   Bscan[1] = SavedBScanTDO[1];	
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   SDR BSCAN_Length TDI(Bscan[1]);
   // Write To file 
   fopen NewFile att "w"
					 format "SVF_Plus";	
   fwrite NewFile (BSCAN_TDO, Bscan);
   fclose 	NewFile;
   
}

function DYNAMIC {	
   ! Shift in Preload(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   SDR BSCAN_Length TDI(Bscan[1])
   					DMASK(BscanMask[1]);
   STATE IDLE;
}


function FLASH_ENABLE {
	! Shift in ISC ENABLE(0x15) instruction;
    SIR Instruction_Length TDI (ISC_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY 20;
}
function FLASH_TRANSPARENT_ENABLE {
	! Shift in XPROGRAM ENABLE(0x35) instruction;
    SIR Instruction_Length TDI (ISC_XPROGRAM_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY 20;
}
function SRAM_ENABLE {
	! Shift in ISC SRAM ENABLE(0x55) instruction;
    SIR Instruction_Length TDI (ISC_SRAM_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY 20;
}
function SRAM_TRANSPARENT_READ_ENABLE {
	! Shift in LSCC_SRAM_TRANSPARENT_ENABLE(0x75) instruction;
    SIR Instruction_Length TDI (LSCC_TRANSPARENT_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY 20;
}

function DISABLE {
	! Shift in ISC DISABLE(0x1E) instruction;
    SIR	Instruction_Length 	TDI (ISC_DISABLE);
	RUN_TEST	IDLE  TCK 5 DELAY 200;
	! Shift in BYPASS(0xFF) instruction;
    SIR	Instruction_Length 	TDI (BYPASS);
	RUN_TEST	IDLE  TCK 5 DELAY 1;
}
function READ_ID {
	! Shift in IDCODE(0x16) instruction;
    SIR Instruction_Length 	TDI (IDCODE);
	SDR_VERIFY	ID_Length	TDI (#1^ID_Length)
					        TDO	(IDTDI[1])
					        MASK (DEVICE_ID_MASK);
}

function ERASE {
	! Shift in ISC ERASE DONE(0x24) instruction;
    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
	// Goto Run Test Idle 
	RUN_TEST	TCK 5 DELAY 1000;
	
	! Shift in ISC ERASE(0x03) instruction;
    SIR Instruction_Length TDI (ISC_ERASE);
	RUN_TEST 	TCK 5 DELAY PWE;
	
}
function DIRECT_FLASH_ERASE {	
	TRY 1 {	
		! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
	    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
	    SDR 132	TDI	(0x000000000000000000000200000000004D);
	    RUN_TEST	TCK 	5 DELAY 	PWP;
	    ! Shift in LSCC_READ_PES (0x11) instruction;
		SIR Instruction_Length TDI (LSCC_READ_PES);
		RUN_TEST 	IDLE  TCK 5 DELAY PWV;
		SDR_VERIFY 40 TDI (#1^40)
					  TDO (0x00000000F6)
					  MASK(0x000000003F);
		! Shift in ISC ERASE DONE(0x24) instruction;
	    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
		// Goto Run Test Idle 
		RUN_TEST	TCK 5 DELAY 1;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 50 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		! Shift in ISC ERASE(0x03) instruction;
		SIR Instruction_Length TDI (ISC_ERASE);
		RUN_TEST 	IDLE  TCK 5 DELAY 1;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 850 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
	}
	ELSE {
		print (0,"Extended Erase Flow");
		! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
	    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
	    SDR 132	TDI	(((#0^61)@#1)@(#0^62)@(#01001101));
	    RUN_TEST	TCK 	5 DELAY 	PWP;
	    
		! Shift in ISC ERASE DONE(0x24) instruction;
	    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
		// Goto Run Test Idle 
		RUN_TEST	TCK 5 DELAY 1;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 50 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		
		! Shift in ISC ERASE(0x03) instruction;
		SIR Instruction_Length TDI (ISC_ERASE);
		RUN_TEST 	IDLE  TCK 5 DELAY 1000;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 850 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
	}
		   
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(#0^132);
    RUN_TEST	TCK 	5 DELAY 	PWP;
    		   
}
function FLASH_ERASE {	
	
	! Extended Erase Flow;
	
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(((#0^61)@#1)@(#0^62)@(#01001101));
    RUN_TEST	TCK 	5 DELAY 	PWP;
    
	! Shift in ISC ERASE DONE(0x24) instruction;
    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
	// Goto Run Test Idle 
	RUN_TEST	TCK 5 DELAY 1;
	! Shift in ISC PROGRAM/STATUS(0x52) instruction;
	SIR Instruction_Length	TDI (PGM_STATUS);
	loop 50 {
		RUN_TEST DRPAUSE  TCK 5 DELAY 100;
		SDR_VERIFY 1 TDI(#0) TDO(#1);
	}
	
	! Shift in ISC ERASE(0x03) instruction;
	SIR Instruction_Length TDI (ISC_ERASE);
	RUN_TEST 	IDLE  TCK 5 DELAY 1;
	! Shift in ISC PROGRAM/STATUS(0x52) instruction;
	SIR Instruction_Length	TDI (PGM_STATUS);
	loop 850 {
		RUN_TEST DRPAUSE  TCK 5 DELAY 100;
		SDR_VERIFY 1 TDI(#0) TDO(#1);
	}		   
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(#0^132);
    RUN_TEST	TCK 	5 DELAY 	PWP;
    			   
}
function SVF_FLASH_ERASE {	
	
    ! Extended Erase Flow;
	
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(((#0^61)@#1)@(#0^62)@(#01001101));
    RUN_TEST	TCK 	5 DELAY 	PWP;
	
	! Shift in ISC ERASE DONE(0x24) instruction;
    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
	// Goto Run Test Idle 
	RUN_TEST	TCK 5 DELAY 5000;
    
	! Shift in ISC ERASE(0x03) instruction;
	SIR Instruction_Length TDI (ISC_ERASE);
	RUN_TEST 	IDLE  TCK 5 DELAY 85000;
	! Shift in READ USERCODE(0x17) instruction;
    SIR Instruction_Length TDI (USERCODE);
    RUN_TEST	TCK 	5 DELAY 	PWV;
	SDR_VERIFY 	Usercode_Length TDI (#1^Usercode_Length)
								TDO	(#1^Usercode_Length);
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(#0^132);
    RUN_TEST	TCK 	5 DELAY 	PWP;
    		
}
function CHECK_STATUS {
	! Shift in READ STATUS(0xB2) instruction;
	SIR Instruction_Length TDI (READ_STATUS);
	RUN_TEST IDLE TCK 5 DELAY PWP; 
	SDR_VERIFY  1 TDI(#0)
				  TDO(#0);	
}
function PROGRAM_STATUS {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	! Shift in INIT ADDRESS(0x21) instruction;
	SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST IDLE TCK 5  DELAY PWP;	
	repeat Address_Length {			
		! Shift in LSCC PROGRAM INCR RTI(0x67) instruction;
    	SIR Instruction_Length	TDI (LSCC_PROGRAM_INCR_RTI);
		! Shift in Data Row = RowCount; 
		SDR	Row_Width	TDI	(FuseArray_TDI);
		RUN_TEST IDLE TCK 5  DELAY PWP;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 25 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 1;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		RowCount = RowCount +1;
	} // repeat
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWP;
}
function PROGRAM_STATUS_EBR {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	EFuseArray_MASK.row = 1;
	! Shift in INIT ADDRESS(0x21) instruction;
	SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST IDLE TCK 5  DELAY PWP;	
	repeat Address_Length {			
		! Shift in LSCC PROGRAM INCR RTI(0x67) instruction;
    	SIR Instruction_Length	TDI (LSCC_PROGRAM_INCR_RTI);
		! Shift in Data Row = RowCount; 
		SDR	Row_Width	TDI	(FuseArray_TDI)
						DMASK (EFuseArray_MASK);
		RUN_TEST IDLE TCK 5  DELAY PWP;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 25 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 1;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		RowCount = RowCount +1;
	} // repeat
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWP;
}
function SVF_PROGRAM_STATUS {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	! Shift in INIT ADDRESS(0x21) instruction;
	SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST IDLE TCK 5  DELAY PWP;	
	repeat Address_Length {			
		! Shift in LSCC PROGRAM INCR RTI(0x67) instruction;
    	SIR Instruction_Length	TDI (LSCC_PROGRAM_INCR_RTI);
		! Shift in Data Row = RowCount; 
		SDR	Row_Width	TDI	(FuseArray_TDI);
		RUN_TEST IDLE TCK 5  DELAY 100;
		RowCount = RowCount +1;
	} // repeat
}
function SVF_PROGRAM_STATUS_EBR {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	EFuseArray_MASK.row = 1;
	! Shift in INIT ADDRESS(0x21) instruction;
	SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST IDLE TCK 5  DELAY PWP;	
	repeat Address_Length {			
		! Shift in LSCC PROGRAM INCR RTI(0x67) instruction;
    	SIR Instruction_Length	TDI (LSCC_PROGRAM_INCR_RTI);
		! Shift in Data Row = RowCount; 
		SDR	Row_Width	TDI	(FuseArray_TDI)
						DMASK (EFuseArray_MASK);
		RUN_TEST IDLE TCK 5  DELAY 100;
		RowCount = RowCount +1;
	} // repeat
}
function PROGRAM_CONTROL {
	IF (Control_Register_0_TDI.row = 1)
	{
		! Shift in LSCC PROGRAM CONTROL 0(0x47) instruction;
	    SIR Instruction_Length TDI (LSCC_PROGRAM_CTRL0);
		SDR 32 TDI(Control_Register_0_TDI[1]);
		RUN_TEST IDLE TCK 5 DELAY PWP; 
		! Shift in LSCC READ CONTROL 0(0x4A) instruction;
	    SIR Instruction_Length TDI (LSCC_READ_CTRL0);
		RUN_TEST IDLE TCK 5 DELAY PWV; 
		SDR_VERIFY  32 TDI(0x00000000)
					   TDO(Control_Register_0_TDI[1])
					   MASK(0xFFFFFFFF);
	}
	
}

function PROGRAM_CONTROL0 {
	IF (Control_Register_0_TDI.row = 1)
	{
		! Shift in LSCC PROGRAM CONTROL 0(0x47) instruction;
	    SIR Instruction_Length TDI (LSCC_PROGRAM_CTRL0);
		SDR 32 TDI(Control_Register_0_TDI[1]);
		RUN_TEST IDLE TCK 5 DELAY PWP; 
		! Shift in LSCC READ CONTROL 0(0x4A) instruction;
	    SIR Instruction_Length TDI (LSCC_READ_CTRL0);
		RUN_TEST IDLE TCK 5 DELAY PWV; 
		SDR_VERIFY  32 TDI(0x00000000)
					   TDO(Control_Register_0_TDI[1])
					   MASK(0xFFFFFFFF);
	}
}

function PROGRAM {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWP;
	! Shift in LSCC PROGRAM INCR RTI(0x67) instruction;
    SIR Instruction_Length	TDI (LSCC_PROGRAM_INCR_RTI);
	// Program the rest of the device
	repeat Address_Length {
		! Shift in Data Row = RowCount;
	    SDR	Row_Width	TDI	(FuseArray_TDI);
		RUN_TEST	IDLE TCK 5 DELAY 	PWP;
		RowCount = RowCount +1;
	} // repeat
}

function PROGRAM_USERCODE {
	IF (Usercode_TDI.row = 1)
	{
		! Shift in ISC PROGRAM USERCODE(0x1A) instruction;
	    SIR Instruction_Length	TDI (ISC_PROGRAM_USERCODE);
		SDR Usercode_Length	TDI	(Usercode_TDI[1]);
		RUN_TEST	TCK 	5 DELAY 25;
	}
}
function PROGRAM_DONE_BIT {
	! Shift in ISC PROGRAM DONE(0x2F) instruction;
    SIR	Instruction_Length 	TDI (ISC_PROGRAM_DONE);
	// Goto Run Test Idle 
	RUN_TEST	IDLE TCK 5 DELAY 500;
	! Shift in BYPASS(0xFF) instruction;
    SIR_VERIFY	Instruction_Length 	TDI (BYPASS)
						TDO(0xFF)
			   	      	MASK(0x04);	
}
function FLASH_PROGRAM_DONE_BIT {
	! Shift in ISC PROGRAM DONE(0x2F) instruction;
    SIR	Instruction_Length 	TDI (ISC_PROGRAM_DONE);
	// Goto Run Test Idle 
	RUN_TEST	IDLE TCK 5 DELAY 1;
	! Shift in ISC PROGRAM/STATUS(0x52) instruction;
	SIR Instruction_Length	TDI (PGM_STATUS);
	loop 25 {
		RUN_TEST DRPAUSE  TCK 5 DELAY 1;
		SDR_VERIFY 1 TDI(#0) TDO(#1);
	}
	! Shift in BYPASS(0xFF) instruction;
    SIR_VERIFY	Instruction_Length 	TDI (BYPASS)
									TDO(0xFF)
									MASK(0x04);	
}
function ERASE_DONE_BIT {
	! Shift in ISC ERASE DONE(0x24) instruction;
    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
	// Goto Run Test Idle 
	RUN_TEST	TCK 5 DELAY 2000;
}
function FLASH_ERASE_DONE_BIT {
	! Shift in ISC ERASE DONE(0x24) instruction;
    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
	// Goto Run Test Idle 
	RUN_TEST	TCK 5 DELAY 1000;
	! Shift in ISC PROGRAM/STATUS(0x52) instruction;
	SIR Instruction_Length	TDI (PGM_STATUS);
	loop 50 {
		RUN_TEST DRPAUSE  TCK 5 DELAY 100;
		SDR_VERIFY 1 TDI(#0) TDO(#1);
	}
}
function VERIFY_DONE_BIT {
	! Shift in BYPASS(0xFF) instruction;
    SIR_VERIFY	Instruction_Length 	TDI (BYPASS)
						TDO(0xFF)
			   	      	MASK(0x04);	
}
// Verify Functions _____________________________________________
function VERIFY {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	FuseArray_MASK.row = 1;
	TRY 1 {
		! Shift in LSCC RESET ADDRESS(0x21) instruction;
	    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
		RUN_TEST	IDLE TCK 5 DELAY 	PWV;
		! Shift in LSCC READ INCR RTI(0x6A) instruction;
	    SIR Instruction_Length	TDI	(LSCC_READ_INCR_RTI);
		repeat Address_Length {
			RUN_TEST	IDLE TCK 5 DELAY 	PWV;
			! Shift Out Data Row = RowCount;
		    SDR_VERIFY	Row_Width	TDI	(#0^Row_Width)
									TDO	(FuseArray_TDI)
									MASK(FuseArray_MASK);
			RowCount = RowCount +1;
		}
	}
	ELSE
	{
		! Shift in ISC DISABLE(0x1E) instruction;
	    SIR	Instruction_Length 	TDI (ISC_DISABLE);
		RUN_TEST	IDLE  TCK 5 DELAY 200;
		! Shift in BYPASS(0xFF) instruction;
	    SIR	Instruction_Length 	TDI (BYPASS);
		RUN_TEST	IDLE  TCK 5 DELAY 1;
		print (1, "Failed in Function VERIFY /see log file for more details/ ");
	}
}
function FLASH_VERIFY {
	int32	RowCount = 1;
	FuseArray_TDI.row = 1;
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWV;
	! Shift in LSCC READ INCR RTI(0x6A) instruction;
    SIR Instruction_Length	TDI	(LSCC_READ_INCR_RTI);
	repeat Address_Length {
		RUN_TEST	IDLE TCK 5 DELAY 	PWV;
		! Shift Out Data Row = RowCount;
	    SDR_VERIFY	Row_Width	TDI	(#0^Row_Width)
								TDO	(FuseArray_TDI);
		RowCount = RowCount +1;
	}
}

function VERIFY_CONTROL {
	IF (Control_Register_0_TDI.row = 1)
	{
		! Shift in LSCC READ CONTROL 0(0x4A) instruction;
	    SIR Instruction_Length TDI (LSCC_READ_CTRL0);
		RUN_TEST IDLE TCK 5 DELAY PWV; 
		SDR_VERIFY  32 TDI(0x00000000)
				   	   TDO(Control_Register_0_TDI[1])
				       MASK(0xFFFFFFFF);
	}
	
}
function VERIFY_USERCODE {
	IF (Usercode_TDI.row = 1)
	{
		! Shift in READ USERCODE(0x17) instruction;
	    SIR Instruction_Length TDI (USERCODE);
	    RUN_TEST	TCK 	5 DELAY 	PWV;
		SDR_VERIFY 	Usercode_Length TDI (#1^Usercode_Length)
									TDO	(Usercode_TDI);
	}
}
function VERIFY_DONE_INIT {
	BSCANTDO.row = 1;
	BSCANMASK.row = 1;
	! Shift in SAMPLE(0x1C) instruction;
    SIR Instruction_Length TDI (BPRELOAD);
	SDR_VERIFY BSCAN_Length TDI (#0^BSCAN_Length)
					        TDO	(BSCANTDO)
					        MASK (BSCANMASK);
}


function PROGRAM_SECURITY {
	! Shift in ISC PROGRAM SECURITY(0x09) instruction;
    SIR Instruction_Length	TDI	(ISC_PROGRAM_SECURITY);
	RUN_TEST	IDLE TCK 	5 DELAY 	50;
}
function SAVE_ID	{
	datastream SavedID[1][ID_Length];
	file	NewFile = "FILE_SAVE"; 
	! Shift in IDCODE(0x16) instruction;
    SIR Instruction_Length	TDI	(IDCODE);
	SDR	ID_Length	TDI (#1^ID_Length)
					TDO	(SavedID);
	// Write To File 
	fopen	NewFile att "w" format "SVF_Plus";
	fwrite	NewFile (ID, SavedID);
	fclose 	NewFile;
}
function SVF_SAVE_ID	{
	! Shift in IDCODE(0x16) instruction;
    SIR Instruction_Length 	TDI (IDCODE);
	SDR_VERIFY	ID_Length	TDI (#1^ID_Length)
							TDO	(IDTDI[1])
							MASK (#0^ID_Length);
}
function SAVE_ARRAY {
	int32	RowCount = 1;
	datastream SavedFuseMap[Address_Length][Row_Width];
	file NewFile = "FILE_SAVE";

	Address.row = 1;	
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	STATE IDLE;
	! Shift in LSCC READ INCR RTI(0x6A) instruction;
    SIR Instruction_Length	TDI	(LSCC_READ_INCR_RTI);
	
	// Program the rest of the device 
	repeat Address_Length {
		// Goto Run Test Idle
		RUN_TEST	TCK 	5 DELAY 	PWV;						
		! Shift Out Data Row = RowCount;
	    SDR Row_Width 	TDI (#0^Row_Width)
						TDO (SavedFuseMap);
		RowCount = RowCount +1;
	}
	// Write To file 
	fopen NewFile att "wa"
					 format "SVF_Plus";	
	fwrite NewFile (FuseArray_TDI, SavedFuseMap);
	fclose 	NewFile;
}
function SVF_SAVE_ARRAY {
	int32	RowCount = 1;
	Address.row = 1;	
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	STATE IDLE;
	
	! Shift in LSCC READ INCR RTI(0x6A) instruction;
    SIR Instruction_Length	TDI	(LSCC_READ_INCR_RTI);
	
	repeat Address_Length {
		RUN_TEST	TCK 	5 DELAY 	PWV;
		! Shift Out Data Row = RowCount;
	    SDR_VERIFY	Row_Width	TDI	(#0^Row_Width)
								TDO	(#1^Row_Width)
								MASK (#0^Row_Width);
		RowCount = RowCount +1;
	}
}
function SAVE_USERCODE {
	datastream SavedUsercode[1][Usercode_Length];
	file NewFile = "FILE_SAVE";
	
	! Shift in READ USERCODE(0x17) instruction;
    SIR Instruction_Length	TDI (USERCODE);
    RUN_TEST	TCK 	5 DELAY 	PWV;
	SDR	Usercode_Length	TDI(#1^Usercode_Length)
						TDO(SavedUsercode);
	// Write To file 
	fopen NewFile att "wa"
					 format "SVF_Plus";	
	fwrite NewFile (Usercode_TDI, SavedUsercode);
	fclose 	NewFile;
}
function SVF_SAVE_USERCODE {
	
	! Shift in READ USERCODE(0x17) instruction;
    SIR Instruction_Length TDI (USERCODE);
    RUN_TEST	TCK 	5 DELAY 	PWV;
	SDR_VERIFY 	Usercode_Length TDI (#1^Usercode_Length)
								TDO	(#1^Usercode_Length)
								MASK(#0^Usercode_Length);
}

function SAVE_STATUS {
	datastream SavedSTATUS[1][32];
	file NewFile = "FILE_SAVE";
	! Shift in LSCC READ STATUS(0x53) instruction;
    SIR Instruction_Length	TDI (LSCC_READ_STATUS);
	SDR	32	TDI(#1^32)
			TDO(SavedSTATUS);
	// Write To file 
	fopen NewFile att "wa"
					 format "SVF_Plus";	
	fwrite NewFile (STATUS_BIT, SavedSTATUS);
	fclose 	NewFile;
}
function SVF_SAVE_STATUS {
	! Shift in LSCC READ STATUS(0x53) instruction;
    SIR Instruction_Length TDI (LSCC_READ_STATUS);
	SDR_VERIFY 	32 TDI (#1^32)
				   TDO	(#1^32)
				   MASK(#0^32);
}
function SERIAL_READ_DONE_BIT {
	datastream SavedDONE_BIT[1][1];
	file	NewFile = "FILE_SAVE"; 
	
	SDR 1	TDI	(0x00)
			TDO (SavedDONE_BIT);
	// Write To File 
	fopen	NewFile att "w" format "SVF_Plus";
	fwrite	NewFile (DONE_BIT, SavedDONE_BIT);
	fclose 	NewFile;
}
function READ_DONE_BIT {
	datastream SavedDONE_BIT[1][Instruction_Length];
	file	NewFile = "FILE_SAVE"; 
	
	! Shift in BYPASS(0xFF) instruction;
    SIR Instruction_Length	TDI	(BYPASS)
							TDO (SavedDONE_BIT);
	// Write To File 
	fopen	NewFile att "w" format "SVF_Plus";
	fwrite	NewFile (DONE_BIT, SavedDONE_BIT);
	fclose 	NewFile;
}
function SVF_SAVE_DONE_BIT {
	! Shift in BYPASS(0xFF) instruction;
    SIR_VERIFY Instruction_Length	TDI	(BYPASS)
				TDO (#1^Instruction_Length)
				MASK(#0^Instruction_Length);
}

function SAVE_CONTROL0 {
	datastream SavedControl0[1][32];
	file	NewFile = "FILE_SAVE"; 
	
	! Shift in LSCC READ CONTROL 0(0x4A) instruction;
    SIR Instruction_Length TDI (LSCC_READ_CTRL0);
	RUN_TEST IDLE TCK 5 DELAY PWV; 
	SDR  32 TDI(0x00000000)
				   TDO(SavedControl0);
				  
	// Write To File 
	fopen	NewFile att "wa" format "SVF_Plus";
	fwrite	NewFile (Control_Register_0_TDI, SavedControl0);
	fclose 	NewFile;
}

function SVF_SAVE_CONTROL0 {
	! Shift in LSCC READ CONTROL 0(0x4A) instruction;
    SIR Instruction_Length TDI (LSCC_READ_CTRL0);
	RUN_TEST IDLE TCK 5 DELAY PWV; 
	SDR_VERIFY  32 TDI(0x00000000)
				   TDO(0x00000000)
				   MASK(0x00000000);
}

function REFRESH_FUNCTION {
	// Shift in LSCC REFRESH(0x23) instruction;
      SIR Instruction_Length	TDI (LSCC_REFRESH);
	RUN_TEST IDLE TCK 5 DELAY PWP; 

	// Shift in BYPASS(0xFF) instruction;
      SIR Instruction_Length	TDI (BYPASS);
	RUN_TEST IDLE TCK 5 DELAY 1;
}

function UPLOAD_FUNCTION {
	! Shift in ISC ENABLE(0x15) instruction;
	SIR Instruction_Length TDI (ISC_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY PWP;

	! Shift in ISC DISABLE(0x1E) instruction;
  	SIR	Instruction_Length 	TDI (ISC_DISABLE);
	RUN_TEST	IDLE  TCK 5 DELAY 200;

	! Shift in BYPASS(0xFF) instruction;
  	SIR	Instruction_Length 	TDI (BYPASS);
	RUN_TEST	IDLE  TCK 5 DELAY 1;
}

function BURST_PROGRAM {
	FuseArray_TDI.row = 1;
	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWP;
	! Shift in LSCC BITSTREAM BURST(0x04) instruction;
    SIR Instruction_Length	TDI (LSCC_BITSTREAM_BURST);
	! Shift in TOTAL_FUSE_MAP bits;
    SDR	TotalFuse		TDI	(FuseArray_TDI);
	RUN_TEST	IDLE TCK 5 DELAY PWP;
}

function ENG_INIT{
	! Shift in ISC ERASE(0x03) instruction;
    SIR Instruction_Length TDI (ISC_ERASE);
	RUN_TEST 	TCK 5 DELAY PWE;

	! Shift in LSCC RESET ADDRESS(0x21) instruction;
    SIR Instruction_Length	TDI (LSCC_RESET_ADDRESS);
	RUN_TEST	IDLE TCK 5 DELAY 	PWP;
	! Shift in LSCC BITSTREAM BURST(0x04) instruction;
    SIR Instruction_Length	TDI (LSCC_BITSTREAM_BURST);
	! Shift in Preamble and CR0 bits;
    SDR	2560	TDI	(CTRLREGINIT[1]);
	RUN_TEST	IDLE TCK 5 DELAY PWP;

	! Shift in ISC DISABLE(0x1E) instruction;
    SIR	Instruction_Length 	TDI (ISC_DISABLE);
	RUN_TEST	IDLE  TCK 5 DELAY 200;
	! Shift in BYPASS(0xFF) instruction;
    SIR	Instruction_Length 	TDI (BYPASS);
	RUN_TEST	IDLE  TCK 5 DELAY 1;
	
	STATE RESET;
	
	RUN_TEST	IDLE  TCK 5 DELAY 1000;
	
	! Shift in ISC_SRAM_ENABLE(0x55) instruction;
    SIR Instruction_Length TDI (ISC_SRAM_ENABLE);
	RUN_TEST	IDLE	TCK 5 DELAY PWP;
}

function ENG_DISABLE{
	! Shift in ISC DISABLE(0x1E) instruction;
    SIR	Instruction_Length 	TDI (ISC_DISABLE);
	RUN_TEST	IDLE  TCK 5 DELAY 200;
	! Shift in BYPASS(0xFF) instruction;
    SIR	Instruction_Length 	TDI (BYPASS);
	RUN_TEST	IDLE  TCK 5 DELAY 1;
	
	STATE RESET;
	
	RUN_TEST	IDLE  TCK 5 DELAY 1000;
}

function FLASH_MDR{
	BSCANPROGRAM.row = 1;
	BSCANPROGRAMMASK.row = 1;
	IF (MDRIspEN == 0x00)
    {
		! Shift in SAMPLE(0x1C) instruction;
	    SIR Instruction_Length TDI (BPRELOAD);
	    ! Make sure the Program pin is HIGH;
		SDR_VERIFY BSCAN_Length TDI (#1^BSCAN_Length)
						        TDO	(BSCANPROGRAM)
						        MASK (BSCANPROGRAMMASK);
	}				        
   ! Shift in SAMPLE(0x1C) instruction;
   SIR Instruction_Length TDI(BPRELOAD);
   STATE DRPAUSE;
   STATE IDLE;
   ! Shift in CLAMP(0x20) instruction;
   SIR Instruction_Length TDI(CLAMP);
   RUN_TEST	IDLE  TCK 5 DELAY 1E-2;

   
   IF (MDRIspEN == 0x01)
   {
   		! Set the PROGRAM Pin High;
   		setpin ISPEN HIGH;
   		! Set the PROGRAM Pin Low;
   		setpin ISPEN LOW;
   		! Set the PROGRAM Pin High;
   		setpin ISPEN HIGH;
   		RUN_TEST DELAY MDRDelay;
   }
   ELSE 
   {
   	   MDR_LVDS
	   ! Shift in Extest(0x00) instruction;
	   SIR Instruction_Length TDI(EXTEST);
	   ! Set the PROGRAM Pin Low though an IO pin;
	   MDR_BSCANLOW
	   STATE IDLE;
	   MDR_LVDS
	   ! Set the PROGRAM Pin High though an IO pin ; 	
	   MDR_BSCANHIGH		 
	   RUN_TEST	IDLE  TCK 5 DELAY MDRDelay;
    }

    IF (MDRTRST == 0x01)
    {
	   	! Set the TRST Pin High;
	   	setpin TRST OFF;
		! SET THE TRST Pin Low;
		setpin TRST ON;
		! SET THE TRST Pin High;
		setpin TRST OFF;
    }

   ! Shift in BYPASS(0xFF) instruction and Verify the DONE Bit;
   SIR_VERIFY	Instruction_Length 	TDI (BYPASS)
									TDO(0xFF)
			   	      				MASK(0x04);
   RUN_TEST	IDLE  TCK 5 DELAY 1E-2;
}
function FLASH_PROGRAM_TRIMCODE 
{	
	datastream SavedTrimCode[1][40];
	datastream SavedTrimCode2[1][40];
	TRY 1 {
		
		! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
	    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
	    SDR 132	TDI	(0x000000000000000000000200000000004D);
	    RUN_TEST	TCK 	5 DELAY 	PWP;
	    ! Shift in LSCC_READ_PES (0x11) instruction;
		SIR Instruction_Length TDI (LSCC_READ_PES);
		RUN_TEST 	IDLE  TCK 5 DELAY PWV;
		
		SDR 40	TDI	(#1^40)
				TDO (SavedTrimCode[1]);
		SavedTrimCode2[1] = SavedTrimCode[1];
		SavedTrimCode2[1] = SavedTrimCode2[1] >> 8;
		SavedTrimCode2[1] = SavedTrimCode2[1] << 8;
		SavedTrimCode2[1] = SavedTrimCode2[1] | 0x00000000F6;
		SavedTrimCode[1] = ~SavedTrimCode[1];
		print (0,SavedTrimCode);
		
			   
		! Shift in LSCC_READ_PES (0x11) instruction;
		SIR Instruction_Length TDI (LSCC_READ_PES);
		RUN_TEST 	IDLE  TCK 5 DELAY PWV;
		
		SDR_VERIFY 40 TDI (#1^40)
					  TDO (0x00000000F6)
					  MASK(0x000000003F);
	}
	ELSE {
		print (0,"Extended Erase Flow");
		! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
	    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
	    SDR 132	TDI	( 0x000000100001000000000000000000004D);
	    RUN_TEST	TCK 	5 DELAY 	PWP;
	    
		! Shift in ISC ERASE DONE(0x24) instruction;
	    SIR	Instruction_Length 	TDI (ISC_ERASE_DONE);
		// Goto Run Test Idle 
		RUN_TEST	TCK 5 DELAY 1000;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 50 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		
		! Shift in ISC ERASE(0x03) instruction;
		SIR Instruction_Length TDI (ISC_ERASE);
		RUN_TEST 	IDLE  TCK 5 DELAY 1000;
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 850 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		
		! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
	    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
	    SDR 132	TDI	(0x000000000000000000000200000000004D);
	    RUN_TEST	TCK 	5 DELAY 	PWP;
	    
	    ! Shift in LSCC_PROGRAM_PES (0x0F) instruction;
		SIR Instruction_Length TDI (LSCC_PROGRAM_PES);
		
		SDR 40	TDI	(SavedTrimCode2[1]);
	    
	    
		RUN_TEST 	IDLE  TCK 5 DELAY 1000;
		
		! Shift in ISC PROGRAM/STATUS(0x52) instruction;
		SIR Instruction_Length	TDI (PGM_STATUS);
		loop 50 {
			RUN_TEST DRPAUSE  TCK 5 DELAY 100;
			SDR_VERIFY 1 TDI(#0) TDO(#1);
		}
		
			   
		! Shift in LSCC_READ_PES (0x11) instruction;
		SIR Instruction_Length TDI (LSCC_READ_PES);
		RUN_TEST 	IDLE  TCK 5 DELAY PWV;
		
		SDR 40	TDI	(#1^40)
				TDO (SavedTrimCode2[1]);
		SavedTrimCode2[1] = ~SavedTrimCode2[1];
		print (0,SavedTrimCode2);
		
	}
    
    ! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(#0^132);
    RUN_TEST	TCK 	5 DELAY 	PWP;
    
}

function FLASH_READ_TRIMCODE 
{	
	datastream SavedTrimCode[1][40];
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(0x000000000000000000000200000000004D);
    RUN_TEST	TCK 	5 DELAY 	PWP;
    ! Shift in LSCC_READ_PES (0x11) instruction;
	SIR Instruction_Length TDI (LSCC_READ_PES);
	RUN_TEST 	IDLE  TCK 5 DELAY PWV;
	
	SDR 40	TDI	(#1^40)
			TDO (SavedTrimCode[1]);
	SavedTrimCode[1] = ~SavedTrimCode[1];
	print (0,SavedTrimCode);
	
	! Shift in LSCC_MANUFACTURING_SHIFT(0x80) instruction;
    SIR Instruction_Length	TDI (LSCC_MANUFACTURING_SHIFT);
    SDR 132	TDI	(#0^132);
    RUN_TEST	TCK 	5 DELAY 	PWP;
}
function SERIAL_PROGRAM {
	FuseArray_TDI.row = 1;
	! Shift in TOTAL_FUSE_MAP bits;
    SDR	TotalFuse		TDI	(FuseArray_TDI);
    RUN_TEST	TCK 	1000 ;
}
]]>
</Script>
</SVF_Plus>
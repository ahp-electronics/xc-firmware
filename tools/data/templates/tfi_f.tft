@comment $Header: G:/synario/lev110/generic/verilog/rcs/tfi.tft 1.5 2005/05/06 02:55:34Z xjwu buddy-1.9 $ @
@set suppresnewline=on@

@comment --------------------------------------------------------------------- @
@comment Template-drive TFI generator			                       @
@comment Template for TFI generation.		                               @
@comment --------------------------------------------------------------------- @

@set suppresnewline=off@
// TOOL:     %tool%
// DATE:     %ddate% 
// TITLE:    %title%
// MODULE:   %module%
// DESIGN:   %module%
// FILENAME: %filename%
// PROJECT:  %project%
// VERSION:  %ver%
// NOTE: DO NOT EDIT THIS FILE
//
// This file is generated by the Verilog Test Fixture Declarations process and 
// contains an I/O and instance declarations of the Verilog source file
// you selected from the Sources in Project list.
// Notes:
// 1) This include file (.tfi) should be referenced by your text fixture using
// the `include compile directive using the syntax:  `include "<file_name>.tfi"
// 2) If your design I/O changes, rerun the process to obtain new I/O and 
// instance declarations.
// 3) Verilog simulations will produce errors if there are Lattice FPGA library 
// elements in your design that require the instantiation of GSR, PUR, and TSALL
// and they are not present in the test fixture. For more information see the 
// How To section of online help. 

@set suppresnewline=on@

@cr@
@cr@

@set showrange=ON@
@set sigdelim=@

@comment Next generate the reg definitions. @
// Inputs@cr@
@ifhas iport=*@
@iterate@%iport%@tab@reg @iterator@;@cr@@enditerate@
@endif@
@cr@@cr@

@comment Next generate the wire definitions. @
// Outputs@cr@
@ifhas oport=*@
@iterate@%oport%@tab@wire @iterator@;@cr@@enditerate@
@endif@
@cr@@cr@

@comment Next generate the bidirs definitions. @
// Bidirs@cr@
@ifhas bport=*@
@iterate@%bport%@tab@wire @iterator@;@cr@@enditerate@
@endif@
@cr@@cr@

@comment Next instantiate the unit under test module. @
@set showrange=OFF@
@set sigdelim=, @
// Instantiate the UUT@cr@
@tab@%module% UUT (
@iterate@%port%@cr@@tab@@tab@.@iterator@(@iterator@)@enditerate@
@cr@@tab@);@cr@@cr@@cr@

@comment  Next is auto initialization. @
@set sigdelim=@
// Initialize Inputs@cr@
`ifdef auto_init@cr@@cr@
@tab@initial begin@cr@
@iterate@%iport%@tab@@tab@@iterator@ = 0;@cr@@enditerate@
@tab@end@cr@@cr@
`endif@cr@@cr@


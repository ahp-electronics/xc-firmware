# Define SciTE settings for stp files.

# stp files
file.patterns.stp=*.stp
filter.stp=stp (stp)|$(file.patterns.stp)|

lexer.$(file.patterns.stp)=stp

word.chars.stp=$(chars.alpha)$(chars.numeric)_
word.characters.$(file.patterns.stp)=$(word.chars.stp)


comment.block.stp='//
#comment.block.at.line.start.stp=1
#comment.stream.start.stp={
#comment.stream.end.stp=}
#comment.box.start.stp=/*
#comment.box.middle.stp= *
#comment.box.end.stp= */

#~ fold.at.Begin=1
#~ fold.at.Parenthese=1

#statement.lookback.$(file.patterns.stp)=20
#block.start.$(file.patterns.stp)=5 begin
#block.end.$(file.patterns.stp)=5 end
#statement.indent.$(file.patterns.stp)=5 always case casex casez else for if while \
#module function task

indent.maintain.$(file.patterns.stp)=1;

keywords.$(file.patterns.stp)=ACTION BOOLEAN CALL DATA DRSCAN COMPARE DRSTOP ENDDATA ENDPROC EXIT EXPORT FOR FREQUENCY GOTO \
IF THEN INTEGER IRSCAN IRSTOP LET NEXT NOTE PADDING  POP POSTDR POSTIR PREDR  PREIR PRINT  PROCEDURE PUSH REM RETURN STATE TRST \
VECTOR VMAP WAIT

keywords2.$(file.patterns.stp)= 
# stp styles

# Default
style.stp.32=$(font.base)
# White space
# style.stp.0=fore:#800080
# Comment
style.stp.1=$(colour.code.comment.line),$(font.code.comment.line)
# Bang comment
# style.stp.2=fore:#3F7F3F,$(font.code.comment.line)
# Number
#style.stp.3=$(colour.number)
# Double quoted string
style.stp.4=$(colour.string)
# Operators
#style.stp.5=$(colour.operator)
# Identifiers
# style.stp.6=
# End of line where string is not closed
# style.stp.7=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled
# Keyword
style.stp.8=$(colour.keyword)
# Std operator
# style.stp.9=fore:#007F7F
# Attribute
# style.stp.10=fore:#804020
# Std Function
# style.stp.11=fore:#808020


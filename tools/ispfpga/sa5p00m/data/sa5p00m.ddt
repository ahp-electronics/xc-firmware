// $Revision: 1.15 $ $Date: 2005/03/26 00:36:30 $
// This is the only commenting style supported.
// We can't add a new parameter or variable outside the REGULAR section
// The delay unit is pico second.
// Resistance is ohm.
// capacitance is FF
// Formats :
// [ARCHITECTURE] 
// ARCHITECTURE <arch_name>
// [VERSION]
// VERSION <version_nu>
// [REGULAR]
// <delay entries>...
// END REGULAR
// [MULTIPLY]
// <multiply delay entries>
// END MULTPLY
//
// [DEVICE]
// <device type>
// <.... delay entries>
// END DEVICE
// ....
//
// END ARCHITECTURE
// note : one regular section, one multiply section but multiple device sections
//        (one for each device)
// 
// <delay entries> := <rc_delay> | <rd_delay> | <fixed_delay> | < trd1_delay> | < trd2_delay>
//
// <rc_delay> :=
// [RC]
// <delay_id> <min_res> <max_res> <min_cap> <max_cap>
// ...
// END RC
//
// RD : resistence and delay
// <rd_delay> :=
// [RD]
// <delay_id> <min_res> <max_res> <min_delay> <max_delay>
// ...
// END RD
//
// <fixed_delay> :=
// [FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// ...
// END FIXED
//
// < trd1_delay> :=
// [TRD1]
// <delay_id> <number_of_entries> <rise_time_in_double> <fall_time_in_double> 
// <x-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x
// .....
// END TRD1
//
// < trd2_delay> :=
// [TRD2]
// <delay_id> <number_of_x_entries> <number_of_y_entries>
// <x-index...>
// <y-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x & y
// .....
// END TRD2
// // The sequence for TRD2 is Txy = T(x*Ymax)+y, so for the x = 2, y =3, 
// //   the sequence is T00,T01,T02,T10,T11,T12
///////////////////////////////////////////////////////////////////////////////////
// ver001 : 11/02/00
//	1. Supporting the slew rate conversion to the rise time.
//	2. Added input slew rate ( for rise_time and fall_time ) to the TRD1 in declartion line.
//    3. Added driver_os and driver_ld to the table.
//
//
//
////////////////////////////////////////////////////////////////////////////////////

[ARCHITECTURE] 
ARCHITECTURE SAPPHIRE

[VERSION]
VERSION ver001

[REGULAR]

// data from -9 speed grade
[FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// standard voltage in mili volt
STD_VOLTAGE	1600	1600	1600	1600

// TM-files located at: /home/rel2/3_11p.396/env/sa5p00m/pkg/s5m2ntm/data/

// from: <slice_M.tm>
VGB_LUT4	88	88	88	88
VGB_LUT2	44	44	44	44
VGB_LUT4A	213	213	213	213
VGB_LUT4B	217	217	217	217
VGB_LUT4C	157	157	157	157
VGB_LUT4D	88	88	88	88
VGB_LUT5	151	151	151	151
VGB_LUT6	237	237	237	237
VGB_LUT7	323	323	323	323
VGB_LUT8	409	409	409	409
VGB_MUXL5	63	63	63	63
VGB_MOFX0	93	93	93	93
VGB_MUXL6	86	86	86	86
VGB_A1_TO_FCO	177	177	177	177
VGB_A0_TO_FCO	177	177	177	177
VGB_FCI_TO_F	156	156	156	156
VGB_FCI_TO_FCO	28	28	28	28
VGB_A1_TO_F	88	88	88	88
VGB_A0_TO_F	232	232	232	232
VGB_LRAM_CO	379	388	379	388
VGB_LRAMAD_S	-125	-108	-125	-108
VGB_LRAMAD_H	126	143	126	143
VGB_LRAMD_S	-94	-74	-94	-74
VGB_LRAMD_H	95	113	95	113
VGB_LRAMWE_S	117	128	117	128
VGB_LRAMWE_H	-85	-74	-85	-74
VGB_LRAMCPW	500	500	500	500
VGB_L_CO	180	192	180	192
VGB_L_S	-111	-100	-111	-100
VGB_L_H	107	118	107	118
VGB_LCE_S	-55	-45	-55	-45
VGB_LCE_H	50	60	50	60
VGB_L_GO	180	192	180	192
VGB_LL_S	-111	-100	-111	-100
VGB_LL_H	107	118	107	118
VGB_LLPD	180	192	180	192
VGB_LASSRO	368	369	368	369
VGB_LSSR_S	129	140	129	140
VGB_LSSR_H	-80	-69	-80	-69
NET_X1	210	210	210	210
NET_X2	149	149	149	149
NET_X6	174	174	174	174
NET_X6X2	130	130	130	130
NET_ISB	65	65	65	65

// from: <pic4_M.tm>
IOB_I_CO	165	165	165	165
IOB_I_CO2	2	8	2	8
IOB_I_S	184	263	184	263
IOB_I_H	146	151	146	151
IOB_ICE_S	-26	-19	-26	-19
IOB_ICE_H	28	31	28	31
IOB_ILPD	238	247	238	247
IOB_IASRO	206	211	206	211
IOB_O_CO	2	8	2	8
IOB_OG_S	37	52	37	52
IOB_OG_H	-43	-18	-43	-18
IOB_OCE_S	-26	-19	-26	-19
IOB_OCE_H	28	31	28	31
IOB_O_GO	454	465	454	465
IOB_O_S	47	52	47	52
IOB_O_H	-43	-38	-43	-38
IOB_OLPD	454	465	454	465
IOB_OASRO	396	406	396	406
IOB_CLK2ECLK_S	62	62	62	62
IOB_CLK2ECLK_H	-48	-48	-48	-48
IOB_I4_CO	163	163	163	163
IOB_I4_S	160	160	160	160
IOB_I4_H	73	73	73	73
IOB_I4_R2O	245	245	245	245
IOB_O4_CO	445	496	445	496
IOB_O4_S	37	37	37	37
IOB_O4_H	-18	-18	-18	-18
IOB_O4_R2O	624	624	624	624

// from: <pio_M.tm>
IOB_IOBUF	722	722	722	722
IOB_IOIN	282	282	282	282
IOB_IOOEN	1419	1419	1419	1419
IOB_IOODIS	1419	1419	1419	1419

// from: <ebr_M.tm>
RAM_EBSWCPW	683	1232	683	1232
RAM_EBSWCE_S	65	114	65	114
RAM_EBSWCE_H	-37	56	-37	56
RAM_EBSWWE_S	12	63	12	63
RAM_EBSWWE_H	59	81	59	81
RAM_EBSWD_S	5	63	5	63
RAM_EBSWD_H	36	55	36	55
RAM_EBSRAD_S	63	116	63	116
RAM_EBSRAD_H	32	40	32	40
RAM_EBCS_S	-21	132	-21	132
RAM_EBCS_H	-36	58	-36	58
RAM_EBSR_CO	245	381	245	381
RAM_EBSR_CO2	1108	1944	1108	1944
RAM_EBSR_CO3	1108	1944	1108	1944
RAM_EBSR_R2O	387	847	387	847
RAM_EBSWAD_S	63	116	63	116
RAM_EBSWAD_H	32	40	32	40
RAM_EBSRWE_S	12	63	12	63
RAM_EBSRWE_H	59	81	59	81
RAM_EBSRCS_S	-21	132	-21	132
RAM_EBSRCS_H	-36	58	-36	58
RAM_EBSRCE_S	65	114	65	114
RAM_EBSRCE_H	-37	56	-37	56
RAM_EBSRST_S	0	214	0	214
RAM_EBSRST_H	-151	0	-151	0
RAM_EBSRCS_S2	-71	-49	-71	-49
RAM_EBSRCS_H2	113	119	113	119
RAM_EBSRCE_S2	89	130	89	130
RAM_EBSRCE_H2	28	51	28	51
RAM_EBSRST_S2	172	226	172	226
RAM_EBSRST_H2	-151	-89	-151	-89
RAM_EBSWAD_S2	30	67	30	67
RAM_EBSWAD_H2	44	70	44	70
RAM_EBSWD_S2	13	45	13	45
RAM_EBSWD_H2	100	122	100	122
RAM_EBSRWE_S2	-74	-40	-74	-40
RAM_EBSRWE_H2	144	166	144	166
RAM_EBSCS_S	-21	132	-21	132
RAM_EBSCS_H	-36	58	-36	58
RAM_EBSCS_S2	-71	-49	-71	-49
RAM_EBSCS_H2	113	119	113	119

// from: <dqs_M.tm>
IOB_I_D2Q	0	0	0	0
IOB_I_CO2	78	78	78	78
IOB_I_S2V	78	78	78	78
IOB_I_S2Q	0	0	0	0
IOB_I_D2DT	130	130	130	130
IOB_PLL_CQ	156	156	156	156
IOB_PLL_RST	206	206	206	206
IOB_PLL_S	9999	9999	9999	9999
IOB_PLL_H	9999	9999	9999	9999
IOB_DDRDLL_C2O_DEL	156	156	156	156
IOB_DDRDLL_RST2LOCK_DEL	206	206	206	206

// from: <gdll_M.tm>

// from: <pll_M.tm>
IOB_PLL	0	88	0	88
IOB_PLL_I2P	0	88	0	88
IOB_PLL_I2S	0	88	0	88
IOB_PLL_I2S2	0	88	0	88
IOB_PLL_I2S3	0	88	0	88
IOB_PLL_B2P	0	0	0	0
IOB_PLL_B2S	0	0	0	0
IOB_PLL_B2S2	0	0	0	0
IOB_PLL_B2S3	0	0	0	0
IOB_PLL_REF2C	0	0	0	0

// from: <jtag_M.tm>
DSP_JtagTPd	2512	2512	2512	2512
DSP_JtagPd	3534	3534	3534	3534
DSP_JtagSu	1322	1322	1322	1322
DSP_JtagSu2	1288	1288	1288	1288
DSP_JtagHd	727	727	727	727
DSP_JtagHd2	789	789	789	789

// from: <clock_M.tm>
DSP_DccPd	0	0	0	0
VGB_CLK_MUX	458	458	458	458
VGB_SEL_MUX	315	315	315	315
VGB_CLKDIV_LSR_SET	-20	18	-20	18
VGB_CLKDIV_LSR_HLD	-10	35	-10	35
VGB_CLKDIV_CLK2O	177	260	177	260

// from: <clock_M.tm>
DSP_EclksynCO	0	0	0	0

// from: <slice_M.tm>
RAM_WAD_SET	-125	-108	-125	-108
RAM_WAD_HLD	126	143	126	143
RAM_WRE_SET	117	128	117	128
RAM_WRE_HLD	-85	-74	-85	-74

// from: <dsp_top_M.tm>
DSP_PreAddPd	419	419	419	419
DSP_PreAddShf	360	360	360	360
DSP_PreAddSCO	440	560	440	560
DSP_PreAddCO	586	586	586	586
DSP_PreAddRstCO	801	804	801	804
DSP_PreAddSet	-105	-105	-105	-105
DSP_PreAddHld	106	106	106	106

// from: <dsp_top_M.tm>
DSP_MuPd	1400	1400	1400	1400
DSP_MuShf	360	360	360	360
DSP_MuC2S	440	560	440	560
DSP_MuCO	1400	1400	1400	1400
DSP_MuCO2	540	540	540	540
DSP_MuCO3	280	280	280	280
DSP_MuC2RO	200	200	200	200
DSP_MuPd_S	0	0	0	0
DSP_MuRst	310	1460	310	1460
DSP_MuSu	10	10	10	10
DSP_MuSu2	870	870	870	870
DSP_MuSu3	1170	1170	1170	1170
DSP_MuHd	10	10	10	10
DSP_MuHd2	-580	-580	-580	-580
DSP_MuHd3	-820	-820	-820	-820

// from: <dsp_top_M.tm>
DSP_AluPd	1030	1030	1030	1030
DSP_AluCO	1230	1230	1230	1230
DSP_AluCO2	280	1420	280	1420
DSP_AluRst	310	1540	310	1540
DSP_AluSet	-98	1200	-98	1200
DSP_AluSet2	950	1170	950	1170
DSP_AluHld	-1060	100	-1060	100
DSP_AluHld2	-820	-620	-820	-620

// from: <dsp_top_M.tm>

// from: <dcu_M.tm>
DSP_PcsSu	640	640	640	640
DSP_PcsSu2	640	640	640	640
DSP_PcsHd	80	80	80	80
DSP_PcsHd2	80	80	80	80
DSP_PcsScSu	2030	2030	2030	2030
DSP_PcsScSu2	2030	2030	2030	2030
DSP_PcsScHd	2030	2030	2030	2030
DSP_PcsScHd2	80	80	80	80
DSP_PcsScSu3	2030	2030	2030	2030
DSP_PcsScHd3	80	80	80	80
DSP_PcsCO	405	405	405	405
DSP_PcsCO2	1650	1650	1650	1650

// from: <clock_M.tm>
DSP_EclksynCO	0	0	0	0

// start here:  not from TM-files
NET_FACTOR      125	125	125	125 // TUNED DATA
NET_GSR		0	0	0	0
IOB_PLL		0	0	0	0
ZERODEL		0	0	0	0


// IO Timing Adders
IOINDLY			7980	7980	7980	7980
// ASIC IO
LVTTL_in		500	500	500	500
LVCMOS_18_in		0	0	0	0
LVCMOS_25_in		300	300	300	300
LVCMOS_33_in		500	500	500	500
AGP_1X_in		1000	1000	1000	1000
BLVDS_in		500	500	500	500
CTT25_in		1000	1000	1000	1000
CTT33_in		1000	1000	1000	1000
GTL+_in			500	500	500	500
HSTL_I_in		500	500	500	500
HSTL_III_in		1000	1000	1000	1000
HSTL_IV_in		1000	1000	1000	1000
LVDS_in			800	800	800	800
LVPECL_in		800	800	800	800
PCI_in			1000	1000	1000	1000
PCI_X_in		1000	1000	1000	1000
SSTL2_I_in		800	800	800	800
SSTL2_II_in		500	500	500	500
SSTL3_I_in		800	800	800	800
SSTL3_II_in		800	800	800	800
SLEW			600	600	600	600
LVTTL_out		1000	1000	1000	1000
LVCMOS_18_4mA_out	500	500	500	500
LVCMOS_18_5mA_out	500	500	500	500
LVCMOS_18_8mA_out	0	0	0	0
LVCMOS_18_12mA_out	0	0	0	0
LVCMOS_25_4mA_out	700	700	700	700
LVCMOS_25_5mA_out	500	500	500	500
LVCMOS_25_8mA_out	500	500	500	500
LVCMOS_25_12mA_out	500	500	500	500
LVCMOS_25_16mA_out	500	500	500	500
LVCMOS_33_4mA_out	1000	1000	1000	1000
LVCMOS33_5mA_out	1000	1000	1000	1000
LVCMOS33_8mA_out	700	700	700	700
LVCMOS33_12mA_out	500	500	500	500
LVCMOS33_16mA_out	500	500	500	500
LVCMOS33_24mA_out	500	500	500	500
AGP_1X_out		500	500	500	500
BLVDS_out		1000	1000	1000	1000
CTT25_out		300	300	300	300
CTT33_out		300	300	300	300
GTL+_out		500	500	500	500
HSTL_I_out		500	500	500	500
HSTL_III_out		500	500	500	500
HSTL_IV_out		700	700	700	700
LVDS_out		1000	1000	1000	1000
LVPECL_out		1000	1000	1000	1000
PCI_out			500	500	500	500
PCI_X_out		500	500	500	500
SSTL2_I_out		500	500	500	500
SSTL2_II_out		500	500	500	500
SSTL3_II_out		500	500	500	500


// 3/21/02 changed the values added gsr and clk
IOB_GSRB	0	0	0	0
IOB_GCLK_IN	0	0	0	0

IOB_PLL		0	0	0	0
IOB_PLLSEC_DELAY  140	140	140	140

VGB_GSRB	0	0	0	0
VGB_GCLK_IN	0	0	0	0

IOB_MINDEL	1	1	1	1
VGB_MINDEL	1	1	1	1
MEM_MINDEL	1	1	1	1

END FIXED


// Operating Conditions
// -1 denotes no adjustment
// Volt * 10(V)	Temp(C)	LogicLH	LogicHL	RouteLH	RouteHL ((100 - x) * 100 %)
[OPERATINGCONDITIONS]

//16			85		9784		9774		9741		9678
//*			85		9784		9774		9741		9678

//16			100		-1			-1			-1			-1
//*			100		-1			-1			-1			-1

*			*		10000		10000		10000		10000

END OPERATINGCONDITIONS

END REGULAR

[DEVICE]

// extract from the ratios of GBB slice LUT A0 to F0.

DEV_OPENV       *       *       *       *       X-M
SPD_GRADE_FACTOR        50

DEV_OPENV       *       *       *       *       X-9
SPD_GRADE_FACTOR        100

DEV_OPENV       *       *       *       *       X-8
SPD_GRADE_FACTOR        120

DEV_OPENV       *       *       *       *       X-7
SPD_GRADE_FACTOR        140

END DEVICE

END ARCHITECTURE

#log _circuit_name##.tft
@set suppresnewline=on@

@comment --------------------------------------------------------------------- @
@comment Template-drive TFI generator			                       @
@comment Template for TFI generation.		                               @
@comment --------------------------------------------------------------------- @

@set suppresnewline=off@
TOOL:     orcapp 
DATE:     %date% 
TITLE:    %title%
MODULE:   %module%
DESIGN:   %module%
FILENAME: %filename%
PROJECT:  %project%
VERSION:  %ver%
This file is auto generated by the ispLEVER
@set suppresnewline=on@

#if #_lang == "verilog"

@cr@
@cr@

@set showrange=ON@
@set sigdelim=@
@cr@
@comment Next instantiate the unit under test module. @
@set showrange=OFF@
@set sigdelim=, @
// Instantiation @cr@
    %module% U1 (
@iterate@%port%@cr@        .@iterator@(@iterator@)@enditerate@
@cr@        );@cr@@cr@@cr@
@cr@
@cr@
endmodule@cr@
#else
@cr@
@tab@COMPONENT %module%
@set sigdelim=@
@cr@@tab@PORT(
@iterate@%iport%@cr@@tab@@tab@@iterator@ : IN @vhdl_typedec@;@enditerate@
@ifhas oport=*@ @comment if the design has any output ports... @
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@;@enditerate@
   @set sigdelim=;@
   @iterate@%oport%@cr@@tab@@tab@@iterator@ : OUT @vhdl_typedec@@enditerate@
@endif@
@ifnhas oport=*@ @comment we need an "else in this language! @
   @set sigdelim=;@
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@@enditerate@
@endif@
@cr@@tab@@tab@);@cr@
@tab@END COMPONENT;@cr@@cr@
@comment Now do a signal declaration for each port @

@cr@@cr@
@comment do the component instantiation                                    @
@set sigdelim=,@
@tab@uut: %module% PORT MAP(
@iterate@%port%
@cr@@tab@@tab@@iterator@ => @iterator@@enditerate@
@cr@@tab@);@cr@@cr@
@set suppresnewline=off@
#endif


#log _circuit_name##.tft
@set suppresnewline=on@

@comment --------------------------------------------------------------------- @
@comment Template-drive TFI generator			                       @
@comment Template for TFI generation.		                               @
@comment --------------------------------------------------------------------- @

@set suppresnewline=off@
 TOOL:     orcapp 
 DATE:     19-MAR-2008 13:11:51 
 TITLE:    %title%
 MODULE:   %module%
 DESIGN:   %module%
 FILENAME: %filename%
 PROJECT:  %project%
 VERSION:  %ver%
 This file is auto generated by the ispLEVER
@set suppresnewline=on@

@cr@
@cr@

@set sigdelim=@

NOTE: This readme file has been provided to instantiate the interface@cr@
netlist.  Since this template contains synthesis attributes for precision that@cr@
are crucial to the design flow, we recommend that you use this@cr@
template in your FPGA design.@cr@
#if #_lang == "verilog"
@set showrange=ON@
@cr@
`timescale 1ns/ 1 ps@cr@
@cr@
module chip (@cr@
@cr@
//  Add your FPGA design top level I/Os here@cr@
@cr@
@cr@
// ASIC side pins for PCSA.  These pins must exist for the@cr@
// PCS core.@cr@
  hdinp0, hdinn0, hdoutp0, hdoutn0,@cr@
  hdinp1, hdinn1, hdoutp1, hdoutn1,@cr@
  hdinp2, hdinn2, hdoutp2, hdoutn2,@cr@
  hdinp3, hdinn3, hdoutp3, hdoutn3,@cr@
  refclkp, refclkn, @cr@
@cr@
// Add FPGA side pins of PCS here@cr@
@cr@
@cr@
  );@cr@
@cr@
// This defines all the high-speed ports. You may have to remove@cr@
// some of them depending on your design.@cr@

  input hdinp0;         // exemplar attribute hdinp0 NOPAD true@cr@
  input hdinn0;         // exemplar attribute hdinn0 NOPAD true@cr@
  input hdinp1;         // exemplar attribute hdinp1 NOPAD true@cr@
  input hdinn1;         // exemplar attribute hdinn1 NOPAD true@cr@
  input hdinp2;         // exemplar attribute hdinp2 NOPAD true@cr@
  input hdinn2;         // exemplar attribute hdinn2 NOPAD true@cr@
  input hdinp3;         // exemplar attribute hdinp3 NOPAD true@cr@
  input hdinn3;         // exemplar attribute hdinn3 NOPAD true@cr@
  input refclkp;        // exemplar attribute refclkp NOPAD true@cr@
  input refclkn;        // exemplar attribute refclkn NOPAD true@cr@
@cr@
  output hdoutp0;       // exemplar attribute hdoutp0 NOPAD true@cr@
  output hdoutn0;       // exemplar attribute hdoutn0 NOPAD true@cr@
  output hdoutp1;       // exemplar attribute hdoutp1 NOPAD true@cr@
  output hdoutn1;       // exemplar attribute hdoutn1 NOPAD true@cr@
  output hdoutp2;       // exemplar attribute hdoutp2 NOPAD true@cr@
  output hdoutn2;       // exemplar attribute hdoutn2 NOPAD true@cr@
  output hdoutp3;       // exemplar attribute hdoutp3 NOPAD true@cr@
  output hdoutn3;       // exemplar attribute hdoutn3 NOPAD true@cr@
@cr@
#else
entity chip is@cr@
port (@cr@
@cr@
--  Add your FPGA design top level I/Os here@cr@
@cr@
@cr@
-- ASIC side pins for PCSA.  These pins must exist for the@cr@
-- PCS core.@cr@
  refclkp         : in std_logic;@cr@
  refclkn         : in std_logic;@cr@
  hdinp0          : in std_logic;@cr@
  hdinn0          : in std_logic;@cr@
  hdinp1          : in std_logic;@cr@
  hdinn1          : in std_logic;@cr@
  hdinp2          : in std_logic;@cr@
  hdinn2          : in std_logic;@cr@
  hdinp3          : in std_logic;@cr@
  hdinn3          : in std_logic;@cr@
@cr@
  hdoutp0         : out std_logic;@cr@
  hdoutn0         : out std_logic;@cr@
  hdoutp1         : out std_logic;@cr@
  hdoutn1         : out std_logic;@cr@
  hdoutp2         : out std_logic;@cr@
  hdoutn2         : out std_logic;@cr@
  hdoutp3         : out std_logic;@cr@
  hdoutn3         : out std_logic;@cr@
@cr@
@cr@
);@cr@
end chip;@cr@
@cr@
architecture chip_arch of chip is@cr@
@cr@
-- This defines all the high-speed ports. You may have to remove@cr@
-- some of them depending on your design.@cr@
attribute nopad : string;@cr@
attribute nopad of@cr@
  refclkp, refclkn,@cr@
  hdinp0, hdinn0, hdinp1, hdinn1,@cr@
  hdinp2, hdinn2, hdinp3, hdinn3,@cr@
  hdoutp0, hdoutn0, hdoutp1, hdoutn1,@cr@
  hdoutp2, hdoutn2, hdoutp3, hdoutn3 : signal is "true";@cr@
#endif@cr@

#if #_lang == "verilog"
// Add your FPGA design module here@cr@
// synopsys translate_off@cr@
  defparam _circuit_name##_inst.USER_CONFIG_FILE = #_circuit_name_new;@cr@
// synopsys translate_on@cr@
@cr@
@cr@
// Add the rest of the PCS pins@cr@
@cr@
@cr@
@cr@
@cr@
@comment Next instantiate the unit under test module. @
@set showrange=OFF@
@set sigdelim=, @
// Instantiation @cr@
    %module% _circuit_name##_inst (
@iterate@%port%@cr@        .@iterator@(@iterator@)@enditerate@
@cr@        );@cr@@cr@@cr@
@cr@
@cr@
endmodule@cr@
#else
@cr@
@tab@COMPONENT %module%
@set sigdelim=@
@cr@@tab@PORT(
@iterate@%iport%@cr@@tab@@tab@@iterator@ : IN @vhdl_typedec@;@enditerate@
@ifhas oport=*@ @comment if the design has any output ports... @
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@;@enditerate@
   @set sigdelim=;@
   @iterate@%oport%@cr@@tab@@tab@@iterator@ : OUT @vhdl_typedec@@enditerate@
@endif@
@ifnhas oport=*@ @comment we need an "else in this language! @
   @set sigdelim=;@
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@@enditerate@
@endif@
@cr@@tab@@tab@);@cr@
@tab@END COMPONENT;@cr@@cr@
@comment Now do a signal declaration for each port @

@cr@@cr@
@comment do the component instantiation                                    @
@set sigdelim=,@
@tab@uut: %module% PORT MAP(
@iterate@%port%
@cr@@tab@@tab@@iterator@ => @iterator@@enditerate@
@cr@@tab@);@cr@@cr@
@set suppresnewline=off@
#endif

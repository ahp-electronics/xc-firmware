// $Revision: 1.15 $ $Date: 2005/03/26 00:36:30 $
// This is the only commenting style supported.
// We can't add a new parameter or variable outside the REGULAR section
// The delay unit is pico second.
// Resistance is ohm.
// capacitance is FF
// Formats :
// [ARCHITECTURE] 
// ARCHITECTURE <arch_name>
// [VERSION]
// VERSION <version_nu>
// [REGULAR]
// <delay entries>...
// END REGULAR
// [MULTIPLY]
// <multiply delay entries>
// END MULTPLY
//
// [DEVICE]
// <device type>
// <.... delay entries>
// END DEVICE
// ....
//
// END ARCHITECTURE
// note : one regular section, one multiply section but multiple device sections
//        (one for each device)
// 
// <delay entries> := <rc_delay> | <rd_delay> | <fixed_delay> | < trd1_delay> | < trd2_delay>
//
// <rc_delay> :=
// [RC]
// <delay_id> <min_res> <max_res> <min_cap> <max_cap>
// ...
// END RC
//
// RD : resistence and delay
// <rd_delay> :=
// [RD]
// <delay_id> <min_res> <max_res> <min_delay> <max_delay>
// ...
// END RD
//
// <fixed_delay> :=
// [FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// ...
// END FIXED
//
// < trd1_delay> :=
// [TRD1]
// <delay_id> <number_of_entries> <rise_time_in_double> <fall_time_in_double> 
// <x-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x
// .....
// END TRD1
//
// < trd2_delay> :=
// [TRD2]
// <delay_id> <number_of_x_entries> <number_of_y_entries>
// <x-index...>
// <y-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x & y
// .....
// END TRD2
// // The sequence for TRD2 is Txy = T(x*Ymax)+y, so for the x = 2, y =3, 
// //   the sequence is T00,T01,T02,T10,T11,T12
///////////////////////////////////////////////////////////////////////////////////
// ver001 : 11/02/00
//	1. Supporting the slew rate conversion to the rise time.
//	2. Added input slew rate ( for rise_time and fall_time ) to the TRD1 in declartion line.
//    3. Added driver_os and driver_ld to the table.
//
//
//
////////////////////////////////////////////////////////////////////////////////////

[ARCHITECTURE] 
ARCHITECTURE SAPPHIRE

[VERSION]
VERSION ver001

[REGULAR]

// data from -9 speed grade
[FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// standard voltage in mili volt
STD_VOLTAGE	1600	1600	1600	1600

// TM-files located at: /home/rel2/3_11p.396/env/sa5p00/pkg/s5p2ntm/data/

// from: <slice_9.tm>
VGB_LUT4	166	166	166	166
VGB_LUT2	83	83	83	83
VGB_LUT4A	416	416	416	416
VGB_LUT4B	415	415	415	415
VGB_LUT4C	305	305	305	305
VGB_LUT4D	166	166	166	166
VGB_LUT5	282	282	282	282
VGB_LUT6	447	447	447	447
VGB_LUT7	612	612	612	612
VGB_LUT8	777	777	777	777
VGB_MUXL5	116	116	116	116
VGB_MOFX0	179	179	179	179
VGB_MUXL6	165	165	165	165
VGB_A1_TO_FCO	329	329	329	329
VGB_A0_TO_FCO	329	329	329	329
VGB_FCI_TO_F	322	322	322	322
VGB_FCI_TO_FCO	51	51	51	51
VGB_A1_TO_F	166	166	166	166
VGB_A0_TO_F	463	463	463	463
VGB_LRAM_CO	640	662	640	662
VGB_LRAMAD_S	-215	-179	-215	-179
VGB_LRAMAD_H	226	257	226	257
VGB_LRAMD_S	-160	-122	-160	-122
VGB_LRAMD_H	173	207	173	207
VGB_LRAMWE_S	246	267	246	267
VGB_LRAMWE_H	-169	-147	-169	-147
VGB_LRAMCPW	525	525	525	525
VGB_L_CO	341	365	341	365
VGB_L_S	-196	-175	-196	-175
VGB_L_H	194	215	194	215
VGB_LCE_S	-101	-79	-101	-79
VGB_LCE_H	85	107	85	107
VGB_L_GO	341	365	341	365
VGB_LL_S	-196	-175	-196	-175
VGB_LL_H	194	215	194	215
VGB_LLPD	341	365	341	365
VGB_LASSRO	732	734	732	734
VGB_LSSR_S	265	287	265	287
VGB_LSSR_H	-163	-141	-163	-141
NET_X1	366	366	366	366
NET_X2	256	256	256	256
NET_X6	289	289	289	289
NET_X6X2	234	234	234	234
NET_ISB	110	110	110	110

// from: <pic4_9.tm>
IOB_I_CO	320	322	320	322
IOB_I_CO2	928	939	928	939
IOB_I_S	298	316	298	316
IOB_I_H	267	268	267	268
IOB_ICE_S	-49	-28	-49	-28
IOB_ICE_H	51	56	51	56
IOB_ILPD	473	484	473	484
IOB_IASRO	393	401	393	401
IOB_O_CO	928	939	928	939
IOB_OG_S	81	111	81	111
IOB_OG_H	-90	-45	-90	-45
IOB_OCE_S	-49	-28	-49	-28
IOB_OCE_H	51	56	51	56
IOB_O_GO	912	937	912	937
IOB_O_S	101	111	101	111
IOB_O_H	-90	-79	-90	-79
IOB_OLPD	912	937	912	937
IOB_OASRO	776	795	776	795
IOB_CLK2ECLK_S	127	127	127	127
IOB_CLK2ECLK_H	-100	-100	-100	-100
IOB_I4_CO	312	312	312	312
IOB_I4_S	272	272	272	272
IOB_I4_H	108	108	108	108
IOB_I4_R2O	465	465	465	465
IOB_O4_CO	866	913	866	913
IOB_O4_S	81	81	81	81
IOB_O4_H	-45	-45	-45	-45
IOB_O4_R2O	1245	1245	1245	1245

// from: <pio_9.tm>
IOB_IOBUF	1054	1054	1054	1054
IOB_IOIN	419	419	419	419
IOB_IOOEN	1714	1714	1714	1714
IOB_IOODIS	1714	1714	1714	1714

// from: <ebr_9.tm>
RAM_EBSWCPW	1085	2258	1085	2258
RAM_EBSWCE_S	143	208	143	208
RAM_EBSWCE_H	-58	68	-58	68
RAM_EBSWWE_S	13	120	13	120
RAM_EBSWWE_H	82	131	82	131
RAM_EBSWD_S	50	165	50	165
RAM_EBSWD_H	28	63	28	63
RAM_EBSRAD_S	177	234	177	234
RAM_EBSRAD_H	4	62	4	62
RAM_EBCS_S	25	241	25	241
RAM_EBCS_H	-54	147	-54	147
RAM_EBSR_CO	440	684	440	684
RAM_EBSR_CO2	2174	3796	2174	3796
RAM_EBSR_CO3	2174	3796	2174	3796
RAM_EBSR_R2O	703	1570	703	1570
RAM_EBSWAD_S	177	234	177	234
RAM_EBSWAD_H	4	62	4	62
RAM_EBSRWE_S	13	120	13	120
RAM_EBSRWE_H	82	131	82	131
RAM_EBSRCS_S	25	241	25	241
RAM_EBSRCS_H	-54	147	-54	147
RAM_EBSRCE_S	143	208	143	208
RAM_EBSRCE_H	-58	68	-58	68
RAM_EBSRST_S	0	418	0	418
RAM_EBSRST_H	-294	1	-294	1
RAM_EBSRCS_S2	-66	-38	-66	-38
RAM_EBSRCS_H2	259	277	259	277
RAM_EBSRCE_S2	184	249	184	249
RAM_EBSRCE_H2	16	66	16	66
RAM_EBSRST_S2	345	438	345	438
RAM_EBSRST_H2	-293	-188	-293	-188
RAM_EBSWAD_S2	108	166	108	166
RAM_EBSWAD_H2	23	80	23	80
RAM_EBSWD_S2	67	120	67	120
RAM_EBSWD_H2	131	183	131	183
RAM_EBSRWE_S2	-53	-4	-53	-4
RAM_EBSRWE_H2	251	301	251	301
RAM_EBSCS_S	25	241	25	241
RAM_EBSCS_H	-54	147	-54	147
RAM_EBSCS_S2	-66	-38	-66	-38
RAM_EBSCS_H2	259	277	259	277

// from: <dqs_9.tm>
IOB_I_D2Q	0	0	0	0
IOB_I_CO2	148	148	148	148
IOB_I_S2V	148	148	148	148
IOB_I_S2Q	0	0	0	0
IOB_I_D2DT	238	238	238	238
IOB_PLL_CQ	299	299	299	299
IOB_PLL_RST	380	380	380	380
IOB_PLL_S	9999	9999	9999	9999
IOB_PLL_H	9999	9999	9999	9999
IOB_DDRDLL_C2O_DEL	299	299	299	299
IOB_DDRDLL_RST2LOCK_DEL	380	380	380	380

// from: <gdll_9.tm>

// from: <pll_9.tm>
IOB_PLL	0	143	0	143
IOB_PLL_I2P	0	143	0	143
IOB_PLL_I2S	0	143	0	143
IOB_PLL_I2S2	0	143	0	143
IOB_PLL_I2S3	0	143	0	143
IOB_PLL_B2P	0	0	0	0
IOB_PLL_B2S	0	0	0	0
IOB_PLL_B2S2	0	0	0	0
IOB_PLL_B2S3	0	0	0	0
IOB_PLL_REF2C	0	0	0	0

// from: <jtag_9.tm>
DSP_JtagTPd	2644	2644	2644	2644
DSP_JtagPd	3746	3746	3746	3746
DSP_JtagSu	1342	1342	1342	1342
DSP_JtagSu2	1297	1297	1297	1297
DSP_JtagHd	780	780	780	780
DSP_JtagHd2	847	847	847	847

// from: <clock_9.tm>
DSP_DccPd	0	0	0	0
VGB_CLK_MUX	877	877	877	877
VGB_SEL_MUX	614	614	614	614
VGB_CLKDIV_LSR_SET	-12	47	-12	47
VGB_CLKDIV_LSR_HLD	-33	27	-33	27
VGB_CLKDIV_CLK2O	329	473	329	473

// from: <clock_9.tm>
DSP_EclksynCO	0	0	0	0

// from: <slice_9.tm>
RAM_WAD_SET	-215	-179	-215	-179
RAM_WAD_HLD	226	257	226	257
RAM_WRE_SET	246	267	246	267
RAM_WRE_HLD	-169	-147	-169	-147

// from: <dsp_top_9.tm>
DSP_PreAddPd	800	800	800	800
DSP_PreAddShf	693	693	693	693
DSP_PreAddSCO	798	1040	798	1040
DSP_PreAddCO	1095	1095	1095	1095
DSP_PreAddRstCO	1418	1425	1418	1425
DSP_PreAddSet	-165	-165	-165	-165
DSP_PreAddHld	183	183	183	183

// from: <dsp_top_9.tm>
DSP_MuPd	2720	2720	2720	2720
DSP_MuShf	693	693	693	693
DSP_MuC2S	798	1040	798	1040
DSP_MuCO	2699	2699	2699	2699
DSP_MuCO2	977	977	977	977
DSP_MuCO3	504	504	504	504
DSP_MuC2RO	347	347	347	347
DSP_MuPd_S	0	0	0	0
DSP_MuRst	546	2772	546	2772
DSP_MuSu	42	42	42	42
DSP_MuSu2	1764	1764	1764	1764
DSP_MuSu3	2341	2341	2341	2341
DSP_MuHd	21	21	21	21
DSP_MuHd2	-1092	-1092	-1092	-1092
DSP_MuHd3	-1533	-1533	-1533	-1533

// from: <dsp_top_9.tm>
DSP_AluPd	2037	2037	2037	2037
DSP_AluCO	2384	2384	2384	2384
DSP_AluCO2	504	2688	504	2688
DSP_AluRst	546	2919	546	2919
DSP_AluSet	-124	2363	-124	2363
DSP_AluSet2	1901	2341	1901	2341
DSP_AluHld	-2037	146	-2037	146
DSP_AluHld2	-1533	-1155	-1533	-1155

// from: <dsp_top_9.tm>

// from: <dcu_9.tm>
DSP_PcsSu	1080	1080	1080	1080
DSP_PcsSu2	1080	1080	1080	1080
DSP_PcsHd	170	170	170	170
DSP_PcsHd2	170	170	170	170
DSP_PcsScSu	2499	2499	2499	2499
DSP_PcsScSu2	2499	2499	2499	2499
DSP_PcsScHd	2499	2499	2499	2499
DSP_PcsScHd2	170	170	170	170
DSP_PcsScSu3	2499	2499	2499	2499
DSP_PcsScHd3	170	170	170	170
DSP_PcsCO	759	759	759	759
DSP_PcsCO2	2037	2037	2037	2037

// from: <clock_9.tm>
DSP_EclksynCO	0	0	0	0

// start here:  not from TM-files
NET_FACTOR      125	125	125	125 // TUNED DATA
NET_GSR		0	0	0	0
IOB_PLL		0	0	0	0
ZERODEL		0	0	0	0


// IO Timing Adders
IOINDLY			7980	7980	7980	7980
// ASIC IO
LVTTL_in		500	500	500	500
LVCMOS_18_in		0	0	0	0
LVCMOS_25_in		300	300	300	300
LVCMOS_33_in		500	500	500	500
AGP_1X_in		1000	1000	1000	1000
BLVDS_in		500	500	500	500
CTT25_in		1000	1000	1000	1000
CTT33_in		1000	1000	1000	1000
GTL+_in			500	500	500	500
HSTL_I_in		500	500	500	500
HSTL_III_in		1000	1000	1000	1000
HSTL_IV_in		1000	1000	1000	1000
LVDS_in			800	800	800	800
LVPECL_in		800	800	800	800
PCI_in			1000	1000	1000	1000
PCI_X_in		1000	1000	1000	1000
SSTL2_I_in		800	800	800	800
SSTL2_II_in		500	500	500	500
SSTL3_I_in		800	800	800	800
SSTL3_II_in		800	800	800	800
SLEW			600	600	600	600
LVTTL_out		1000	1000	1000	1000
LVCMOS_18_4mA_out	500	500	500	500
LVCMOS_18_5mA_out	500	500	500	500
LVCMOS_18_8mA_out	0	0	0	0
LVCMOS_18_12mA_out	0	0	0	0
LVCMOS_25_4mA_out	700	700	700	700
LVCMOS_25_5mA_out	500	500	500	500
LVCMOS_25_8mA_out	500	500	500	500
LVCMOS_25_12mA_out	500	500	500	500
LVCMOS_25_16mA_out	500	500	500	500
LVCMOS_33_4mA_out	1000	1000	1000	1000
LVCMOS33_5mA_out	1000	1000	1000	1000
LVCMOS33_8mA_out	700	700	700	700
LVCMOS33_12mA_out	500	500	500	500
LVCMOS33_16mA_out	500	500	500	500
LVCMOS33_24mA_out	500	500	500	500
AGP_1X_out		500	500	500	500
BLVDS_out		1000	1000	1000	1000
CTT25_out		300	300	300	300
CTT33_out		300	300	300	300
GTL+_out		500	500	500	500
HSTL_I_out		500	500	500	500
HSTL_III_out		500	500	500	500
HSTL_IV_out		700	700	700	700
LVDS_out		1000	1000	1000	1000
LVPECL_out		1000	1000	1000	1000
PCI_out			500	500	500	500
PCI_X_out		500	500	500	500
SSTL2_I_out		500	500	500	500
SSTL2_II_out		500	500	500	500
SSTL3_II_out		500	500	500	500


// 3/21/02 changed the values added gsr and clk
IOB_GSRB	0	0	0	0
IOB_GCLK_IN	0	0	0	0

IOB_PLL		0	0	0	0
IOB_PLLSEC_DELAY  140	140	140	140

VGB_GSRB	0	0	0	0
VGB_GCLK_IN	0	0	0	0

IOB_MINDEL	1	1	1	1
VGB_MINDEL	1	1	1	1
MEM_MINDEL	1	1	1	1

END FIXED


// Operating Conditions
// -1 denotes no adjustment
// Volt * 10(V)	Temp(C)	LogicLH	LogicHL	RouteLH	RouteHL ((100 - x) * 100 %)
[OPERATINGCONDITIONS]

//16			85		9784		9774		9741		9678
//*			85		9784		9774		9741		9678

//16			100		-1			-1			-1			-1
//*			100		-1			-1			-1			-1

*			*		10000		10000		10000		10000

END OPERATINGCONDITIONS

END REGULAR

[DEVICE]

// extract from the ratios of GBB slice LUT A0 to F0.

DEV_OPENV       *       *       *       *       X-M
SPD_GRADE_FACTOR        50

DEV_OPENV       *       *       *       *       X-9
SPD_GRADE_FACTOR        100

DEV_OPENV       *       *       *       *       X-8
SPD_GRADE_FACTOR        120

DEV_OPENV       *       *       *       *       X-7
SPD_GRADE_FACTOR        140

END DEVICE

END ARCHITECTURE

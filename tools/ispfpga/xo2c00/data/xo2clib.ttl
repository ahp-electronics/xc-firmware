//////////////////////////////////////////////////////////////////////////
//
// XO2CLIB.TTL: TTL descriptions of Lattice Semiconductor XO2 Library.
//
// xo2clib.ttl 1.0
//
//////////////////////////////////////////////////////////////////////////


// External component names renamed to internal names 
// without changes to component interface.

// CCU2C = CCU2B;

LUT4 = ORCALUT4;
LUT5 = ORCALUT5;
LUT6 = ORCALUT6;
LUT7 = ORCALUT7;
LUT8 = ORCALUT8;

ROM16X1A = ROM16X1;
ROM32X1A = ROM32X1;
ROM64X1A = ROM64X1;
ROM128X1A = ROM128X1;
ROM256X1A = ROM256X1;


// Unsupported components
DCS = DCS { CLK0=NOT_USED; CLK1; SEL; DSCOUT; };
CCU2 = CCU2 { A0=NOT_USED; B0; C0; D0; A1; B1; C1; D1; CIN; COUT0; COUT1; S0; S1; };

//RAM not supported
DP8KA = DP8KA { DIA0=NOT_USED; DIA1; DIA2; DIA3; DIA4; DIA5; DIA6; DIA7; DIA8; DIA9; DIA10; DIA11; DIA12; DIA13; DIA14; DIA15; DIA16; DIA17; 
                ADA0; ADA1; ADA2; ADA3; ADA4; ADA5; ADA6; ADA7; ADA8; ADA9; ADA10; ADA11; ADA12; CEA; CLKA; WEA; CSA0; CSA1; CSA2; RSTA;
              DIB0; DIB1; DIB2; DIB3; DIB4; DIB5; DIB6; DIB7; DIB8; DIB9; DIB10; DIB11; DIB12; DIB13; DIB14; DIB15; DIB16; DIB17;
              ADB0; ADB1; ADB2; ADB3; ADB4; ADB5; ADB6; ADB7; ADB8; ADB9; ADB10; ADB11; ADB12; CEB; CLKB; WEB; CSB0; CSB1; CSB2; RSTB;
              DOA0; DOA1; DOA2; DOA3; DOA4; DOA5; DOA6; DOA7; DOA8; DOA9; DOA10; DOA11; DOA12; DOA13; DOA14; DOA15; DOA16; DOA17;
              DOB0; DOB1; DOB2; DOB3; DOB4; DOB5; DOB6; DOB7; DOB8; DOB9; DOB10; DOB11; DOB12; DOB13; DOB14; DOB15; DOB16; DOB17; };

PDP8KA = PDP8KA { DI0=NOT_USED; DI1; DI2; DI3; DI4; DI5; DI6; DI7; DI8; DI9; DI10; DI11; DI12; DI13; DI14; DI15; DI16; DI17; DI18;
               DI19; DI20; DI21; DI22; DI23; DI24; DI25; DI26; DI27; DI28; DI29; DI30; DI31; DI32; DI33; DI34; DI35;
               ADW0; ADW1; ADW2; ADW3; ADW4; ADW5; ADW6; ADW7; ADW8; ADW9; ADW10; ADW11; ADW12;			   
               ADR0; ADR1; ADR2; ADR3; ADR4; ADR5; ADR6; ADR7; ADR8; ADR9; ADR10; ADR11; ADR12;
			   CEW; CLKW; CSW0; CSW1; CSW2; WE; CER; CLKR; CSR0; CSR1; CSR2; RST;
               DO0; DO1; DO2; DO3; DO4; DO5; DO6; DO7; DO8; DO9; DO10; DO11; DO12; DO13; DO14; DO15; DO16; DO17;
               DO18; DO19; DO20; DO21; DO22; DO23; DO24; DO25; DO26; DO27; DO28; DO29; DO30; DO31; DO32; DO33; DO34; DO35; };
			   
SP8KA = SP8KA { DI0=NOT_USED; DI1; DI2; DI3; DI4; DI5; DI6; DI7; DI8; DI9; DI10; DI11; DI12; DI13; DI14; DI15; DI16; DI17;
             AD0; AD1; AD2; AD3; AD4; AD5; AD6; AD7; AD8; AD9; AD10; AD11; AD12; CE; CLK; WE; CS0; CS1; CS2; RST;
             DO0; DO1; DO2; DO3; DO4; DO5; DO6; DO7; DO8; DO9; DO10; DO11; DO12; DO13; DO14; DO15; DO16; DO17; };			   

DCE32X4 = DCE32X4 { DI0=NOT_USED; DI1; DI2; DI3; CK; WREN; WPE0; WPE1; RAD0; RAD1; RAD2; RAD3; RAD4; WAD0; WAD1; WAD2; WAD3; WAD4; DO0; DO1; DO2; DO3; QDO0; QDO1; QDO2; QDO3; };
RCE32X4 = RCE32X4 { DI0=NOT_USED; DI1; DI2; DI3; CK; WREN; WPE0; WPE1; AD0; AD1; AD2; AD3; AD4; DO0; DO1; DO2; DO3; QDO0; QDO1; QDO2; QDO3; };		 
SPR16X2B = SPR16X2B { DI0=NOT_USED; DI1; AD0; AD1; AD2; AD3; WRE; CK; DO0; DO1; };
DPR16X2B = DPR16X2B { DI0=NOT_USED; DI1; WAD0; WAD1; WAD2; WAD3; WRE; WCK; RAD0; RAD1; RAD2; RAD3; WDO0; WDO1; RDO0; RDO1; };

// PFU RIPPLE mode not supported

// comparators
AGEB4 = AGEB4  { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; CI; GE; };
AGEB8 = AGEB8  { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; CI; GE; };
ANEB4 = ANEB4  { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; CI; NE; };
ANEB8 = ANEB8  { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; CI; NE; };
ALEB4 = ALEB4  { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; CI; LE; };
ALEB8 = ALEB8  { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; CI; LE; };

// counters
CB4P3BX = CB4P3BX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; };
CB4P3DX = CB4P3DX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; };
CB4P3IX = CB4P3IX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; };
CB4P3JX = CB4P3JX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; };
CB8P3BX = CB8P3BX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
CB8P3DX = CB8P3DX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
CB8P3IX = CB8P3IX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
CB8P3JX = CB8P3JX { CI=NOT_USED; SP; CK; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
CD4P3BX = CD4P3BX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; };
CD4P3DX = CD4P3DX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; };
CD4P3IX = CD4P3IX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; };
CD4P3JX = CD4P3JX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; };
CD8P3BX = CD8P3BX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CD8P3DX = CD8P3DX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CD8P3IX = CD8P3IX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CD8P3JX = CD8P3JX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CU4P3BX = CU4P3BX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; };
CU4P3DX = CU4P3DX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; };
CU4P3IX = CU4P3IX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; };
CU4P3JX = CU4P3JX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; };
CU8P3BX = CU8P3BX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CU8P3DX = CU8P3DX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CU8P3IX = CU8P3IX { CI=NOT_USED; SP; CK; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
CU8P3JX = CU8P3JX { CI=NOT_USED; SP; CK; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7;};
DEC4    = DEC4   { CI=NOT_USED; PC0; PC1; PC2; PC3; CO; NC0; NC1; NC2; NC3; };
DEC8    = DEC8 { PC0=NOT_USED; PC1; PC2; PC3; PC4; PC5; PC6; PC7; CI; CO; NC0; NC1; NC2; NC3; NC4; NC5; NC6; NC7; };
INC4    = INC4 { CI=NOT_USED; PC0; PC1; PC2; PC3; CO; NC0; NC1; NC2; NC3; };
INC8    = INC8 { PC0=NOT_USED; PC1; PC2; PC3; PC4; PC5; PC6; PC7; CI; CO; NC0; NC1; NC2; NC3; NC4; NC5; NC6; NC7; };
INCDEC4 = INCDEC4 { CI=NOT_USED; PC0; PC1; PC2; PC3; CON; CO; NC0; NC1; NC2; NC3; };
INCDEC8 = INCDEC8 { PC0=NOT_USED; PC1; PC2; PC3; PC4; PC5; PC6; PC7; CI; CON; CO; NC0; NC1; NC2; NC3; NC4; NC5; NC6; NC7; };
LB4P3AX = LB4P3AX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CON; CO; Q0; Q1; Q2; Q3; };
LB4P3AY = LB4P3AY { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CON; CO; Q0; Q1; Q2; Q3; };
LB4P3BX = LB4P3BX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CON; CO; Q0; Q1; Q2; Q3; };
LB4P3DX = LB4P3DX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CON; CO; Q0; Q1; Q2; Q3; };
LB4P3IX = LB4P3IX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CON; CO; Q0; Q1; Q2; Q3; };
LB4P3JX = LB4P3JX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CON; CO; Q0; Q1; Q2; Q3; };
LB8P3BX = LB8P3BX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LB8P3DX = LB8P3DX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LB8P3IX = LB8P3IX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LB8P3JX = LB8P3JX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CON; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LD4P3AX = LD4P3AX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CO; Q0; Q1; Q2; Q3; };
LD4P3AY = LD4P3AY { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CO; Q0; Q1; Q2; Q3; };
LD4P3BX = LD4P3BX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; };
LD4P3DX = LD4P3DX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; };
LD4P3IX = LD4P3IX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; };
LD4P3JX = LD4P3JX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; };
LD8P3BX = LB8P3BX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LD8P3DX = LB8P3DX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LD8P3IX = LB8P3IX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LD8P3JX = LB8P3JX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LU4P3AX = LU4P3AX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CO; Q0; Q1; Q2; Q3; };
LU4P3AY = LU4P3AY { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CO; Q0; Q1; Q2; Q3; };
LU4P3BX = LU4P3BX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; };
LU4P3DX = LU4P3DX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; };
LU4P3IX = LU4P3IX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; };
LU4P3JX = LU4P3JX { D0=NOT_USED; D1; D2; D3; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; };
LU8P3BX = LB8P3BX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LU8P3DX = LB8P3DX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LU8P3IX = LB8P3IX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; CD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };
LU8P3JX = LB8P3JX { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; CI; SP; CK; SD; PD; CO; Q0; Q1; Q2; Q3; Q4; Q5; Q6; Q7; };

RD4P3B = RD4P3B { D0=NOT_USED; D1; D2; D3; SP; CK; PD; Q0; Q1; Q2; Q3; };
RD4P3D = RD4P3D { D0=NOT_USED; D1; D2; D3; SP; CK; CD; Q0; Q1; Q2; Q3; };
RD4P3I = RD4P3I { D0=NOT_USED; D1; D2; D3; SP; CK; CD; Q0; Q1; Q2; Q3; };
RD4P3J = RD4P3J { D0=NOT_USED; D1; D2; D3; SP; CK; PD; Q0; Q1; Q2; Q3; };
RD4P3IX = RD4P3IX { D0=NOT_USED; D1; D2; D3; SP; CK; CD; Q0; Q1; Q2; Q3; };
RD4P3JX = RD4P3JX { D0=NOT_USED; D1; D2; D3; SP; CK; PD; Q0; Q1; Q2; Q3; };

// adders/subtractors
FADD2   = FADD2  { A0=NOT_USED; A1; B0; B1; CI; COUT0; COUT1; S0; S1; };
FADD4   = FADD4  { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; CI; CO; S0; S1; S2; S3; };
FADD8   = FADD8  { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; CI; CO; S0; S1; S2; S3; S4; S5; S6; S7; };
FSUB2   = FSUB2  { A0=NOT_USED; A1; B0; B1; BI; BOUT0; BOUT1; S0; S1; };
FSUB4   = FSUB4  { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; BI; BO; S0; S1; S2; S3; };
FSUB8   = FSUB8  { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; BI; BO; S0; S1; S2; S3; S4; S5; S6; S7; };
FADSU4  = FADSU4 { A0=NOT_USED; A1; A2; A3; B0; B1; B2; B3; BCI; CON; BCO; S0; S1; S2; S3; };
FADSU8  = FADSU8 { A0=NOT_USED; A1; A2; A3; A4; A5; A6; A7; B0; B1; B2; B3; B4; B5; B6; B7; BCI; CON; BCO; S0; S1; S2; S3; S4; S5; S6; S7; };


//Flip-Flops
FL1S3BX = FL1S3BX { D0=NOT_USED; D1; CK; SD; PD; Q; QN; };
FL1S3DX = FL1S3DX { D0=NOT_USED; D1; CK; SD; CD; Q; QN; };
FL1S3JY = FL1S3JY { D0=NOT_USED; D1; CK; SD; PD; Q; QN; };
FL1S3IY = FL1S3IY { D0=NOT_USED; D1; CK; SD; CD; Q; QN; };
FL1P3IZ = FL1P3IZ { D0=NOT_USED; D1; SP; CK; SD; CD; Q; QN; };
FL1P3JZ = FL1P3JZ { D0=NOT_USED; D1; SP; CK; SD; PD; Q; QN; };
FD1P3IZ = FD1P3IZ { D=NOT_USED; SP; CK; CD; Q; QN; };
FD1P3JZ = FD1P3JZ { D=NOT_USED; SP; CK; PD; Q; QN; };
FS1P3BX = FS1P3BX { D=NOT_USED; SP; CK; PD; Q; };
FS1P3DX = FS1P3DX { D=NOT_USED; SP; CK; CD; Q; };
FS1P3IZ = FS1P3IZ { D=NOT_USED; SP; CK; CD; Q; };
FS1P3JZ = FS1P3JZ { D=NOT_USED; SP; CK; PD; Q; };
FS1P3IX = FS1P3IX { D=NOT_USED; SP; CD; CK; Q; };
FS1P3JX = FS1P3JX { D=NOT_USED; SP; PD; CK; Q; };

IFS1P1B = IFS1P1B { D=NOT_USED; CK; SP; PD; Q; };
IFS1P1D = IFS1P1D { D=NOT_USED; CK; SP; CD; Q; };
IFS1P1I = IFS1P1I { D=NOT_USED; CK; SP; CD; Q; };
IFS1P1J = IFS1P1J { D=NOT_USED; CK; SP; PD; Q; };

//multiplexers
MUX21E = MUX21E { D0=NOT_USED; D1; SD; E; Z; };
MUX41E = MUX41E { D0=NOT_USED; D1; D2; D3; SD1; SD2; E; Z; };
MUX81E = MUX81E { D0=NOT_USED; D1; D2; D3; D4; D5; D6; D7; SD1; SD2; SD3; E; Z; };

//DDR related
IDDRXB = IDDRXB { D=NOT_USED; ECLK; SCLK; CE; LSR; DDRCLKPOL; QA; QB; };
ODDRXB = ODDRXB { CLK=NOT_USED; DA; DB; LSR; Q; };
DQSBUF = DQSBUF { DQSIN=NOT_USED; CLK; DQSOUT; };
DQSBUFB = DQSBUFB { DQSI=NOT_USED; CLK; READ; DQSDEL; DQS0; DDRCLKPOL; DQSC; PRMBDET; };

//clock/PLL/DLL
DQSDLL = DQSDLL { CLK=NOT_USED; RST; UDDCNTL; LOCK; DQSDEL; };
EHXPLLB = EHXPLLB { RST=NOT_USED; CLKI; CLKFB; DDAMODE; DDAIZR; DDAILAG; DDAIDEL2; DDAIDEL1; DDAIDEL0; CLKOP; CLKOS; CLKOK; LOCK; DDAOZR; DDAOLAG; DDAODEL2; DDAODEL1; DDAODEL0; };  
EPLLB = EPLLB { RST=NOT_USED; CLKI; CLKFB; DDAMODE; DDAIZR; DDAILAG; DDAIDEL2; DDAIDEL1; DDAIDEL0; CLKOP; CLKOS; CLKOK; LOCK; DDAOZR; DDAOLAG; DDAODEL2; DDAODEL1; DDAODEL0; };
OSC = OSC { OSC=NOT_USED; };
OSCIL = OSCIL { TEST=NOT_USED; OSC; };
CLKDIV = CLKDIV { CLKI=NOT_USED; LSR; CLK0; ELSR; };
		  
// $Revision: 1.15 $ $Date: 2005/03/26 00:36:30 $
// This is the only commenting style supported.
// We can't add a new parameter or variable outside the REGULAR section
// The delay unit is pico second.
// Resistance is ohm.
// capacitance is FF
// Formats :
// [ARCHITECTURE] 
// ARCHITECTURE <arch_name>
// [VERSION]
// VERSION <version_nu>
// [REGULAR]
// <delay entries>...
// END REGULAR
// [MULTIPLY]
// <multiply delay entries>
// END MULTPLY
//
// [DEVICE]
// <device type>
// <.... delay entries>
// END DEVICE
// ....
//
// END ARCHITECTURE
// note : one regular section, one multiply section but multiple device sections
//        (one for each device)
// 
// <delay entries> := <rc_delay> | <rd_delay> | <fixed_delay> | < trd1_delay> | < trd2_delay>
//
// <rc_delay> :=
// [RC]
// <delay_id> <min_res> <max_res> <min_cap> <max_cap>
// ...
// END RC
//
// RD : resistence and delay
// <rd_delay> :=
// [RD]
// <delay_id> <min_res> <max_res> <min_delay> <max_delay>
// ...
// END RD
//
// <fixed_delay> :=
// [FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// ...
// END FIXED
//
// < trd1_delay> :=
// [TRD1]
// <delay_id> <number_of_entries> <rise_time_in_double> <fall_time_in_double> 
// <x-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x
// .....
// END TRD1
//
// < trd2_delay> :=
// [TRD2]
// <delay_id> <number_of_x_entries> <number_of_y_entries>
// <x-index...>
// <y-index...>
// <rise_res> <fall_res> <rise_delay> <fall_delay> // for each value of x & y
// .....
// END TRD2
// // The sequence for TRD2 is Txy = T(x*Ymax)+y, so for the x = 2, y =3, 
// //   the sequence is T00,T01,T02,T10,T11,T12
///////////////////////////////////////////////////////////////////////////////////
// ver001 : 11/02/00
//	1. Supporting the slew rate conversion to the rise time.
//	2. Added input slew rate ( for rise_time and fall_time ) to the TRD1 in declartion line.
//    3. Added driver_os and driver_ld to the table.
//
//
//
////////////////////////////////////////////////////////////////////////////////////

[ARCHITECTURE] 
ARCHITECTURE XO2

[VERSION]
VERSION ver001

[REGULAR]

// data from -5 speed grade
[FIXED]
// <delay_id> <min-rise> <max-rise> <min-fall> <max-fall>
// standard voltage in mili volt
STD_VOLTAGE	1600	1600	1600	1600

// TM-files located at: /home/rel2/3_11p.396/env/xo2c00p/pkg/x2p2ntm/data/

// from: <slice_6.tm>
VGB_LUT4	9999000	-9999000	9999000	-9999000
VGB_LUT2	4999500	-4999500	4999500	-4999500
VGB_LUT4A	19998000	-19998000	19998000	-19998000
VGB_LUT4B	19998000	-19998000	19998000	-19998000
VGB_LUT4C	19998000	-19998000	19998000	-19998000
VGB_LUT4D	19998000	-19998000	19998000	-19998000
VGB_LUT5	9999000	-9999000	9999000	-9999000
VGB_LUT6	19998000	-19998000	19998000	-19998000
VGB_LUT7	29997000	-29997000	29997000	-29997000
VGB_LUT8	39996000	-39996000	39996000	-39996000
VGB_MUXL5	0	0	0	0
VGB_MOFX0	9999000	-9999000	9999000	-9999000
VGB_MUXL6	9999000	-9999000	9999000	-9999000
VGB_A1_TO_FCO	9999000	-9999000	9999000	-9999000
VGB_A0_TO_FCO	9999000	-9999000	9999000	-9999000
VGB_FCI_TO_F	9999000	-9999000	9999000	-9999000
VGB_FCI_TO_FCO	9999000	-9999000	9999000	-9999000
VGB_A1_TO_F	9999000	-9999000	9999000	-9999000
VGB_A0_TO_F	9999000	-9999000	9999000	-9999000
VGB_LRAM_CO	9999000	-9999000	9999000	-9999000
VGB_LRAMAD_S	9999000	-9999000	9999000	-9999000
VGB_LRAMAD_H	9999000	-9999000	9999000	-9999000
VGB_LRAMD_S	9999000	-9999000	9999000	-9999000
VGB_LRAMD_H	9999000	-9999000	9999000	-9999000
VGB_LRAMWE_S	9999000	-9999000	9999000	-9999000
VGB_LRAMWE_H	9999000	-9999000	9999000	-9999000
VGB_LRAMCPW	9999000	-9999000	9999000	-9999000
VGB_L_CO	9999000	-9999000	9999000	-9999000
VGB_L_S	9999000	-9999000	9999000	-9999000
VGB_L_H	9999000	-9999000	9999000	-9999000
VGB_LCE_S	9999000	-9999000	9999000	-9999000
VGB_LCE_H	9999000	-9999000	9999000	-9999000
VGB_L_GO	9999000	-9999000	9999000	-9999000
VGB_LL_S	9999000	-9999000	9999000	-9999000
VGB_LL_H	9999000	-9999000	9999000	-9999000
VGB_LLPD	9999000	-9999000	9999000	-9999000
VGB_LASSRO	9999000	-9999000	9999000	-9999000
VGB_LSSR_S	9999000	-9999000	9999000	-9999000
VGB_LSSR_H	9999000	-9999000	9999000	-9999000
NET_X1	9999000	-9999000	9999000	-9999000
NET_X2	9999000	-9999000	9999000	-9999000
NET_X6	9999000	-9999000	9999000	-9999000
NET_X6X2	9999000	-9999000	9999000	-9999000
NET_ISB	9999000	-9999000	9999000	-9999000

// from: <pic4_6.tm>
IOB_I_CO	9999000	-9999000	9999000	-9999000
IOB_I_CO2	9999000	-9999000	9999000	-9999000
IOB_I_S	9999000	-9999000	9999000	-9999000
IOB_I_H	9999000	-9999000	9999000	-9999000
IOB_ICE_S	9999000	-9999000	9999000	-9999000
IOB_ICE_H	9999000	-9999000	9999000	-9999000
IOB_ILPD	9999000	-9999000	9999000	-9999000
IOB_IASRO	9999000	-9999000	9999000	-9999000
IOB_O_CO	9999000	-9999000	9999000	-9999000
IOB_OG_S	9999000	-9999000	9999000	-9999000
IOB_OG_H	9999000	-9999000	9999000	-9999000
IOB_OCE_S	9999000	-9999000	9999000	-9999000
IOB_OCE_H	9999000	-9999000	9999000	-9999000
IOB_O_GO	9999000	-9999000	9999000	-9999000
IOB_OL_S	9999000	-9999000	9999000	-9999000
IOB_OL_H	9999000	-9999000	9999000	-9999000
IOB_OLPD	9999000	-9999000	9999000	-9999000
IOB_OASRO	9999000	-9999000	9999000	-9999000
IOB_I4_CO	9999000	-9999000	9999000	-9999000
IOB_I4_S	9999000	-9999000	9999000	-9999000
IOB_I4_H	9999000	-9999000	9999000	-9999000
IOB_I4_R2O	9999000	-9999000	9999000	-9999000
IOB_O4_CO	9999000	-9999000	9999000	-9999000
IOB_O4_S	9999000	-9999000	9999000	-9999000
IOB_O4_H	9999000	-9999000	9999000	-9999000
IOB_O4_R2O	9999000	-9999000	9999000	-9999000

// from: <pio_6.tm>
IOB_IOBUF	9999000	-9999000	9999000	-9999000
IOB_IOIN	9999000	-9999000	9999000	-9999000
IOB_IOOEN	9999000	-9999000	9999000	-9999000
IOB_IOODIS	9999000	-9999000	9999000	-9999000

// from: <ebr_6.tm>
RAM_EBSWCPW	9999000	-9999000	9999000	-9999000
RAM_EBSWCE_S	9999000	-9999000	9999000	-9999000
RAM_EBSWCE_H	9999000	-9999000	9999000	-9999000
RAM_EBSWWE_S	9999000	-9999000	9999000	-9999000
RAM_EBSWWE_H	9999000	-9999000	9999000	-9999000
RAM_EBSWD_S	9999000	-9999000	9999000	-9999000
RAM_EBSWD_H	9999000	-9999000	9999000	-9999000
RAM_EBSRAD_S	9999000	-9999000	9999000	-9999000
RAM_EBSRAD_H	9999000	-9999000	9999000	-9999000
RAM_EBCS_S	9999000	-9999000	9999000	-9999000
RAM_EBCS_H	9999000	-9999000	9999000	-9999000
RAM_EBSR_CO	9999000	-9999000	9999000	-9999000
RAM_EBSR_CO2	9999000	-9999000	9999000	-9999000
RAM_EBSR_CO3	9999000	-9999000	9999000	-9999000
RAM_EBSR_R2O	9999000	-9999000	9999000	-9999000
RAM_EBSWAD_S	9999000	-9999000	9999000	-9999000
RAM_EBSWAD_H	9999000	-9999000	9999000	-9999000
RAM_EBSRWE_S	9999000	-9999000	9999000	-9999000
RAM_EBSRWE_H	9999000	-9999000	9999000	-9999000
RAM_EBSRCS_S	9999000	-9999000	9999000	-9999000
RAM_EBSRCS_H	9999000	-9999000	9999000	-9999000
RAM_EBSRCE_S	9999000	-9999000	9999000	-9999000
RAM_EBSRCE_H	9999000	-9999000	9999000	-9999000
RAM_EBSRST_S	9999000	-9999000	9999000	-9999000
RAM_EBSRST_H	9999000	-9999000	9999000	-9999000
RAM_EBSRCS_S2	9999000	-9999000	9999000	-9999000
RAM_EBSRCS_H2	9999000	-9999000	9999000	-9999000
RAM_EBSRCE_S2	9999000	-9999000	9999000	-9999000
RAM_EBSRCE_H2	9999000	-9999000	9999000	-9999000
RAM_EBSRST_S2	9999000	-9999000	9999000	-9999000
RAM_EBSRST_H2	9999000	-9999000	9999000	-9999000
RAM_EBSWAD_S2	9999000	-9999000	9999000	-9999000
RAM_EBSWAD_H2	9999000	-9999000	9999000	-9999000
RAM_EBSWD_S2	9999000	-9999000	9999000	-9999000
RAM_EBSWD_H2	9999000	-9999000	9999000	-9999000
RAM_EBSRWE_S2	9999000	-9999000	9999000	-9999000
RAM_EBSRWE_H2	9999000	-9999000	9999000	-9999000
RAM_EBSCS_S	9999000	-9999000	9999000	-9999000
RAM_EBSCS_H	9999000	-9999000	9999000	-9999000
RAM_EBSCS_S2	9999000	-9999000	9999000	-9999000
RAM_EBSCS_H2	9999000	-9999000	9999000	-9999000

// from: <dqs_6.tm>
IOB_I_D2Q	9999000	-9999000	9999000	-9999000
IOB_I_S2V	9999000	-9999000	9999000	-9999000
IOB_I_D2Q2	9999000	-9999000	9999000	-9999000
IOB_I_S2Q	9999000	-9999000	9999000	-9999000
IOB_I_D2DT	9999000	-9999000	9999000	-9999000
IOB_PLL_CQ	9999000	-9999000	9999000	-9999000
IOB_PLL_RST	9999000	-9999000	9999000	-9999000
IOB_PLL_S	9999000	-9999000	9999000	-9999000
IOB_PLL_H	9999000	-9999000	9999000	-9999000

// from: <pll_6.tm>
IOB_PLL	9999000	-9999000	9999000	-9999000
IOB_PLL_I2P	9999000	-9999000	9999000	-9999000
IOB_PLL_I2S	9999000	-9999000	9999000	-9999000
IOB_PLL_I2S2	9999000	-9999000	9999000	-9999000
IOB_PLL_I2S3	9999000	-9999000	9999000	-9999000
IOB_PLL_B2P	9999000	-9999000	9999000	-9999000
IOB_PLL_B2S	9999000	-9999000	9999000	-9999000
IOB_PLL_B2S2	9999000	-9999000	9999000	-9999000
IOB_PLL_B2S3	9999000	-9999000	9999000	-9999000
IOB_PLL_REF2C	9999000	-9999000	9999000	-9999000

// from: <jtag_6.tm>
DSP_JtagTPd	9999000	-9999000	9999000	-9999000
DSP_JtagPd	9999000	-9999000	9999000	-9999000
DSP_JtagSu	9999000	-9999000	9999000	-9999000
DSP_JtagSu2	9999000	-9999000	9999000	-9999000
DSP_JtagHd	9999000	-9999000	9999000	-9999000
DSP_JtagHd2	9999000	-9999000	9999000	-9999000

// from: <clock_6.tm>
NET_GCLK	9999000	-9999000	9999000	-9999000
DSP_DccPd	9999000	-9999000	9999000	-9999000
VGB_CLK_MUX	9999000	-9999000	9999000	-9999000
VGB_SEL_MUX	9999000	-9999000	9999000	-9999000

// from: <clock_6.tm>
DSP_EclksynCO	9999000	-9999000	9999000	-9999000

// from: <slice_6.tm>
RAM_WAD_SET	9999000	-9999000	9999000	-9999000
RAM_WAD_HLD	9999000	-9999000	9999000	-9999000
RAM_WRE_SET	9999000	-9999000	9999000	-9999000
RAM_WRE_HLD	9999000	-9999000	9999000	-9999000

// start here:  not from TM-files
NET_FACTOR      125	125	125	125 // TUNED DATA
NET_GSR		0	0	0	0
IOB_PLL		0	0	0	0
ZERODEL		0	0	0	0


// IO Timing Adders
IOINDLY			7980	7980	7980	7980
// ASIC IO
LVTTL_in		500	500	500	500
LVCMOS_18_in		0	0	0	0
LVCMOS_25_in		300	300	300	300
LVCMOS_33_in		500	500	500	500
AGP_1X_in		1000	1000	1000	1000
BLVDS_in		500	500	500	500
CTT25_in		1000	1000	1000	1000
CTT33_in		1000	1000	1000	1000
GTL+_in			500	500	500	500
HSTL_I_in		500	500	500	500
HSTL_III_in		1000	1000	1000	1000
HSTL_IV_in		1000	1000	1000	1000
LVDS_in			800	800	800	800
LVPECL_in		800	800	800	800
PCI_in			1000	1000	1000	1000
PCI_X_in		1000	1000	1000	1000
SSTL2_I_in		800	800	800	800
SSTL2_II_in		500	500	500	500
SSTL3_I_in		800	800	800	800
SSTL3_II_in		800	800	800	800
SLEW			600	600	600	600
LVTTL_out		1000	1000	1000	1000
LVCMOS_18_4mA_out	500	500	500	500
LVCMOS_18_5mA_out	500	500	500	500
LVCMOS_18_8mA_out	0	0	0	0
LVCMOS_18_12mA_out	0	0	0	0
LVCMOS_25_4mA_out	700	700	700	700
LVCMOS_25_5mA_out	500	500	500	500
LVCMOS_25_8mA_out	500	500	500	500
LVCMOS_25_12mA_out	500	500	500	500
LVCMOS_25_16mA_out	500	500	500	500
LVCMOS_33_4mA_out	1000	1000	1000	1000
LVCMOS33_5mA_out	1000	1000	1000	1000
LVCMOS33_8mA_out	700	700	700	700
LVCMOS33_12mA_out	500	500	500	500
LVCMOS33_16mA_out	500	500	500	500
LVCMOS33_24mA_out	500	500	500	500
AGP_1X_out		500	500	500	500
BLVDS_out		1000	1000	1000	1000
CTT25_out		300	300	300	300
CTT33_out		300	300	300	300
GTL+_out		500	500	500	500
HSTL_I_out		500	500	500	500
HSTL_III_out		500	500	500	500
HSTL_IV_out		700	700	700	700
LVDS_out		1000	1000	1000	1000
LVPECL_out		1000	1000	1000	1000
PCI_out			500	500	500	500
PCI_X_out		500	500	500	500
SSTL2_I_out		500	500	500	500
SSTL2_II_out		500	500	500	500
SSTL3_II_out		500	500	500	500


// 3/21/02 changed the values added gsr and clk
IOB_GSRB	0	0	0	0
IOB_GCLK_IN	0	0	0	0

IOB_PLL		0	0	0	0
IOB_PLLSEC_DELAY  140	140	140	140

VGB_GSRB	0	0	0	0
VGB_GCLK_IN	0	0	0	0

IOB_MINDEL	1	1	1	1
VGB_MINDEL	1	1	1	1
MEM_MINDEL	1	1	1	1

END FIXED


// Operating Conditions
// -1 denotes no adjustment
// Volt * 10(V)	Temp(C)	LogicLH	LogicHL	RouteLH	RouteHL ((100 - x) * 100 %)
[OPERATINGCONDITIONS]

//16			85		9784		9774		9741		9678
//*			85		9784		9774		9741		9678

//16			100		-1			-1			-1			-1
//*			100		-1			-1			-1			-1

*			*		10000		10000		10000		10000

END OPERATINGCONDITIONS

END REGULAR

[DEVICE]

// extract from the ratios of GBB slice LUT A0 to F0.

DEV_OPENV	*	*	*	*	X-M
SPD_GRADE_FACTOR 	39

DEV_OPENV       *       *       *       *       X-L
SPD_GRADE_FACTOR        65

DEV_OPENV	*	*	*	*	X-6
SPD_GRADE_FACTOR 	100

DEV_OPENV	*	*	*	*	X-5
SPD_GRADE_FACTOR 	110

DEV_OPENV       *       *       *       *       X-4
SPD_GRADE_FACTOR        121

DEV_OPENV       *       *       *       *       X-3
SPD_GRADE_FACTOR        190

DEV_OPENV       *       *       *       *       X-2
SPD_GRADE_FACTOR        208

DEV_OPENV       *       *       *       *       X-1
SPD_GRADE_FACTOR        226

END DEVICE

END ARCHITECTURE

<?xml version="1.0" encoding="utf-8"?>
<messageFile name="e5cmap" fid="5205" alias="e5cmap" vendor="Lattice Semiconductor Corporation" stamp="Date and Time">
  <description text="this message file contains message for [name] package"/>
  <!-- owner of this message file -->
  <owner text="owner" />
  <messages>
    <msg uid="1000" type="Error" text="ODDRXD component $$s cannot be used with $$s component $$s when SCLK and DQCLK1 are driven by the same signal $$s.\n " />
    <msg uid="1001" type="Error" text="DDR3 DQS port $$s (IOBUF $$s) using IO_TYPE $$s.  DDR3 DQS ports must use the SSTL15D type." />
    <msg uid="1002" type="Warning" level="2" text="DDR3 DQ port $$s (IOBUF $$s) using IO_TYPE $$s.  DDR3 DQ ports must use the SSTL15 type." />
    <msg uid="1003" type="Warning" level="2" text="DDR/DDR2 DQS port $$s (IOBUF $$s) using IO_TYPE $$s.  DDR/DDR2 DQS ports must use one of the SSTL18, SSTL18D_II or SSTL25 types." />
    <msg uid="1004" type="Warning" level="2" text="DDR/DDR2 DQ port $$s (IOBUF $$s) using IO_TYPE $$s.  DDR/DDR2 DQ ports must use one of the SSTL18 or SSTL25 types." />
    <msg uid="1005" type="Warning" level="2" text="ISI_CAL property is not applicable for instance '$$s' of type $$s. Ignoring ISI_CAL property." />
    <msg uid="1006" type="Warning" level="2" text="'$$s' is not a valid ISI_CAL property for output DDR component $$s.  Ignoring ISI_CAL property." />
    <msg uid="1007" type="Error" text="Cannot find component for ddr connectivity. Check driver of pin." />
    <msg uid="1008" type="Error" text="Input pin $$s of DDR component $$s for port $$s is not properly connected." />
    <msg uid="1009" type="Error" text="Input pin $$s of DDR component $$s for port $$s is driven by component $$s($$s).  Expecting a $$s component to drive this pin." />
    <msg uid="1010" type="Error" text="Input pin $$s of DDR component $$s for port $$s is driven by pin $$s of component $$s($$s).  Expecting pin $$s to be the driver." />
    <msg uid="1011" type="Error" text="Input pin DDRCLKPOL of input DDR component $$s for port $$s is not driven by a DQSBUF component." />
    <msg uid="1012" type="Error" text="Input pin ECLKDQSR of input DDR component $$s for port $$s is not connected." />
    <msg uid="1013" type="Error" text="Input pin ECLKDQSR of input DDR component $$s for port $$s is not driven by the $$s($$s) component." />
    <msg uid="1014" type="Error" text="Input pin DDRLAT of input DDR component $$s for port $$s is not connected." />
    <msg uid="1015" type="Error" text="Input pin DDRLAT of input DDR component $$s for port $$s is not driven by the $$s($$s) component." />
    <msg uid="1016" type="Error" text="ODDRXD component $$s cannot be used with tristate DDR component $$s for port $$s.  Must use a OFD1S3AX component." />
    <msg uid="1017" type="Error" text="ODDRXD component $$s cannot be used with tristate register $$s for port $$s.  Must use a OFD1S3AX component." />
    <msg uid="1018" type="Error" text="Register $$s has data select signal, SD pin, but is missing data D0 signal without tied-high." />
    <msg uid="1019" type="Error" text="'$$s' is not a valid IO_TYPE for input PIO buffer '$$s'." />
    <msg uid="1020" type="Error" text="Invalid drive current assignment for input PIO buffer '$$s'. No drive current is allowed for input buffers." />
    <msg uid="1021" type="Error" text="'$$s' is not a valid PCICLAMP for $$s PIO buffer '$$s'. PCICLAMP should be set to OFF for IO_TYPE '$$s'." />
    <msg uid="1022" type="Warning" level="2" text="Cannot configure input buffer '$$s' as opendrain. Ignoring." />
    <msg uid="1023" type="Warning" level="2" text="Invalid SLEWRATE assignment for input PIO buffer '$$s'(for $$s port). SLEWRATE cannot be assigned to input buffers and will be ignored.\n" />
    <msg uid="1024" type="Error" text="Invalid PULLMODE for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s'.  Valid PULLMODE setting is NONE only.\n" />
    <msg uid="1025" type="Error" text="$$s is not a valid IO_TYPE for $$s PIO buffer $$s." />
    <msg uid="1026" type="Error" text="Invalid drive current assignment for $$s PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1027" type="Error" text="'$$s' is not a valid PCICLAMP for $$s PIO buffer '$$s'. PCICLAMP should be set to ON for IO_TYPE '$$s'." />
    <msg uid="1028" type="Warning" level="2" text="Cannot configure $$s buffer '$$s' with IO_TYPE '$$s' as opendrain. Ignoring." />
    <msg uid="1029" type="Error" text="Invalid SLEWRATE assignment for $$s PIO buffer '$$s'(for $$s port)." />
    <msg uid="1030" type="Error" text="Invalid PULLMODE for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s'.  Valid PULLMODE setting is NONE only.\n" />
    <msg uid="1031" type="Error" text="OPENDRAIN for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s' must be set to OFF when DRIVE current setting is 2 or 6." />
    <msg uid="1032" type="Error" text="'$$s' is not a valid VREF for output PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1033" type="Error" text="'$$s' is not a valid TERMINATEVTT value for output PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1034" type="Error" text="'$$s' is not a valid DIFFRESISTOR value for output PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1035" type="Warning" level="2" text="EQ_CAL=$$s is not a valid value for any output PIO buffer ($$s on port $$s).  EQ_CAL applies to input or bidirectional ports only. Ignoring." />
    <msg uid="1036" type="Error" text="'$$s' is not a valid DIFFDRIVE for output PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1037" type="Error" text="'$$s' is not a valid DIFFDRIVE for output PIO buffer '$$s'.  DIFFDRIVE should be set to NA for IO_TYPE '$$s'." />
    <msg uid="1038" type="Error" text="'$$s' is not a valid MULTDRIVE for output PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1039" type="Error" text="'$$s' is not a valid MULTDRIVE for output PIO buffer '$$s'.  MULTDRIVE should be set to NA for IO_TYPE '$$s'." />
    <msg uid="1040" type="Error" text="'$$s' is not a valid VREF for $$s PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1041" type="Error" text="'$$s' is not a valid TERMINATEVTT value for $$s PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1042" type="Error" text="'$$s' is not a valid TERMINATEVTT value for $$s PIO buffer '$$s' with IO_TYPE '$$s'. It should be set to OFF." />
    <msg uid="1043" type="Error" text="'$$s' is not a valid DIFFRESISTOR value for $$s PIO buffer '$$s' with IO_TYPE '$$s'." />
    <msg uid="1044" type="Error" text="PIO buffer '$$s' ($$s IO_TYPE '$$s') cannot have both TERMINATEVTT ('$$s') and DIFFRESISTOR ('$$s') defined." />
    <msg uid="1045" type="Error" text="EQ_CAL=$$s is not a valid value for $$s PIO buffer '$$s' on port $$s with IO_TYPE '$$s'.  EQ_CAL can only be set to 0 for IO_TYPE TRLVDS." />
    <msg uid="1046" type="Error" text="EQ_CAL=$$s is not a valid value for $$s PIO buffer '$$s' on port $$s with IO_TYPE '$$s'.  EQ_CAL can only be set to 0, 1, 2, or 3." />
    <msg uid="1047" type="Error" text="'$$s' is not a valid DIFFDRIVE value for $$s PIO buffer '$$s'.  DIFFDRIVE should be set to NA for IO_TYPE '$$s'." />
    <msg uid="1048" type="Error" text="'$$s' is not a valid MULTDRIVE value for $$s PIO buffer '$$s'.  MULTDRIVE should be set to NA for IO_TYPE '$$s'." />
    <msg uid="1049" type="Error" text="PIO buffer '$$s' (IO_TYPE '$$s') for port $$s cannot have both PCICLAMP=OFF and input termination turned on (TERMINATEVTT=$$s), due to IO banking scheme conflict." />
    <msg uid="1050" type="Error" text="PIO buffer '$$s' (IO_TYPE '$$s') for port $$s cannot have both PCICLAMP=OFF and equalization turned on (EQ_CAL=$$s), due to IO banking scheme conflict." />
    <msg uid="1051" type="Error" text="Illegal assignment of differential IO_TYPE '$$s' to bidirectional PIO buffer '$$s' for port $$s." />
    <msg uid="1052" type="Error" text="Illegal assignment of single-ended IO_TYPE '$$s' for port $$s to differential $$s buffer '$$s'.\n" />
    <msg uid="1053" type="Error" text="Component $$s($$s) has an illegal DYNDEL_VAL setting($$s).  Legal values are 0-127." />
    <msg uid="1054" type="Error" text="IOBUF '$$s' assigned property $$s is not supported in $$s.\n" />
    <msg uid="1055" type="Error" text="$$s EBR '$$s' is implemented as pseudo dual port memory. The WEB should be tied to GND." />
    <msg uid="1056" type="Error" text="$$s component CLKO output on instance '$$s' can only drive clock loads.\n" />
    <msg uid="1057" type="Error" text="$$s component CLKO output on instance '$$s' cannot drive a $$s component, '$$s'.\n" />
    <msg uid="1058" type="Error" text="PCS (SerDes) '$$s' pin '$$s' is not directly connected to Primary IO.\n" />
    <msg uid="1059" type="Error" text="VCC cannot drive REFCLK_FROM_NQ in $$s '$$s'.\n" />
    <msg uid="1060" type="Error" text="Signal REFCLK_FROM_NQ is missing in $$s '$$s'.\n" />
    <msg uid="1061" type="Warning" level="2" text="Component $$s($$s) has GSR=ENABLED. DDR components do not allow GSR.  Turning off GSR setting." />
    <msg uid="1062" type="Warning" level="2" text="For component $$s(DELAYB), input DEL$$d is floating.  Connecting input to GND.\n" />
    <msg uid="1063" type="Error" text="This device does not support routing carry-out signal from lower bit of ripple slice. Check comp '$$s'." />
    <msg uid="1064" type="Error" text="This device does not allow VCC to drive CIN pin of RIPPLE comp '$$s'.  Please check your design." />
    <msg uid="1065" type="Error" text="This device does not allow routing CIN signal of RIPPLE comp using regular routing resources. Signal '$$s' of comp '$$s' cannot be tied to a live signal. This could be caused by a NOMERGE or NOCLIP property related to the signal. Please check your design." />
    <msg uid="1066" type="Error" text="This device does not allow routing COUT signal of RIPPLE comp using regular routing resources. Signal '$$s' of comp '$$s' drives multiple comps and cannot use fast carry. Please check your design." />
    <msg uid="1067" type="Error" text="This device does not allow routing COUT signalof RIPPLE comp using regular routing resources. Signal '$$s' of comp '$$s' must drive CIN of RIPPLE and use fast carry. Please check your design." />
    <msg uid="1068" type="Error" text="Fixed delay cell '$$s' cannot drive $$s pin of input register '$$s'.\n" />
    <msg uid="1069" type="Error" text="Dynamic delay cell '$$s' cannot drive $$s pin of input DDR '$$s'.\n" />
    <msg uid="1070" type="Error" text="Dynamic delay cell '$$s' cannot drive component '$$s'.\n" />
    <msg uid="1071" type="Error" text="Property FIXEDDELAY cannot be assigned to '$$s' driver of $$s pin of register '$$s'.\n" />
    <msg uid="1072" type="Error" text="Cannot assign FIXEDDELAY property to port($$s) that is connected to an $$s component($$s) in memory mode.\n" />
    <msg uid="1073" type="Error" text="Cannot assign FIXEDDELAY property to port($$s) that is connected to an $$s component($$s).\n" />
    <msg uid="1074" type="Error" text="Property FIXEDDELAY cannot be assigned to '$$s' driver of $$s pin of input DDR '$$s'.\n" />
    <msg uid="1075" type="Warning" level="2" text="Property FIXEDDELAY assigned to input '$$s' will be applied to input registers only.\n" />
    <msg uid="1076" type="Error" text="Property FIXEDDELAY cannot be assigned to '$$s'. It must be data input of input register or DDR.\n" />
    <msg uid="1077" type="Error" text="Property FIXEDDELAY cannot be assigned to component '$$s'.\n" />
    <msg uid="1078" type="Error" text="IDDR2 cell '$$s' has no driver for the data input." />
    <msg uid="1079" type="Error" text="Cell $$s ($$s in GEN mode) cannot use delay bypass. The cell must be driven by either a DELAYB or DELAYC component.\n" />
    <msg uid="1080" type="Warning" level="2" text="Merging pin $$s to pin $$s of DSP comp $$s in signal $$s.\n" />
    <msg uid="1081" type="Warning" level="2" text="Merging pin $$s to pin $$s of DSP comp $$s for constant $$d.\n" />
    <msg uid="1082" type="Error" text="Unable to convert DSP properties from ECP2 to ECP3.\n" />
    <msg uid="1083" type="Error" text="Error: Cannot convert properties from ECP2 to ECP3.\n" />
    <msg uid="1084" type="Error" text="$$s : Pin $$s has no driver.\n  Possible causes are (1) redundant logic or (2) undriven input.\n" />
    <msg uid="1085" type="Error" text="$$s : Pin $$s has no driver.\n" />
    <msg uid="1086" type="Error" text="$$s : Pin $$s has multiple sources.\n" />
    <msg uid="1087" type="Error" text="$$s : ALU24 comp is only allowed from ECP2 conversion.\n" />
    <msg uid="1088" type="Error" text="$$s :$$s property value cannot be NONE for MAC mode.\n" />
    <msg uid="1089" type="Error" text="$$s :value $$s for property $$s is not allowed.\n" />
    <msg uid="1090" type="Error" text="$$s :No Reset Source for $$s.\n" />
    <msg uid="1091" type="Error" text="$$s :Cannot be tie-hi for $$s.\n" />
    <msg uid="1092" type="Error" text="$$s :No Reset source for $$s.\n" />
    <msg uid="1093" type="Error" text="$$s :No Clk Enable source for $$s.\n" />
    <msg uid="1094" type="Error" text="$$s :Cannot be tie-low for $$s.\n" />
    <msg uid="1095" type="Error" text="$$s :No Clk Enable Source for $$s.\n" />
    <msg uid="1096" type="Error" text="$$s :No CLK source for $$s.\n" />
    <msg uid="1097" type="Error" text="$$s : MA/MB port $$s has no driver.\n" />
    <msg uid="1098" type="Error" text="$$s :Cannot be tie-low/tie-hi for port $$s (hardware limitation).\n" />
    <msg uid="1099" type="Error" text="$$s : SRI Pin $$s is not connected, but the Source is statically connected to VCC(Serial Input).\n" />
    <msg uid="1100" type="Error" text="$$s :SRI cannot be tied high (hardware limitation).\n" />
    <msg uid="1101" type="Error" text="$$s : Input A Pin $$s is not connected, but the Source is statically connected to GND(Parallel Input).\n" />
    <msg uid="1102" type="Error" text="$$s : Input B Pin $$s is not connected, but the Source is statically connected to GND(Parallel Input).\n" />
    <msg uid="1103" type="Error" text="$$s :SRI input $$s does not correspond to output from SRO.\n" />
    <msg uid="1104" type="Error" text="$$s : shift pin $$s must be only driven by $$s (hardware limitation).\n" />
    <msg uid="1105" type="Error" text="$$s : Pin $$s shares the same signal with other SRI pin (not feasible in hardware).\n" />
    <msg uid="1106" type="Error" text="$$s : Pin $$s has mixed input with other SRI pin (not feasible in hardware).\n" />
    <msg uid="1107" type="Error" text="$$s : SRO net $$s on pin $$s cannot have more than 1 driver (illegal netlist).\n" />
    <msg uid="1108" type="Error" text="$$s : Pin $$s cannot drive SRI pin of itself (hardware limitation).\n" />
    <msg uid="1109" type="Error" text="$$s : Pin $$s cannot drive non-SRI pin $$s on DSP component $$s (hardware limitation).\n" />
    <msg uid="1110" type="Error" text="$$s : Pin $$s drives more than 1 SRI pin (not feasible in hardware).\n" />
    <msg uid="1111" type="Error" text="$$s : The length of shift chain $$d exceeds the device limit of $$d.\n" />
    <msg uid="1112" type="Error" text="$$s : Pin $$s cannot connect to FPGA comp $$s (hardware limitation).\n" />
    <msg uid="1113" type="Error" text="$$s : ALU54 input pin $$s has no driver.\n" />
    <msg uid="1114" type="Error" text="$$s : $$s property value cannot be TRUE.\n" />
    <msg uid="1115" type="Error" text="$$s : Input pin $$s grounded conflicts with other CIN floating (hardware limitation).\n" />
    <msg uid="1116" type="Error" text="$$s : Input pin $$s cannot be tied high (hardware limitation).\n" />
    <msg uid="1117" type="Error" text="$$s : Input pin $$s cannot be floating (hardware limitation).\n" />
    <msg uid="1118" type="Error" text="$$s : Input pin $$s has multiple sources.\n" />
    <msg uid="1119" type="Error" text="$$s ALU $$s pin must be driven by another ALU R output pin or grounded (hardware limitation).\n" />
    <msg uid="1120" type="Error" text="$$s : The length of cascaded chain $$d exceeds the device limit of $$d.\n" />
    <msg uid="1121" type="Error" text="Unable to find $$s property for ALU54 $$s.\n" />
    <msg uid="1122" type="Warning" level="2" text="$$s: If you are using this cascaded ALU54 with MULT9 mode to implement (A0*B0 - A1*B1) + (A2*B2 - A3*B3), it might not work.\n" />
    <msg uid="1123" type="Error" text="$$s : $$s pin must connect to $$s pin of the preceding ALU in cascaded ALUs (hardware limitation).\n" />
    <msg uid="1124" type="Error" text="$$s : $$s pin can only drive $$s pin of another ALU (hardware limitation).\n" />
    <msg uid="1125" type="Error" text="$$s : MULT output pin $$s must be floating when output P drives C input of ALU.\n" />
    <msg uid="1126" type="Error" text="$$s : MULT output pin $$s cannot connect to ALU54 input pin $$s.\n" />
    <msg uid="1127" type="Error" text="$$s : MULT output pin $$s cannot connect more than 1 pin when it is driving ALU (hardware limitation).\n" />
    <msg uid="1128" type="Error" text="$$s : MULT output pin $$s cannot connect to ALU54 input pin $$s (hardware limitation).\n" />
    <msg uid="1129" type="Error" text="$$s : ALU54 must have the MULT9_MODE property set to ENABLED when linking to MULT9.\n" />
    <msg uid="1130" type="Error" text="$$s :1. MULT18 output pin $$s cannot connect to ALU24 input pin $$s.\n" />
    <msg uid="1131" type="Error" text="$$s : MULT output pin $$s cannot connect to ALU24 input pin $$s (hardware limitation, spidx = $$d, tpidx = $$d).\n" />
    <msg uid="1132" type="Error" text="$$s :3. MULT output pin $$s cannot connect to ALU24 input pin $$s (hardware limitation).\n" />
    <msg uid="1133" type="Error" text="$$s : MULT18 output pin $$s cannot connect to ALU54 input pin $$s (hardware limitation).\n" />
    <msg uid="1134" type="Error" text="$$s : MULT9 output pin $$s cannot connect to ALU54 input pin $$s (hardware limitation).\n" />
    <msg uid="1135" type="Error" text="$$s : MULT output pin $$s cannot connect to input pin $$s of comp $$s (hardware limitation).\n" />
    <msg uid="1136" type="Error" text="$$s : ALU input pin $$s can only have one source.\n" />
    <msg uid="1137" type="Error" text="$$s : ALU54 input pin $$s cannot connect to output pin $$s of comp $$s (hardware limitation).\n" />
    <msg uid="1138" type="Error" text="$$s : ALU24 input pin $$s cannot connect to output pin $$s of comp $$s (hardware limitation).\n" />
    <msg uid="1139" type="Error" text="$$s : ALU input pin $$s cannot connect to output pin $$s of comp $$s (hardware limitation).\n" />
    <msg uid="1140" type="Error" text="$$s : ALU54 A and MA input come from different MULT18 (hardware violation).\n" />
    <msg uid="1141" type="Error" text="$$s : ALU54 B and MB input come from different MULT18 (hardware violation).\n" />
    <msg uid="1142" type="Error" text="$$s : ALU54 A low and MA low input come from different MULT9 (hardware violation).\n" />
    <msg uid="1143" type="Error" text="$$s : ALU54 A high and MA high input come from different MULT9 (hardware violation).\n" />
    <msg uid="1144" type="Error" text="$$s : ALU54 B low and MB low input come from different MULT9 (hardware violation).\n" />
    <msg uid="1145" type="Error" text="$$s : ALU54 B high and MB high input come from different MULT9 (hardware violation).\n" />
    <msg uid="1146" type="Error" text="$$s : ALU54 input pin $$s can only have one source.\n" />
    <msg uid="1147" type="Error" text="$$s : ALU54 input pin $$s cannot connect to MULT18 output pin $$s (hardware limitation).\n" />
    <msg uid="1148" type="Error" text="$$s : ALU54 input pin $$s cannot connect to MULT9 output pin $$s (hardware limitation).\n" />
    <msg uid="1149" type="Error" text="$$s : ALU24 input pin $$s has to be tied low or high.\n" />
    <msg uid="1150" type="Error" text="$$s : ALU54 with internal feedback must use output pipeline register.\n" />
    <msg uid="1151" type="Error" text="$$s : ALU54 input pin $$s signal cannot extend into pin $$s for sign extension.\n" />
    <msg uid="1152" type="Error" text="$$s : ALU54 input pin $$s must have cascaded driver.\n" />
    <msg uid="1153" type="Error" text="$$s : $$s pin must connect to $$s pin of the preceding ALU, since CIN shift18R is selected.\n" />
    <msg uid="1154" type="Error" text="$$s : ALU54 input pin $$s has multiple sources.\n" />
    <msg uid="1155" type="Error" text="$$s : ALU54 has to be cascaded when CIN shift18R is selected.\n" />
    <msg uid="1156" type="Error" text="$$s : AMUX feeding MULT18 $$s cannot be bypassed when OP[1:0] = 01.\n" />
    <msg uid="1157" type="Error" text="$$s : AMUX feeding MULT18 $$s must be bypassed when OP[1:0] = 10.\n" />
    <msg uid="1158" type="Error" text="$$s : BMUX feeding MULT18 $$s cannot be bypassed when OP[3:2] = 00, 01, or 0x.\n" />
    <msg uid="1159" type="Error" text="$$s : BMUX feeding MULT18 $$s must be bypassed when OP[3:2] = 10.\n" />
    <msg uid="1160" type="Error" text="$$s : ALU54 cannot have $$s. $$s output driving MA input (hardware limitation).\n" />
    <msg uid="1161" type="Error" text="$$s : ALU54 cannot have $$s as MA input (hardware limitation).\n" />
    <msg uid="1162" type="Error" text="$$s : ALU54 cannot have $$s. $$s output driving MB input (hardware limitation).\n" />
    <msg uid="1163" type="Error" text="$$s : ALU54 cannot have $$s as MB input (hardware limitation).\n" />
    <msg uid="1164" type="Error" text="$$s : ALU54 input MULTs must be of the same type.\n" />
    <msg uid="1165" type="Error" text="$$s : ALU24 cannot have $$s. $$s output driving MA input (hardware limitation).\n" />
    <msg uid="1166" type="Error" text="$$s : ALU24 cannot have $$s as MA input (hardware limitation).\n" />
    <msg uid="1167" type="Error" text="$$s : ALU24 cannot have $$s. $$s output driving MB input (hardware limitation).\n" />
    <msg uid="1168" type="Error" text="$$s : ALU24 cannot have $$s as MB input (hardware limitation).\n" />
    <msg uid="1169" type="Error" text="$$s : ALU24 input MULTs must be of the same type.\n" />
    <msg uid="1170" type="Error" text="$$s : Pin $$s must be driven by MULT18/MULT9 output $$s in net $$s (hardware limitation).\n" />
    <msg uid="1171" type="Error" text="$$s : Net $$s can only have two pins with MULT18/MULT9 driver $$s and ALU54/ALU24 load $$s or $$s (hardware limitation).\n" />
    <msg uid="1172" type="Error" text="$$s : Pin $$s must be floating in net $$s (hardware requirement).\n" />
    <msg uid="1173" type="Error" text="$$s : Pin $$s must drive ALU input $$s in net $$s (hardware requirement).\n" />
    <msg uid="1174" type="Error" text="$$s : Pin $$s can only drive ALU input $$s or $$s in net $$s (hardware requirement).\n" />
    <msg uid="1175" type="Error" text="$$s : The bypassed MULT must connect to ALU54.\n" />
    <msg uid="1176" type="Error" text="$$s : The bypassed MULT cannot have pin $$s floating.\n" />
    <msg uid="1177" type="Warning" level="2" text="$$s : OPCODEOP0 pipe is not consistent with Single Clock cycle C0 input data pipe.\n" />
    <msg uid="1178" type="Warning" level="2" text="$$s : OPCODEOP0 pipe is not consistent with non-pipelined C0 input.\n" />
    <msg uid="1179" type="Warning" level="2" text="$$s : OPCODEOP1 pipe is not consistent with Single Clock cycle C0 input data pipe.\n" />
    <msg uid="1180" type="Warning" level="2" text="$$s : OPCODEOP1 pipe is not consistent with non-pipelined C0 input.\n" />
    <msg uid="1181" type="Warning" level="2" text="$$s : OPCODEIN pipe is not consistent with Single Clock cycle C0 input data pipe.\n" />
    <msg uid="1182" type="Warning" level="2" text="$$s : OPCODEIN pipe is not consistent with non-pipelined C0 input.\n" />
    <msg uid="1183" type="Warning" level="2" text="$$s : OPCODEOP0 pipe is not consistent with Single Clock cycle C1 input data pipe.\n" />
    <msg uid="1184" type="Warning" level="2" text="$$s : OPCODEOP0 pipe is not consistent with non-pipelined C1 input.\n" />
    <msg uid="1185" type="Warning" level="2" text="$$s : OPCODEOP1 pipe is not consistent with Single Clock cycle C1 input data pipe.\n" />
    <msg uid="1186" type="Warning" level="2" text="$$s : OPCODEOP1 pipe is not consistent with non-pipelined C1 input.\n" />
    <msg uid="1187" type="Warning" level="2" text="$$s : OPCODEIN pipe is not consistent with Single Clock cycle C1 input data pipe.\n" />
    <msg uid="1188" type="Warning" level="2" text="$$s : OPCODEIN pipe is not consistent with non-pipelined C1 input.\n" />
    <msg uid="1189" type="Warning" level="2" text="$$s : The data pipe is not consistent with 2 clock cycle OPCODEOP0 pipe.\n" />
    <msg uid="1190" type="Warning" level="2" text="$$s : The data pipe is not consistent with 1 clock cycle OPCODEOP0 pipe.\n" />
    <msg uid="1191" type="Warning" level="2" text="$$s : A/B data pipe is not consistent with non-pipelined OPCODEOP0 control.\n" />
    <msg uid="1192" type="Warning" level="2" text="$$s : The data pipe is not consistent with 2 clock cycle OPCODEOP1 pipe.\n" />
    <msg uid="1193" type="Warning" level="2" text="$$s : The data pipe is not consistent with 1 clock cycle OPCODEOP1 pipe.\n" />
    <msg uid="1194" type="Warning" level="2" text="$$s : A/B data pipe is not consistent with non-pipelined OPCODEOP1 control.\n" />
    <msg uid="1195" type="Warning" level="2" text="$$s : The data pipe is not consistent with 2 clock cycle OPCODEIN pipe.\n" />
    <msg uid="1196" type="Warning" level="2" text="$$s : The data pipe is not consistent with 1 clock cycle OPCODEIN pipe.\n" />
    <msg uid="1197" type="Warning" level="2" text="$$s : A/B data pipe is not consistent with non-pipelined OPCODEIN control.\n" />
    <msg uid="1198" type="Warning" level="2" text="$$s : The data pipe is not consistent with 2 clock cycle ADDNSUB pipe.\n" />
    <msg uid="1199" type="Warning" level="2" text="$$s : The data pipe is not consistent with 1 clock cycle ADDNSUB pipe.\n" />
    <msg uid="1200" type="Warning" level="2" text="$$s : A/B data pipe is not consistent with non-pipelined ADDNSUB control.\n" />
    <msg uid="1201" type="Warning" level="2" text="$$s : Shift input is used, but SRI input is grounded.\n" />
    <msg uid="1202" type="Warning" level="2" text="$$s : The property $$s is undefined in cell model and will be ignored by the DSP mapper.\n" />
    <msg uid="1203" type="Warning" level="2" text="$$s : $$s pin is used but grounded with limited hardware implementation. Changing the opcode to use CMUX internal grounding should be better.\n" />
    <msg uid="1204" type="Warning" level="2" text="$$s &amp; $$s SIGNEDA pins should have the same source for shift chained MULTs.\n" />
    <msg uid="1205" type="Warning" level="2" text="$$s &amp; $$s SIGNEDB pins should have the same source for shift chained MULTs.\n" />
    <msg uid="1206" type="Warning" level="2" text="$$s input connection of ALU54 $$s is useless and will be removed.\n" />
    <msg uid="1207" type="Warning" level="2" text="$$s : PIPELINE register and A/B input register might need to share the same controls.\n" />
    <msg uid="1208" type="Warning" level="2" text="$$s : PIPELINE register and A input register might need to share the same controls.\n" />
    <msg uid="1209" type="Warning" level="2" text="$$s : PIPELINE register and B input register might need to share the same controls.\n" />
    <msg uid="1210" type="Warning" level="2" text="$$s : OUTPUT register and A/B input register might need to share the same controls.\n" />
    <msg uid="1211" type="Warning" level="2" text="$$s : OUTPUT register and A input register might need to share the same controls.\n" />
    <msg uid="1212" type="Warning" level="2" text="$$s : OUTPUT register and B input register might need to share the same controls.\n" />
    <msg uid="1213" type="Warning" level="2" text="$$s : PIPELINE register and OUTPUT register might need to share the same controls.\n" />
    <msg uid="1214" type="Error" text="The number MULT18/MULT9 with Shift Inputs connected to GND exceeds the device limit.\n" />
    <msg uid="1215" type="Error" text="The number of ALU54/ALU24 with Cascaded Inputs connected to GND exceeds the device limit.\n" />
    <msg uid="1216" type="Error" text="$$s : Input register A and SIGNEDA must share the same controls.\n" />
    <msg uid="1217" type="Error" text="$$s : Input register B and SIGNEDB must share the same controls.\n" />
    <msg uid="1218" type="Error" text="$$s : PIPELINE register and A/B input register must share the same controls.\n" />
    <msg uid="1219" type="Error" text="$$s : PIPELINE register and A input register must share the same controls.\n" />
    <msg uid="1220" type="Error" text="$$s : PIPELINE register and B input register must share the same controls.\n" />
    <msg uid="1221" type="Error" text="$$s : OUTPUT register and A/B input register must share the same controls.\n" />
    <msg uid="1222" type="Error" text="$$s : OUTPUT register and A input register must share the same controls.\n" />
    <msg uid="1223" type="Error" text="$$s : OUTPUT register and B input register must share the same controls.\n" />
    <msg uid="1224" type="Error" text="$$s : PIPELINE register and OUTPUT register must share the same controls.\n" />
    <msg uid="1225" type="Error" text="$$s : Cannot be converted from ECP2 MULT9X9 mode.\n" />
    <msg uid="1226" type="Error" text="$$s : Cannot be converted from ECP2 MULT18X18 mode.\n" />
    <msg uid="1227" type="Error" text="$$s : Input register A and SIGNEDA_0 must share the same controls.\n" />
    <msg uid="1228" type="Error" text="$$s : Input register B and SIGNEDB_0 must share the same controls.\n" />
    <msg uid="1229" type="Error" text="$$s : PIPELINE register and input register A or B must share the same control.\n" />
    <msg uid="1230" type="Error" text="$$s : PIPELINE register and input register A must share the same control.\n" />
    <msg uid="1231" type="Error" text="$$s : PIPELINE register and input register B must share the same control.\n" />
    <msg uid="1232" type="Error" text="$$s : PIPELINE register and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1233" type="Error" text="$$s : PIPELINE register and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1234" type="Error" text="$$s : OUTPUT register and input register A or B must share the same control.\n" />
    <msg uid="1235" type="Error" text="$$s : OUTPUT register and input register A must share the same control.\n" />
    <msg uid="1236" type="Error" text="$$s : OUTPUT register and input register B must share the same control.\n" />
    <msg uid="1237" type="Error" text="$$s : PIPELINE register and OUTPUT register must share the same control.\n" />
    <msg uid="1238" type="Error" text="$$s : Cannot be converted from ECP2 MULT36X36 mode.\n" />
    <msg uid="1239" type="Error" text="$$s : Input register A0 and SIGNEDA_0 must share the same controls.\n" />
    <msg uid="1240" type="Error" text="$$s : Input register A1 and SIGNEDA_0 must share the same controls.\n" />
    <msg uid="1241" type="Error" text="$$s : Input register B0 and SIGNEDB_0 must share the same controls.\n" />
    <msg uid="1242" type="Error" text="$$s : Input register B1 and SIGNEDB_0 must share the same controls.\n" />
    <msg uid="1243" type="Error" text="$$s : Input register A0/B0 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1244" type="Error" text="$$s : Input register A0 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1245" type="Error" text="$$s : Input register B0 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1246" type="Error" text="$$s : Input register A0 or B0 must be used when ADDSUB_0 register is used.\n" />
    <msg uid="1247" type="Error" text="$$s : Input register A1/B1 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1248" type="Error" text="$$s : Input register A1 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1249" type="Error" text="$$s : Input register B1 and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1250" type="Error" text="$$s : Input register A1 or B1 must be used when ADDSUB_0 register is used.\n" />
    <msg uid="1251" type="Error" text="$$s : Register PIPELINE0 and ADDSUB_1 must share the same controls.\n" />
    <msg uid="1252" type="Error" text="$$s : PIPELINE0 register must be used when ADDSUB_1 register is used.\n" />
    <msg uid="1253" type="Error" text="$$s : Register PIPELINE1 and ADDSUB_1 must share the same controls.\n" />
    <msg uid="1254" type="Error" text="$$s : PIPELINE1 register must be used when ADDSUB_1 register is used.\n" />
    <msg uid="1255" type="Error" text="$$s PIPELINE0 and $$s PIPELINE1 registers must share the same controls.\n" />
    <msg uid="1256" type="Error" text="$$s PIPELINE0 and $$s PIPELINE1 registers must be both ON or both OFF.\n" />
    <msg uid="1257" type="Error" text="$$s : Register PIPELINE0 and INPUTA0 or INPUTB0 must share the same controls.\n" />
    <msg uid="1258" type="Error" text="$$s : Register PIPELINE0 and INPUTA0 must share the same controls.\n" />
    <msg uid="1259" type="Error" text="$$s : Register PIPELINE0 and INPUTB0 must share the same controls.\n" />
    <msg uid="1260" type="Error" text="$$s : Register PIPELINE0 and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1261" type="Error" text="$$s : Register PIPELINE0 and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1262" type="Error" text="$$s : Register PIPELINE1 and INPUTA1 or INPUTB1 must share the same controls.\n" />
    <msg uid="1263" type="Error" text="$$s : Register PIPELINE1 and INPUTA1 must share the same controls.\n" />
    <msg uid="1264" type="Error" text="$$s : Register PIPELINE1 and INPUTB1 must share the same controls.\n" />
    <msg uid="1265" type="Error" text="$$s : Register PIPELINE1 and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1266" type="Error" text="$$s : Register PIPELINE1 and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1267" type="Error" text="$$s : OUTPUT register and A0/B0 input register must share the same controls.\n" />
    <msg uid="1268" type="Error" text="$$s : OUTPUT register and A0 input register must share the same controls.\n" />
    <msg uid="1269" type="Error" text="$$s : OUTPUT register and B0 input register must share the same controls.\n" />
    <msg uid="1270" type="Error" text="$$s : OUTPUT register and A1/B1 input register must share the same controls.\n" />
    <msg uid="1271" type="Error" text="$$s : OUTPUT register and A1 input register must share the same controls.\n" />
    <msg uid="1272" type="Error" text="$$s : OUTPUT register and B1 input register must share the same controls.\n" />
    <msg uid="1273" type="Error" text="$$s : OUTPUT register and PIPELINE0 register must share the same controls.\n" />
    <msg uid="1274" type="Error" text="$$s : OUTPUT register and PIPELINE1 register must share the same controls.\n" />
    <msg uid="1275" type="Error" text="$$s : Cannot be converted from ECP2 MULT9X9ADDSUB mode.\n" />
    <msg uid="1276" type="Error" text="$$s : Input register A2 and SIGNEDA_0 must share the same controls.\n" />
    <msg uid="1277" type="Error" text="$$s : Input register A3 and SIGNEDA_0 must share the same controls.\n" />
    <msg uid="1278" type="Error" text="$$s : Input register B2 and SIGNEDB_0 must share the same controls.\n" />
    <msg uid="1279" type="Error" text="$$s : Input register B3 and SIGNEDB_0 must share the same controls.\n" />
    <msg uid="1280" type="Error" text="$$s : Input register A0/B0 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1281" type="Error" text="$$s : Input register A0 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1282" type="Error" text="$$s : Input register B0 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1283" type="Error" text="$$s : Input register A0 or B0 must be used when ADDSUB1_0 register is used.\n" />
    <msg uid="1284" type="Error" text="$$s : Input register A1/B1 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1285" type="Error" text="$$s : Input register A1 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1286" type="Error" text="$$s : Input register B1 and ADDSUB1_0 must share the same controls.\n" />
    <msg uid="1287" type="Error" text="$$s : Input register A1 or B1 must be used when ADDSUB1_0 register is used.\n" />
    <msg uid="1288" type="Error" text="$$s : Input register A2/B2 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1289" type="Error" text="$$s : Input register A2 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1290" type="Error" text="$$s : Input register B2 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1291" type="Error" text="$$s : Input register A2 or B2 must be used when ADDSUB3_0 register is used.\n" />
    <msg uid="1292" type="Error" text="$$s : Input register A3/B3 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1293" type="Error" text="$$s : Input register A3 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1294" type="Error" text="$$s : Input register B3 and ADDSUB3_0 must share the same controls.\n" />
    <msg uid="1295" type="Error" text="$$s : Input register A3 or B3 must be used when ADDSUB3_0 register is used.\n" />
    <msg uid="1296" type="Error" text="$$s : Register PIPELINE0 and ADDSUB1_1 must share the same controls.\n" />
    <msg uid="1297" type="Error" text="$$s : PIPELINE0 register must be used when ADDSUB1_1 register is used.\n" />
    <msg uid="1298" type="Error" text="$$s : Register PIPELINE1 and ADDSUB1_1 must share the same controls.\n" />
    <msg uid="1299" type="Error" text="$$s : PIPELINE1 register must be used when ADDSUB1_1 register is used.\n" />
    <msg uid="1300" type="Error" text="$$s : Register PIPELINE2 and ADDSUB3_1 must share the same controls.\n" />
    <msg uid="1301" type="Error" text="$$s : PIPELINE2 register must be used when ADDSUB3_1 register is used.\n" />
    <msg uid="1302" type="Error" text="$$s : Register PIPELINE3 and ADDSUB3_1 must share the same controls.\n" />
    <msg uid="1303" type="Error" text="$$s : PIPELINE3 register must be used when ADDSUB3_1 register is used.\n" />
    <msg uid="1304" type="Error" text="$$s PIPELINE0 and $$s PIPELINE1 and $$s PIPELINE2 and $$s PIPELINE3 registers must share the same controls.\n" />
    <msg uid="1305" type="Error" text="$$s PIPELINE0 and $$s PIPELINE1 and $$s PIPELINE2 and $$s PIPELINE3 registers must be all ON or all OFF.\n" />
    <msg uid="1306" type="Error" text="$$s : Register PIPELINE2 and INPUTA2 or INPUTB2 must share the same controls.\n" />
    <msg uid="1307" type="Error" text="$$s : Register PIPELINE2 and INPUTA2 must share the same controls.\n" />
    <msg uid="1308" type="Error" text="$$s : Register PIPELINE2 and INPUTB2 must share the same controls.\n" />
    <msg uid="1309" type="Error" text="$$s : Register PIPELINE2 and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1310" type="Error" text="$$s : Register PIPELINE2 and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1311" type="Error" text="$$s : Register PIPELINE3 and INPUTA3 or INPUTB3 must share the same controls.\n" />
    <msg uid="1312" type="Error" text="$$s : Register PIPELINE3 and INPUTA3 must share the same controls.\n" />
    <msg uid="1313" type="Error" text="$$s : Register PIPELINE3 and INPUTB3 must share the same controls.\n" />
    <msg uid="1314" type="Error" text="$$s : Register PIPELINE3 and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1315" type="Error" text="$$s : Register PIPELINE3 and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1316" type="Error" text="$$s : OUTPUT register and A2/B2 input register must share the same controls.\n" />
    <msg uid="1317" type="Error" text="$$s : OUTPUT register and A2 input register must share the same controls.\n" />
    <msg uid="1318" type="Error" text="$$s : OUTPUT register and B2 input register must share the same controls.\n" />
    <msg uid="1319" type="Error" text="$$s : OUTPUT register and A3/B3 input register must share the same controls.\n" />
    <msg uid="1320" type="Error" text="$$s : OUTPUT register and A3 input register must share the same controls.\n" />
    <msg uid="1321" type="Error" text="$$s : OUTPUT register and B3 input register must share the same controls.\n" />
    <msg uid="1322" type="Error" text="$$s : OUTPUT register and PIPELINE2 register must share the same controls.\n" />
    <msg uid="1323" type="Error" text="$$s : OUTPUT register and PIPELINE3 register must share the same controls.\n" />
    <msg uid="1324" type="Error" text="$$s : Cannot be converted from ECP2 MULT9X9ADDSUBSUM mode.\n" />
    <msg uid="1325" type="Error" text="$$s : Cannot be converted from ECP2 MULT18X18ADDSUB mode.\n" />
    <msg uid="1326" type="Error" text="$$s : Cannot be converted from ECP2 MULT18X18ADDSUBSUM mode.\n" />
    <msg uid="1327" type="Error" text="$$s : Register PIPELINE and SIGNEDA_1 must share the same controls.\n" />
    <msg uid="1328" type="Error" text="$$s : Register PIPELINE and SIGNEDB_1 must share the same controls.\n" />
    <msg uid="1329" type="Error" text="$$s : Register PIPELINE and INPUTA or INPUTB must share the same controls.\n" />
    <msg uid="1330" type="Error" text="$$s : Register PIPELINE and INPUTA must share the same controls.\n" />
    <msg uid="1331" type="Error" text="$$s : Register PIPELINE and INPUTB must share the same controls.\n" />
    <msg uid="1332" type="Error" text="$$s : Input register A/B and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1333" type="Error" text="$$s : Input register A and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1334" type="Error" text="$$s : Input register B and ADDSUB_0 must share the same controls.\n" />
    <msg uid="1335" type="Error" text="$$s : Input register A or B must be used when ADDSUB_0 register is used.\n" />
    <msg uid="1336" type="Error" text="$$s : Input register A/B and ACCUMSLOAD_0 must share the same controls.\n" />
    <msg uid="1337" type="Error" text="$$s : Input register A and ACCUMSLOAD_0 must share the same controls.\n" />
    <msg uid="1338" type="Error" text="$$s : Input register B and ACCUMSLOAD_0 must share the same controls.\n" />
    <msg uid="1339" type="Error" text="$$s : Input register A or B must be used when ACCUMSLOAD_0 register is used.\n" />
    <msg uid="1340" type="Error" text="$$s : PIPELINE register and ADDSUB_1 must share the same controls.\n" />
    <msg uid="1341" type="Error" text="$$s : PIPELINE register must be used when ADDSUB_1 register is used.\n" />
    <msg uid="1342" type="Error" text="$$s : PIPELINE register and ACCUMSLOAD_1 must share the same controls.\n" />
    <msg uid="1343" type="Error" text="$$s : PIPELINE register must be used when ACCUMSLOAD_1 register is used.\n" />
    <msg uid="1344" type="Error" text="$$s : OUTPUT register and PIPELINE register must share the same controls.\n" />
    <msg uid="1345" type="Error" text="$$s : ADDNSUB_0 and ACCUMSLOAD_0 registers must share the same controls.\n" />
    <msg uid="1346" type="Error" text="$$s : ADDNSUB_1 and ACCUMSLOAD_1 registers must share the same controls.\n" />
    <msg uid="1347" type="Error" text="$$s : ADDNSUB_0 and ADDNSUB_1 registers must share the same controls.\n" />
    <msg uid="1348" type="Error" text="$$s : ACCUMSLOAD_0 and ACCUMSLOAD_1 registers must share the same controls.\n" />
    <msg uid="1349" type="Error" text="$$s : Cannot be converted from ECP2 MULT18X18MAC mode.\n" />
    <msg uid="1350" type="Error" text="MULT9 $$s and $$s $$s input registers must share the same controls.\n" />
    <msg uid="1351" type="Error" text="MULT9 $$s, $$s, &amp; $$s $$s input registers must share the same controls.\n" />
    <msg uid="1352" type="Error" text="MULT9 $$s, $$s, $$s, &amp; $$s $$s input registers must share the same controls.\n" />
    <msg uid="1353" type="Warning" level="2" text="MULT18 $$s and $$s $$s input registers should share the same controls.\n" />
    <msg uid="1354" type="Warning" level="2" text="MULT18 $$s and $$s $$s input registers should be both ON or both OFF.\n" />
    <msg uid="1355" type="Error" text="$$s : ALU input MULTs shift chain must be in order.\n" />
    <msg uid="1356" type="Error" text="$$s : Input A &amp; B registers must share the same control in MULT_BYPASS mode when input is pipelined.\n" />
    <msg uid="1357" type="Warning" level="2" text="$$s : Input A &amp; B registers have different control in MULT_BYPASS mode when input is pipelined.\n" />
    <msg uid="1358" type="Warning" level="2" text="$$s : Output 0 &amp; 1 registers should share the same control in MULT_BYPASS mode when output is pipelined.\n" />
    <msg uid="1359" type="Error" text="$$s : Output 0 &amp; 1 registers must be selected together in MULT_BYPASS mode when output is pipelined.\n" />
    <msg uid="1360" type="Error" text="$$s : Input A &amp; B registers must be selected together in MULT_BYPASS mode when input is pipelined.\n" />
    <msg uid="1361" type="Warning" level="2" text="$$s : Input A &amp; B register selections are different in MULT_BYPASS mode.\n" />
    <msg uid="1362" type="Warning" level="2" text="$$s : OUTPUT0 &amp; OUTPUT1 registers should use the same controls when selected.\n" />
    <msg uid="1363" type="Warning" level="2" text="$$s : OUTPUT0 &amp; OUTPUT1 registers should use the same controls as input A or B when selected.\n" />
    <msg uid="1364" type="Warning" level="2" text="$$s : OUTPUT0 register should use the same controls as input A or B of MULT $$s when selected.\n" />
    <msg uid="1365" type="Warning" level="2" text="$$s : OUTPUT1 register should use the same controls as input A or B of MULT $$s when selected.\n" />
    <msg uid="1366" type="Warning" level="2" text="$$s : FLAG register should use the same controls as input A or B of MULT $$s when selected.\n" />
    <msg uid="1367" type="Warning" level="2" text="$$s : OUTPUT0 &amp; OUTPUT1 registers should use the same controls when output is pipelined.\n" />
    <msg uid="1368" type="Warning" level="2" text="$$s : OUTPUT0 &amp; OUTPUT1 registers should use the same controls as PIPELINE register of multiplier driving ALU.\n" />
    <msg uid="1369" type="Warning" level="2" text="$$s : OUTPUT0 register should use the same controls as PIPELINE register of multiplier driving ALU.\n" />
    <msg uid="1370" type="Warning" level="2" text="$$s : OUTPUT1 register should use the same controls as PIPELINE register of multiplier driving ALU.\n" />
    <msg uid="1371" type="Warning" level="2" text="$$s : FLAG register should use the same controls as PIPELINE register of multiplier driving ALU.\n" />
    <msg uid="1372" type="Warning" level="2" text="$$s : Pipeline register should use the same controls as the faster of A/B input registers.\n" />
    <msg uid="1373" type="Error" text="$$s : Output 0 &amp; 1 registers must share the same control when output is pipelined.\n" />
    <msg uid="1374" type="Error" text="$$s : Output 0 &amp; 1 registers must share the same control with C input when selected.\n" />
    <msg uid="1375" type="Warning" level="2" text="$$s : Output 0 &amp; 1 registers and C input register have different controls.\n" />
    <msg uid="1376" type="Error" text="$$s : Output 0 &amp; 1 registers must be selected together in MULT_BYPASS mode when output is pipelined." />
    <msg uid="1377" type="Error" text="$$s : Output 0 register must share the same control with C input when selected.\n" />
    <msg uid="1378" type="Warning" level="2" text="$$s : Output 0 register and C input register have different controls.\n" />
    <msg uid="1379" type="Error" text="$$s : Output 1 register must share the same control with C input when selected.\n" />
    <msg uid="1380" type="Warning" level="2" text="$$s : Output 1 register and C input register have different controls.\n" />
    <msg uid="1381" type="Warning" level="2" text="$$s : opcode input register CLK/RST must use the same controls as input A or B register of MULT9 $$s if selected.\n" />
    <msg uid="1382" type="Warning" level="2" text="$$s : Opcode input register CLK/RST must use the same controls as input A register of MULT9 $$s if selected.\n" />
    <msg uid="1383" type="Warning" level="2" text="$$s : Opcode input register CLK/RST must use the same controls as input B register of MULT9 $$s if selected.\n" />
    <msg uid="1384" type="Error" text="$$s : Opcode register CLK/RST must use the same controls as pipeline register of MULT9 $$s if selected.\n" />
    <msg uid="1385" type="Warning" level="2" text="$$s : Opcode input register CLK/RST must use the same controls as input A or B register of MULT18 $$s if selected.\n" />
    <msg uid="1386" type="Warning" level="2" text="$$s : Opcode input register CLK/RST must use the same controls as input A register of MULT18 $$s if selected.\n" />
    <msg uid="1387" type="Warning" level="2" text="$$s : Opcode input register CLK/RST must use the same controls as input B register of MULT18 $$s if selected.\n" />
    <msg uid="1388" type="Warning" level="2" text="$$s : Opcode pipeline register CLK/RST must use the same controls as pipeline register of MULT18 $$s if selected.\n" />
    <msg uid="1389" type="Error" text="$$s : Multiplier register $$s must be in sync with other pipeline or input registers.\n" />
    <msg uid="1390" type="Warning" level="2" text="MULT9 $$s pipeline register selection is ignored due to bypass mode.\n" />
    <msg uid="1391" type="Warning" level="2" text="MULT9 $$s output register selection is ignored due to bypass mode.\n" />
    <msg uid="1392" type="Warning" level="2" text="Multiplier $$s output register selection is ignored due to conflict with ALU.\n" />
    <msg uid="1393" type="Error" text="Multiplier $$s output register selection must be NONE when driving ALU in non-bypass mode.\n" />
    <msg uid="1394" type="Warning" level="2" text="$$s : Pipeline cycle numbers between AL/BL MULT9 datapaths are not in sync.\n" />
    <msg uid="1395" type="Warning" level="2" text="$$s : Pipeline cycle numbers between AH/BH MULT9 datapaths are not in sync.\n" />
    <msg uid="1396" type="Warning" level="2" text="$$s : PIPELINE register of MULT9 $$s and $$s should use the same controls.\n" />
    <msg uid="1397" type="Warning" level="2" text="$$s : PIPELINE (AL &amp; BL) register of non-bypassed MULT9s driving ALU should be both ON or both OFF.\n" />
    <msg uid="1398" type="Warning" level="2" text="$$s : PIPELINE (AH &amp; BH) register of non-bypassed MULT9s driving ALU should be both ON or both OFF.\n" />
    <msg uid="1399" type="Warning" level="2" text="$$s : Output/flag register should be in sync with one of pipeline or input registers.\n" />
    <msg uid="1400" type="Error" text="$$s : Input registers must share the same controls for MULT9 $$s &amp; $$s.\n" />
    <msg uid="1401" type="Warning" level="2" text="$$s : Pipeline cycle numbers between A/B MULT18 datapaths are not in sync.\n" />
    <msg uid="1402" type="Warning" level="2" text="$$s : PIPELINE register of MULT18 $$s and $$s should use the same controls.\n" />
    <msg uid="1403" type="Warning" level="2" text="$$s : PIPELINE (A &amp; B) register of non-bypassed MULT18s driving ALU should be both ON or both OFF.\n" />
    <msg uid="1404" type="Error" text="$$s : OPCODEOP0 &amp; OPCODEOP1 input registers must use the same controls if selected.\n" />
    <msg uid="1405" type="Error" text="$$s : OPCODEOP0 &amp; OPCODEOP1 pipeline registers must use the same controls if selected.\n" />
    <msg uid="1406" type="Error" text="ALU54 $$s and $$s input MULT18s must have input or pipeline register sharing the same controls." />
    <msg uid="1407" type="Warning" level="2" text="$$s : R$$d pin might contain garbage data if ternary 36 bit operation.\n" />
    <msg uid="1408" type="Warning" level="2" text="$$s : R$$d pin is separation bit and should not be used.\n" />
    <msg uid="1409" type="Error" text="$$s : Property $$s cannot be ENABLED after $$s mode conversion.\n" />
    <msg uid="1410" type="Error" text="$$s : Property $$s cannot be SYNC after $$s mode conversion.\n" />
    <msg uid="1411" type="Error" text="$$s : Property $$s cannot be TRUE after $$s mode conversion.\n" />
    <msg uid="1412" type="Error" text="$$s : Property $$s cannot be DISABLED after $$s mode conversion.\n" />
    <msg uid="1413" type="Error" text="$$s :Property must be specified for $$s." />
    <msg uid="1414" type="Error" text="$$s :Invalid default property value for $$s." />
    <msg uid="1415" type="Error" text="$$s :Property $$s cannot be found." />
    <msg uid="1416" type="Error" text="ALU54 $$s is regular mode but chained to ALU54 $$s which is MULT9 mode.\n" />
    <msg uid="1417" type="Error" text="ALU54 $$s is MULT9 mode but chained to ALU54 $$s which is regular mode\n" />
    <msg uid="1418" type="Error" text="$$s : Input signal $$s exceeds DSP slice input capacity of $$d.\n" />
    <msg uid="1419" type="Warning" level="2" text="$$s : Input signal $$s exceeds DSP block input capacity of $$d.\n" />
    <msg uid="1420" type="Error" text="Error(s) in PIO control signal(s). Please check your design." />
    <msg uid="1421" type="Warning" level="2" text="PIO '$$s' uses unsupported input I/O type $$s.  Setting I/O type to $$s." />
    <msg uid="1422" type="Error" text="PIO '$$s' has unsupported I/O TYPE $$s." />
    <msg uid="1423" type="Warning" level="2" text="IOBUF '$$s' has unsupported PULLMODE $$s. Ignoring." />
    <msg uid="1424" type="Warning" level="2" text="IOBUF '$$s' has unsupported SLEWRATE $$s. Setting to default $$s." />
    <msg uid="1425" type="Error" text="$$s DDR '$$s' has incompatible $$s control with $$s DDR '$$s' of PIO '$$s'." />
    <msg uid="1426" type="Error" text="$$s DDR '$$s' has incompatible $$s control with $$s Register/Latch '$$s' of PIO '$$s'." />
    <msg uid="1427" type="Error" text="$$s DDR $$s is not uniquely connected to IO $$s." />
    <msg uid="1428" type="Warning" level="2" text="CLK polarity is incompatible between $$s and $$s in PIC.\n" />
    <msg uid="1429" type="Warning" level="2" text="Mixed register and latch between $$s and $$s in PIC.\n" />
    <msg uid="1430" type="Error" text="IO LATCH/FF $$s incompatible clock signal with output combinational function $$s." />
    <msg uid="1431" type="Error" text="IO FF $$s has incompatible CLK sense with output combinational function $$s." />
    <msg uid="1432" type="Error" text="Output FF '$$s' has incompatible CE with tristate FF '$$s'." />
    <msg uid="1433" type="Error" text="Tristate FF '$$s' has incompatible CE with output FF '$$s'." />
    <msg uid="1434" type="Error" text="Register $$s and register $$s have incompatible CLKDELAY values." />
    <msg uid="1435" type="Error" text="Latch $$s portion of LATCH-FF is incompatible with output FF for PIO $$s.  Check the flop control configurations in the netlist." />
    <msg uid="1436" type="Error" text="IO register $$s is incompatible with output FF $$s for PIO $$s.  Check the flop control configurations in the netlist." />
    <msg uid="1437" type="Error" text="IO register $$s is incompatible with input FF $$s for PIO $$s.  Check the flop control configurations in the netlist." />
    <msg uid="1438" type="Warning" level="2" text="Cannot pack register $$s in external PIO/PIC (port: $$s, iobuf: $$s).  Converting into internal PFU register." />
    <msg uid="1439" type="Error" text="The design has $$d error(s) related to DDR component(s)." />
    <msg uid="1440" type="Error" text="DDR component $$s cannot be packed in any I/O logic block." />
    <msg uid="1441" type="Error" text="The $$s component '$$s' has signal '$$s' on DQSI pin driven by a non-PIO component '$$s'. DQSI pin should be driven by a PIO component. \n" />
    <msg uid="1442" type="Error" text="The $$s component '$$s' is driven by DQS pad '$$s' that is connected to multiple DQSBUF components. The DQS pad can only drive a single $$s component via the DQSI port. \n" />
    <msg uid="1443" type="Error" text="Signal CLKI is missing in $$s '$$s'.\n" />
    <msg uid="1444" type="Error" text="$$s '$$s' output clocks are missing.\n" />
    <msg uid="1445" type="Error" text="$$s '$$s' has invalid input frequency FIN value ($$1.1f MHz). Valid values of FIN are $$1.1f to $$1.1f MHz." />
    <msg uid="1446" type="Error" text="Cannot determine the input frequency for $$s component '$$s'. The $$s component should have the input frequency defined either by the FIN property or by the FREQUENCY preference on CLKI input net.\n" />
    <msg uid="1447" type="Error" text="$$s '$$s' has invalid CLKI divider setting. Valid values are (1,2,3,...,$$d).\n" />
    <msg uid="1448" type="Error" text="$$s '$$s' has invalid CLKFB divider setting. Valid values are (1,2,3,...,$$d).\n" />
    <msg uid="1449" type="Warning" level="2" text="$$s '$$s' has invalid CLKOP divider setting. Valid values are ($$s)." />
    <msg uid="1450" type="Error" text="$$s '$$s' has invalid CLKOK divider setting. Valid values are (2,4,6,8,...,126,128).\n" />
    <msg uid="1451" type="Warning" level="2" text="Changing CLKOP divider value to $$d to get optimum output frequency f(VCO) for $$s '$$s'.\n" />
    <msg uid="1452" type="Error" text="$$s '$$s' failed to compute the CLKOP divider setting for the given CLKI and CLKFB divider attributes.\n" />
    <msg uid="1453" type="Error" text="$$s '$$s' The CLKOP divider setting ($$d) gives output frequency f(VCO) = $$1.1f MHz, which is out of range ($$1.1f to $$1.1f MHz). Failed to find a valid CLKOP divider for the given CLKI and CLKFB divider attributes.\n" />
    <msg uid="1454" type="Warning" level="2" text="$$s '$$s' The CLKOP divider setting ($$d) gives output frequency f(VCO) = $$1.1f MHz, which is out of range ($$1.1f to $$1.1f MHz). Changing the CLKOP divider value to $$d for optimum f(VCO).\n" />
    <msg uid="1455" type="Warning" level="2" text="$$s '$$s' CLKOP divider setting ($$d) does not give optimum output frequency f(VCO). Suggest changing CLKOP divider to $$d to get the optimum f(VCO) of $$1.1f MHz.\n" />
    <msg uid="1456" type="Warning" level="2" text="Setting the CLKOP divider to $$d to get the optimum output frequency, f(VCO) = $$1.1f MHz, for $$s '$$s'." />
    <msg uid="1457" type="Error" text="CLKFB_DIV * CLKOP_DIV cannot be greater than $$d. Please check the parameters for $$s '$$s'.\n" />
    <msg uid="1458" type="Error" text="$$s '$$s' has invalid divider settings. The current divider values (CLKI_DIV=$$d, CLKFB_DIV=$$d and CLKOP_DIV=$$d) result in a lower limit of FIN ($$1.1f MHz) that is greater than the corresponding upper limit of FIN ($$1.1f MHz). Try changing the CLKI_DIV, CLKFB_DIV and CLKOP_DIV divider settings.\n" />
    <msg uid="1459" type="Error" text="$$s '$$s' has an invalid input frequency FIN value ($$1.1f MHz). Valid FIN values for the current set of divider values are $$1.1f to $$1.1f MHz.\n" />
    <msg uid="1460" type="Error" text="$$s '$$s' has invalid divider settings. The current divider values (CLKI_DIV=$$d, CLKFB_DIV=$$d) result in an output frequency lower limit ($$1.1f MHz) that is greater than the corresponding output frequency upper limit ($$1.1f MHz). Try changing the CLKI_DIV and CLKFB_DIV divider settings.\n" />
    <msg uid="1461" type="Error" text="The output frequency ($$1.1f MHz) for $$s '$$s' is out of bounds. Valid output frequencies for the current set of divider values are $$1.1f to $$1.1f MHz.\n" />
    <msg uid="1462" type="Error" text="The number of GPLLs instantiated ($$d) exceeds the number available. This device has at most $$d GPLLs.\n" />
    <msg uid="1463" type="Error" text="$$s '$$s' has an invalid PLL Delay Factor value. Valid FDEL values are from -8 to 8.\n" />
    <msg uid="1464" type="Error" text="$$s '$$s' has an invalid DUTY CYCLE value. Valid values of DUTY range from 2 to 14.\n" />
    <msg uid="1465" type="Error" text="$$s '$$s' has an invalid CLKOS Phase Adjust. The parameter can have values of (0,22.5,45,67.5,90,...,337.5) degrees.\n" />
    <msg uid="1466" type="Error" text="$$s '$$s' has an invalid DELAY CONTROL value. The parameter value can be 'STATIC', 'DYNAMIC' or NONE.\n" />
    <msg uid="1467" type="Error" text="$$s '$$s' has an invalid PHASE CONTROL value. The parameter value can be 'STATIC' or 'DYNAMIC'.\n" />
    <msg uid="1468" type="Error" text="$$s '$$s' has an invalid CLKOP_BYPASS value. The parameter value can be 'ENABLED' or 'DISABLED'.\n" />
    <msg uid="1469" type="Error" text="$$s '$$s' has an invalid CLKOS_BYPASS value. The parameter value can be 'ENABLED' or 'DISABLED'.\n" />
    <msg uid="1470" type="Error" text="$$s '$$s' has an invalid CLKOK_BYPASS value. The parameter value can be 'ENABLED' or 'DISABLED'.\n" />
    <msg uid="1471" type="Error" text="The CLKFB of $$s component '$$s' has a feedback connection, but the FEEDBK_PATH property has a value of '$$s' that does not match connectivity." />
    <msg uid="1472" type="Error" text="$$s '$$s' has CLKFB connected to CLKOP, which is bypassed. \n" />
    <msg uid="1473" type="Error" text="$$s '$$s' has CLKFB connected to CLKOS, which is bypassed. \n" />
    <msg uid="1474" type="Error" text="$$s '$$s' has CLKFB connected to CLKOK. This is not a valid feedback path. \n" />
    <msg uid="1475" type="Error" text="$$s '$$s' has CLKFB connected to CLKOK2. This is not a valid feedback path. \n" />
    <msg uid="1476" type="Error" text="$$s '$$s' does not have a feedback connection to CLKFB.\n" />
    <msg uid="1477" type="Error" text="$$s '$$s' has an invalid input frequency value of $$1.1f MHz. Valid values are from $$1.1f to $$1.1f MHz." />
    <msg uid="1478" type="Error" text="$$s on $$s '$$s' cannot be connected to '$$s'. Use a slave delay line component, DLLDELB." />
    <msg uid="1479" type="Warning" level="2" text="Register $$s has a clock signal tied to GND." />
    <msg uid="1480" type="Error" text="This device does not support the PCS (SerDes) component. The design instance '$$s' is a PCS component.\n" />
    <msg uid="1481" type="Error" text="No MODULE resource constraints are given for the active MODULE." />
    <msg uid="1482" type="Error" text="OPENDRAIN for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s' must be set to ON when the DRIVE current setting is 4,8,12,16 or 20." />
    <msg uid="1483" type="Error" text="OPENDRAIN for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s' must be set to ON when the DRIVE current setting is 12,16 or 20." />
    <msg uid="1484" type="Error" text="OPENDRAIN for $$s PIO buffer '$$s' (for $$s port) with IO_TYPE '$$s' must be set to ON when the DRIVE current setting is 20." />
  </messages>
</messageFile>
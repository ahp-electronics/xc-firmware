<?xml version="1.0" encoding="UTF-8"?>
<messageFile name="devgen" fid="106" alias="dgen" vendor="Lattice Semiconductor Corporation" stamp="Date and Time">
  <description text="This message file contains messages for basopt and basdh packages."/>
  <!-- owner of this message file -->
  <owner text="owner" />
  <messages>
    
	<!-- basddb 1000 to 1999      2000 to 2999     3000 to 3999  -->
    <!-- define error message 1000 to 1999 -->
    <msg uid="1000" type="Error" text="No cellmodel for celltype &lt;$$s&gt;.\n" />
    <msg uid="1001" type="Error" text="NT_CMIO::buildcm - no celltype assigned to cellmodel &lt;$$s&gt;.\n" />
    <msg uid="1002" type="Error" text="NT_CMIO::buildcm - no celltype ID assigned to celltype &lt;$$s&gt;.\n" />
    <msg uid="1003" type="Error" text="Usage count incorrect for unused logic primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1004" type="Error" text="Unrecognized NT_LP_MUX cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1005" type="Error" text="Unrecognized NT_LP_MEMORY cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1006" type="Error" text="Unrecognized NT_LP_GATE cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1007" type="Error" text="Unrecognized NT_LP_FLIPFLOP cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1008" type="Error" text="Could not find a DD_CELLTYPE for NT_CMPORT &lt;$$s&gt; in cellmodel &lt;$$s&gt;.\n" />
    <msg uid="1009" type="Error" text="Could not find DD_CELLTYPE pin for NT_CMPORT &lt;$$s&gt; in cellmodel &lt;$$s&gt;.\n" />
    <msg uid="1010" type="Error" text="Unrecognized NT_LP_PORT cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1011" type="Error" text="Unrecognized NT_LP_BUFFER cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1012" type="Error" text="Unrecognized NT_LP_PULLUP cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1013" type="Error" text="Unrecognized NT_LP_PAD cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1014" type="Error" text="Unrecognized NT_LP_OSC cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1015" type="Error" text="Unrecognized NT_LP_POWER cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1016" type="Error" text="Unrecognized NT_LP_ATTRBOX cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1017" type="Error" text="Unrecognized NT_LP_BLACKBOX cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1018" type="Error" text="Unrecognized NT_LP_MODEBOX cellmodel prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1019" type="Error" text="Unrecognized logic prim type $$d in primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
	<msg uid="1020" type="Error" text="Poor default configuration string &lt;$$s&gt; for logic primitive &lt;$$s&gt; in cellmodel &lt;$$s&gt;\n" />
    <msg uid="1021" type="Error" text="$$s\n" />
    <msg uid="1022" type="Error" text="Null pin found in primitive &lt;$$s&gt;\n" />
    <msg uid="1023" type="Error" text="No wire found connected to pin &lt;$$s&gt; on primitive &lt;$$s&gt; on layer &lt;$$s&gt;.\n" />
    <msg uid="1024" type="Error" text="Could not find pin $$d in cellprim $$s.\n" />
    <msg uid="1025" type="Error" text="Found an unattached attribute box &lt;$$s&gt; on layer &lt;$$s&gt;.\n" />
    <msg uid="1026" type="Error" text="Could not attach attribute box &lt;$$s&gt; to primitive &lt;$$s&gt;.\n" />
    <msg uid="1027" type="Error" text="Failed to open file $$s\n" />
    <msg uid="1028" type="Error" text="NT_CMIO : Cannot be read yet .\n" />
    <msg uid="1029" type="Error" text="No layer data found for layer &lt;$$s&gt;\n" />
    <msg uid="1030" type="Error" text="Cannot find the proper NT_GRF_PORTAL object for NT_PIN/SWITCH/LABEL\n" />
    <msg uid="1031" type="Error" text="Cannot find the proper NT_TWIRE_GRF_PORTAL object\n" />
    <msg uid="1032" type="Error" text="Cannot find the proper NT_TWIREGRP_GRF_PORTAL object\n" />
    <msg uid="1033" type="Error" text="Cannot find the proper NT_TLOGICPRIM_GRF_PORTAL object\n" />
    <msg uid="1034" type="Error" text="Skipped a NT_GRF_PORTAL object type &lt;$$s&gt;.\n" />
    <msg uid="1035" type="Error" text="NT_CMGRFIO : Cannot be read yet .\n" />
    <msg uid="1036" type="Error" text="Cannot generate nph,pkg,spd with -noclean: data generation is not complete.\n" />
    <msg uid="1037" type="Error" text="Cannot generate cell models with -noclean: cell model generation is not complete.\n" />
    <msg uid="1038" type="Error" text="Unknown NT_CM_TYPE\n" />
    <msg uid="1039" type="Error" text="Unknown NT_LP_TYPE\n" />
	<msg uid="1040" type="Error" text="Pinname and pinplace arrays do not match for logic primitive &lt;$$s&gt;\n" />
    <msg uid="1041" type="Error" text="Could not match pin name &lt;$$s&gt; in logic primitive &lt;$$s&gt;\n" />
    <msg uid="1042" type="Error" text="Could not match button name &lt;$$s&gt; in logic primitive &lt;$$s&gt;\n" />
    <msg uid="1043" type="Error" text="Invalid flipflop type $$d for &quot;$$s&quot;.\n" />
    <msg uid="1044" type="Error" text="Invalid configuration string for FLOP &quot;$$s&quot;.\n" />
    <msg uid="1045" type="Error" text="Unknown port type found for port primitive &lt;s&gt;.\n" />
    <msg uid="1046" type="Error" text="Object of type $$s exists for &quot;$$s&quot; : $$s.\n" />
    <msg uid="1047" type="Error" text="Object of same name/type exists for &quot;$$s&quot; : $$s.\n" />
    <msg uid="1048" type="Error" text="Cleanswitch #$$d on cleanwire $$s for w1 and w2 are invalid or set to $$s.\n" />
    <msg uid="1049" type="Error" text="Unconnected pin $$d, $$d, logic primitive &quot;$$s&quot;, layer &quot;$$s&quot;, cell model &quot;$$s&quot;.\n" />
    <msg uid="1050" type="Error" text="$$d unconnected primitive pins\n" />
    <msg uid="1051" type="Error" text="Graft layer mismatch &quot;$$s&quot; &quot;$$s&quot; for &quot;$$s&quot; &quot;$$s&quot; - graft not complete\n" />
    <msg uid="1052" type="Error" text="Could not find template $$s\n" />
    <msg uid="1053" type="Error" text="In NT_DEVICE::explode no placed assemblies. No APL file.\n" />
    <msg uid="1054" type="Error" text="Found incorrect cleanwire.\n" />
    <msg uid="1055" type="Error" text="Found cleanswbpin with clean wire not implemented\n" />
    <msg uid="1056" type="Error" text="No cell type defined for cell $$s\n" />
    <msg uid="1057" type="Error" text="Incomplete pin parameters defined for cell $$s\n" />
    <msg uid="1058" type="Error" text="Setting pin for cleanwire $$s to cell $$s  ($$d, $$d) pin $$s while it is on cell $$s ($$d, $$d) pin $$s.\n" />
    <msg uid="1059" type="Error" text="Graft failed at ($$d, $$d)\n" />
	<msg uid="1060" type="Error" text="Overlapping horizontal wires &quot;$$s&quot; &quot;$$s&quot; at ($$d, $$d)\n" />
    <msg uid="1061" type="Error" text="Overlapping vertical wires &quot;$$s&quot; &quot;$$s&quot; at ($$d, $$d)\n" />
    <msg uid="1062" type="Error" text="Could not match wire &lt;$$s&gt; after grafting\n" />
    <msg uid="1063" type="Error" text="Could not find wire &lt;$$s&gt; after grafting\n" />
    <msg uid="1064" type="Error" text="Layer names &lt;$$s&gt;,&lt;$$s&gt; does not match for graft wires &lt;$$s&gt;,&lt;$$s&gt; at $$d,$$d\n" />
    <msg uid="1065" type="Error" text="lltypes &lt;$$d&gt;,&lt;$$d&gt; does not match graft wires &lt;$$s&gt;,&lt;$$s&gt; at $$d,$$d\n" />
    <msg uid="1066" type="Error" text="Node flags &lt;$$d&gt;,&lt;$$d&gt; does not match graft wires &lt;$$s&gt;,&lt;$$s&gt; at $$d,$$d\n" />
    <msg uid="1067" type="Error" text="Timing models &lt;$$s&gt;,&lt;$$s&gt; does not match graft wires &lt;$$s&gt;,&lt;$$s&gt; at $$d,$$d\n" />
    <msg uid="1068" type="Error" text="Must have a clean nt_device to generate bit data.\n" />
    <msg uid="1069" type="Error" text="Cannot generate bitgen data if grf has been generated.\n" />
    <msg uid="1070" type="Error" text="glineprim not on grid\n" />
    <msg uid="1071" type="Error" text="Adding fifth connection at vertex\n\n" />
    <msg uid="1072" type="Error" text="Cannot determine if the vertex is at beginning or end of the edge\n" />
    <msg uid="1073" type="Error" text="Adding a second northerly connection at ($$d,$$d)\n" />
    <msg uid="1074" type="Error" text="Adding a second southerly connection at ($$d,$$d)\n" />
    <msg uid="1075" type="Error" text="At start $$d found coinciding points ($$d, $$d) and ($$d, $$d)\n" />
    <msg uid="1076" type="Error" text="Adding a second easterly connection at ($$d,$$d)\n" />
    <msg uid="1077" type="Error" text="Adding a second westerly connection at ($$d,$$d)\n" />
    <msg uid="1078" type="Error" text="Found angular connection\n" />
    <msg uid="1079" type="Error" text="Vertex found in too many chains (usage = 1)\n" />
	<msg uid="1080" type="Error" text="Vertex found in too many chains\n" />
    <msg uid="1081" type="Error" text="Found purely closed graph at wire $$d\n" />
    <msg uid="1082" type="Error" text="Found coincident points in set of entry points\n" />
    <msg uid="1083" type="Error" text="Adding to non-existent tree $$d\n" />
    <msg uid="1084" type="Error" text="Adding non-existent vertex ref to tree $$d\n" />
    <msg uid="1085" type="Error" text="Attached edge has current vertex as neither start or end\n" />
    <msg uid="1086" type="Error" text="Root came back with -1 index\n" />
    <msg uid="1087" type="Error" text="Wire $$d has a gprim that is not a LINE\n" />
    <msg uid="1088" type="Error" text="Wire $$d has LINE gprim from: ($$d,$$d) to ($$d,$$d)\n" />
    <msg uid="1089" type="Error" text="Could not find assembly $$s to remove it\n" />
    <msg uid="1090" type="Error" text="Expected $$d words in tile line\n" />
    <msg uid="1091" type="Error" text="Expected first two words to be strings in tile line\n" />
    <msg uid="1092" type="Error" text="Expected second two words to be longs in tile line\n" />
    <msg uid="1093" type="Error" text="Expected $$d words (ROW# &amp; long) in row line\n" />
    <msg uid="1094" type="Error" text="Expected $$d words (COLUMN# &amp; long) in column line\n" />
    <msg uid="1095" type="Error" text="Expected $$d words in template $$s found $$d\n" />
    <msg uid="1096" type="Error" text="Template line $$s is missing name\n" />
    <msg uid="1097" type="Error" text="Cannot make extrema for template\n" />
    <msg uid="1098" type="Error" text="Alias line $$s in APL is incorrect\n" />
    <msg uid="1099" type="Error" text="Error in parsing line $$d of row field &quot;$$s&quot;\n" />
	<msg uid="1100" type="Error" text="Error in parsing line $$d of column field &quot;$$s&quot;\n" />
    <msg uid="1101" type="Error" text="Could not find template &quot;$$s&quot; among these templates:\n" />
    <msg uid="1102" type="Error" text="Attempting to read SPL but you have not set the input flag.\n" />
    <msg uid="1103" type="Error" text="Could not find SPL file &lt;$$s&gt;\n" />
    <msg uid="1104" type="Error" text="Could not open SPL file &lt;$$s&gt;\n" />
    <msg uid="1105" type="Error" text="Could not find bdelay speed &lt;$$s&gt; for sitetype speed &lt;$$s&gt;\n" />
    <msg uid="1106" type="Error" text="Sitetype speed &lt;$$s&gt; references non-bdelay speed &lt;$$s&gt;\n" />
    <msg uid="1107" type="Error" text="Attempted to add uses template &lt;$$s&gt;\n" />
    <msg uid="1108" type="Error" text="NT_SPD_RECORDDATA:accessing int for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1109" type="Error" text="NT_SPD_RECORDDATA:accessing float for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1110" type="Error" text="NT_SPD_RECORDDATA:accessing char for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1111" type="Error" text="NT_SPD_RECORDDATA:setting int for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1112" type="Error" text="NT_SPD_RECORDDATA:setting float for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1113" type="Error" text="NT_SPD_RECORDDATA:setting char for fieldtype $$d (&quot;$$s&quot;).\n" />
    <msg uid="1114" type="Error" text="NT_SPD_RECORDDATA::found grade-specific data in gendata array\n" />
    <msg uid="1115" type="Error" text="bdelay speed &lt;$$s&gt; delayname string is missing or of incorrect type.\n" />
    <msg uid="1116" type="Error" text="bdelay speed &lt;$$s&gt; config string is missing or of incorrect type.\n" />
    <msg uid="1117" type="Error" text="bdelay speed &lt;$$s&gt; min_rise is missing or of incorrect type.\n" />
    <msg uid="1118" type="Error" text="bdelay speed &lt;$$s&gt; nom_rise is missing or of incorrect type.\n" />
    <msg uid="1119" type="Error" text="bdelay speed &lt;$$s&gt; max_rise is missing or of incorrect type.\n" />
	<msg uid="1120" type="Error" text="bdelay speed &lt;$$s&gt; min_fall is missing or of incorrect type.\n" />
    <msg uid="1121" type="Error" text="bdelay speed &lt;$$s&gt; nom_fall is missing or of incorrect type.\n" />
    <msg uid="1122" type="Error" text="bdelay speed &lt;$$s&gt; max_fall is missing or of incorrect type.\n" />
    <msg uid="1123" type="Error" text="Exceeded storage for number of delays (max = 254)\n" />

 
    <msg uid="1124" type="Error" text="Speed references improper speed type\n" />
    <msg uid="1125" type="Error" text="Undefined speed &lt;$$s&gt; found in speed field &lt;$$s&gt;.\n" />
    <msg uid="1126" type="Error" text="Speed &lt;$$s&gt; references incorrect speed type\n" />
    <msg uid="1127" type="Error" text="bdelay &lt;$$s&gt; references unknown sitetype speed &lt;$$s&gt;.\n" />
    <msg uid="1128" type="Error" text="bdelay &lt;$$s&gt; references speed &lt;$$s&gt; of incorrect type &quot;$$s&quot;.\n" />
    <msg uid="1129" type="Error" text="bdelay &lt;$$s&gt; does not reference a sitetype speed\n" />
    <msg uid="1130" type="Error" text="bdelay &lt;$$s&gt; unable to resolve celltype data\n" />
    <msg uid="1131" type="Error" text="bdelay &lt;$$s&gt; inpin speed is undefined or of incorrect type.\n" />
    <msg uid="1132" type="Error" text="bdelay &lt;$$s&gt; outpin speed is undefined or of incorrect type.\n" />
    <msg uid="1133" type="Error" text="cellmodel for cell &lt;$$s&gt; not found.\n" />
    <msg uid="1134" type="Error" text="cellmodel manager for cell &lt;$$s&gt; not found.\n" />
    <msg uid="1135" type="Error" text="Primitive &lt;$$s&gt; in cell &lt;$$s&gt; not found.\n" />
    <msg uid="1136" type="Error" text="In pin &lt;$$s&gt; for prim &lt;$$s&gt; in cell &lt;$$s&gt; not found.\n" />
    <msg uid="1137" type="Error" text="NT_SPD_BDELAY_RECORD &lt;$$s&gt; inpin &lt;$$s&gt; does not match any pins in primitive &lt;$$s&gt;.\n" />
    <msg uid="1138" type="Error" text="Out pin &lt;$$s&gt; for prim &lt;$$s&gt; in cell &lt;$$s&gt; not found.\n" />

    <msg uid="1139" type="Error" text="NT_SPD_BDELAY_RECORD &lt;$$s&gt; outpin &lt;$$s&gt; does not match any pins in primitive &lt;$$s&gt;.\n" />
	<msg uid="1140" type="Error" text="In pin &lt;$$s&gt; for prim &lt;$$s&gt; in cell &lt;$$s&gt; not found on path.\n" />
    <msg uid="1141" type="Error" text="Out pin &lt;$$s&gt; for prim &lt;$$s&gt; in cell &lt;$$s&gt; not found on path.\n" />
    <msg uid="1142" type="Error" text="bdelay &lt;$$s&gt; delaytype is undefined or of incorrect type.\n" />
    <msg uid="1143" type="Error" text="Unrecognized delaytype name &lt;$$s&gt; for speed &lt;$$s&gt;\n" />
    <msg uid="1144" type="Error" text="bdelay &lt;$$s&gt; logicaltype is undefined or of incorrect type.\n" />
    <msg uid="1145" type="Error" text="Unrecognized logicaltype name &lt;$$s&gt; for speed &lt;$$s&gt;\n" />
    <msg uid="1146" type="Error" text="Attempted to add duplicate speed &lt;$$s&gt;\n" />
    <msg uid="1147" type="Error" text="Attempted to add second speedtable\n" />
    <msg uid="1148" type="Error" text="Attempted to add speed grade &lt;$$s&gt; twice\n" />
    <msg uid="1149" type="Error" text="No speedtable defined - cannot find speed &lt;$$s&gt;\n" />
    <msg uid="1150" type="Error" text="Found speed template not in speedtable\n" />
    <msg uid="1151" type="Error" text="Found speed record not in speedtable\n" />
    <msg uid="1152" type="Error" text="Found speed record not in speedtable where it should be\n" />
    <msg uid="1153" type="Error" text="No delay value defined for speed &lt;$$s&gt; grade &lt;$$s&gt;\n" />
    <msg uid="1154" type="Error" text="Unknown field type $$d in field $$d\n" />
    <msg uid="1155" type="Error" text="No speed table defined - no speed data generated.\n" />
    <msg uid="1156" type="Error" text="The point ($$d,$$d) is outside of device bounds [$$d,$$d], [$$d,$$d]\n" />
    <msg uid="1157" type="Error" text="Cannot read site name file.\n" />
    <msg uid="1158" type="Error" text="Cannot read site name rule file.\n" />
    <msg uid="1159" type="Error" text="Could not open ASCII output file name &quot;$$s&quot;. \n" />


	<msg uid="1160" type="Error" text="Cleanswitch with neg wire index\n" />
    <msg uid="1161" type="Error" text="Found only exclusive switches connecting 2 one-arc-only nodes &lt;$$s&gt; and &lt;$$s&gt;.  Making the switches non-exlusive.\n" />
    <msg uid="1162" type="Error" text="Cannot find old type TYPETYPE in xlate table\n" />
    <msg uid="1163" type="Error" text="Site straddles a supersite boundary\n" />
    <msg uid="1164" type="Error" text="DD_CELLTYPE $$s in NT_CELL $$s but not in nt_device\n" />
    <msg uid="1165" type="Error" text="Cannot find node for site $$d pin $$d.\n" />
    <msg uid="1166" type="Error" text="Logical to physical pin map is incomplete because:\n" />
    <msg uid="1167" type="Error" text="FATAL: at ss $$d ccell $$d at ($$d, $$d) hit s$$d.$$d stored s$$d.$$d\n" />
    <msg uid="1168" type="Error" text="FATAL: at ss $$d ccell $$d stored s$$d.$$d\n" />
    <msg uid="1169" type="Error" text="FATAL: hit $$d fatal errors processing sites\n" />
    <msg uid="1170" type="Error" text="Cannot open all files &quot;$$s&quot;, &quot;$$s&quot;, &quot;$$s&quot;\n" />
    <msg uid="1171" type="Error" text="At switch $$d:\n" />
    <msg uid="1172" type="Error" text="Arc $$d: is not marked, parentmap = 0x$$X.\n" />
    <msg uid="1173" type="Error" text="Found long $$d which is greater than $$d\n" />
    <msg uid="1174" type="Error" text="Could not store $$d in array:\n" />
    <msg uid="1175" type="Error" text="No room to store $$d in array:\n" />
    <msg uid="1176" type="Error" text="Attempting to read PKL but you have not set the input flag.\n" />
    <msg uid="1177" type="Error" text="PKL file $$s does not exist.\n" />
    <msg uid="1178" type="Error" text="Attempting to read PKL file version $$d.$$d - should be $$d.$$d\n" />
    <msg uid="1179" type="Error" text="Incorrect architecture name &lt;$$s&gt; found in PKL file - should be &lt;$$s&gt;\n" />
	<msg uid="1180" type="Error" text="incorrect architecture line format\n" />
    <msg uid="1181" type="Error" text="Incorrect device name &lt;$$s&gt; found in PKL file - should be &lt;$$s&gt;\n" />
    <msg uid="1182" type="Error" text="Incorrect PKL file format - must have revision statement and architecture statement at the top of the file\n" />
    <msg uid="1183" type="Error" text="Attempting to add pad &lt;$$s,$$s&gt; to NULL package\n" />
    <msg uid="1184" type="Error" text="Attempting to write PKL but you have not set the output flag.\n" />
    <msg uid="1185" type="Error" text="No package information - no pkl written.\n" />
    <msg uid="1186" type="Error" text="Attempting to access row $$d of $$d rows\n\n" />
    <msg uid="1187" type="Error" text="Attempting to access column $$d of $$d columns\n" />
    <msg uid="1188" type="Error" text="Storing &quot;$$s&quot; in &quot;$$s&quot; cell[$$d,$$d].\n" />
    <msg uid="1189" type="Error" text="Storing $$d in &quot;$$s&quot; cell[$$d,$$d].\n\n" />
    <msg uid="1190" type="Error" text="Storing $$f in &quot;$$s&quot; cell[$$d,$$d].\n" />
    <msg uid="1191" type="Error" text="In cell [$$d,$$d] cast double $$f too long $$d\n" />
    <msg uid="1192" type="Error" text="String &quot;$$s&quot; too short to parse\n" />
    <msg uid="1193" type="Error" text="String &quot;$$s&quot; has $$d colons, not $$d\n" />
    <msg uid="1194" type="Error" text="String &quot;$$s&quot; does not start with &quot;# &quot;\n" />
    <msg uid="1195" type="Error" text="The first word of &quot;$$s&quot; is not an integer\n\n" />
    <msg uid="1196" type="Error" text="Word $$d of &quot;$$s&quot; is not a string\n" />
    <msg uid="1197" type="Error" text="$$s: $$s is not a valid status\n" />
    <msg uid="1198" type="Error" text="There is a field in &quot;$$s&quot; is an integer\n" />
    <msg uid="1199" type="Error" text="PKGCTRL package name checking failed. No package is available\n" />

	<msg uid="1200" type="Error" text="First arch&amp;dev word &quot;$$s&quot; is not architecture\n" />
    <msg uid="1201" type="Error" text="Third arch&amp;dev word &quot;$$s&quot; is not device\n" />
    <msg uid="1202" type="Error" text="arch&amp;dev word $$d is (integer) $$d\n" />
    <msg uid="1203" type="Error" text="Pair $$d has int $$d which is not in [0,$$d)\n" />
    <msg uid="1204" type="Error" text="Expected $$d words in header row: &quot;$$s&quot;, found $$d\n\n" />
    <msg uid="1205" type="Error" text="Package &quot;$$s&quot; does not match header &quot;$$s&quot; of column $$d\n" />
    <msg uid="1206" type="Error" text="Parse string pair $$d failed\n" />
    <msg uid="1207" type="Error" text="Parse pkgctrl pair $$d failed\n" />
    <msg uid="1208" type="Error" text="pkgctrl pair $$d has invalid package name\n" />
    <msg uid="1209" type="Error" text="pkgctrl pair $$d has invalid control key\n" />
    <msg uid="1210" type="Error" text="Expected at least 2 Revision fields. Found $$d\n" />
    <msg uid="1211" type="Error" text="Revision fields not delimited properly\n" />

    <msg uid="1212" type="Error" text="Erroneous field: $$s\n" />
    <msg uid="1213" type="Error" text="Field &lt;# $STATUS&gt; was missing or no comment lines after it\n" />
    <msg uid="1214" type="Error" text="Revision field had $$d entries (which is &lt; 2)\n" />
    <msg uid="1215" type="Error" text="Field &lt;# $STATUSEND&gt; was missing or no &lt;#&gt; in line before it\n" />
    <msg uid="1216" type="Error" text="Field *lt;# $PKGCTRLEND&gt; was missing\n" />
    <msg uid="1217" type="Error" text="extract_arch_and_dev failed\n" />
    <msg uid="1218" type="Error" text="Table has no columns\n" />
    <msg uid="1219" type="Error" text="check_packages failed\n" />

	<msg uid="1220" type="Error" text="Row $$d of table has $$d columns, not $$d (number of column headers)\n" />
    <msg uid="1221" type="Error" text="parse_pkt_for_header_entries returned FALSE in 1st call\n" />
    <msg uid="1222" type="Error" text="after parse_pkt_for_header_entries, zero comments\n" />
    <msg uid="1223" type="Error" text="after parse_pkt_for_header_entries, zero packages\n" />
    <msg uid="1224" type="Error" text="after parse_pkt_for_header_entries, $$d revision/version numbers\n" />
    <msg uid="1225" type="Error" text="The header to column $$d is the integer $$d\n" />
    <msg uid="1226" type="Error" text="Row $$d parsing &quot;$$s&quot;\n" />
    <msg uid="1227" type="Error" text="Column $$d string &quot;$$s&quot; cannot be added correctly\n" />
    <msg uid="1228" type="Error" text="Headers over run: &quot;$$s&quot;\n" />
    <msg uid="1229" type="Error" text="Row $$d over run: &quot;$$s&quot;\n" />
    <msg uid="1230" type="Error" text="fill_in_header_from_file failed\n" />
    <msg uid="1231" type="Error" text="Could not fill in table entries for file &lt;$$s&gt;\n" />
    <msg uid="1232" type="Error" text="arch&amp;dev word $$d is &quot;$$s&quot;\n" />
    <msg uid="1233" type="Error" text="Unable to open pkl file $$s.\n" />
    <msg uid="1234" type="Error" text="Unable to open cell model file &lt;$$s&gt; for devresinfo.acd generation.\n" />
    <msg uid="1235" type="Error" text="Did not find the following pads for package $$s ($$d/$$d) - check to see if they were named correctly.\n" />
    <msg uid="1236" type="Error" text="Found non-IOB &lt;$$s&gt; in the package file - will not be added to the package.\n" />
    <msg uid="1237" type="Error" text="Class has $$d instances and made [$$d,$$d] array\n" />
    <msg uid="1238" type="Error" text="Could not find $$d in x lookup in resolution table\n" />
    <msg uid="1239" type="Error" text="Could not find $$d in y lookup in resolution table\n" />


	<msg uid="1240" type="Error" text="UT_POINT ($$d,$$d) was changed to ($$d,$$d)\n" />
    <msg uid="1241" type="Error" text="Stored tree len $$d != $$d true tree len\n" />
    <msg uid="1242" type="Error" text="Stored factor $$d != $$d true factor\n" />
    <msg uid="1243" type="Error" text="Stored start ($$d,$$d) != ($$d,$$d) true start\n" />
    <msg uid="1244" type="Error" text="Tree $$d point $$d ($$d,$$d) != ($$d,$$d)\n" />
    <msg uid="1245" type="Error" text="Stored $$d trees. Node stored $$d\n" />
    <msg uid="1246" type="Error" text="Stored $$d points in tree $$d. Node stored $$d\n" />
    <msg uid="1247" type="Error" text="Point $$d in tree $$d is ($$d,$$d). Node point is ($$d,$$d)\n" />
    <msg uid="1248" type="Error" text="Miscalculated left bound $$d != $$d\n" />
    <msg uid="1249" type="Error" text="Miscalculated right bound $$d != $$d\n" />
    <msg uid="1250" type="Error" text="Miscalculated bottom bound $$d != $$d\n" />
    <msg uid="1251" type="Error" text="Miscalculated top bound $$d != $$d\n" />
    <msg uid="1252" type="Error" text="Error in bounds estimates\n" />
    <msg uid="1253" type="Error" text="At r$$d c$$d insert $$d has insert ($$d,$$d)!=($$d,$$d)\n" />
    <msg uid="1254" type="Error" text="Graphics error\n" />
    <msg uid="1255" type="Error" text="At G class $$d I class $$d instance $$d (array index $$d of $$d)\n" />
    <msg uid="1256" type="Error" text="  Until now nph-cwg = ($$d,$$d)\n" />
    <msg uid="1257" type="Error" text="  But now nph-cwg = ($$d,$$d)\n" />
    <msg uid="1258" type="Error" text="           cwg = ($$d,$$d)\n" />
    <msg uid="1259" type="Error" text="           nph = ($$d,$$d)\n" />
	<msg uid="1260" type="Error" text="At G class $$d I class $$d instance $$d (array index $$d of $$d)\n" />
    <msg uid="1261" type="Error" text="Insert errors at distribution $$d\n" />
    <msg uid="1262" type="Error" text="Class $$d found errors in its $$d distributions\n" />
    <msg uid="1263" type="Error" text="Cleanwire $$d and its wire dissagree on pinwire status\n" />
    <msg uid="1264" type="Error" text="List of cleanwires on node $$d found to be invalid\n" />
    <msg uid="1265" type="Error" text="Cleanwire $$d has wire $$d (of $$d wires on device)\n" />
    <msg uid="1266" type="Error" text="Found $$d errors in pin to sites\n" />
    <msg uid="1267" type="Error" text="Problems found by new_switch_connectivity_diagnostics\n" />
    <msg uid="1268" type="Error" text="At w$$d&lt;-&gt;w$$d dual problem in partition_set()\n" />
    <msg uid="1269" type="Error" text="Trying to reset the partition in:\n" />
    <msg uid="1270" type="Error" text="At w$$d-&gt;w$$d should not be in partition_set()\n" />
    <msg uid="1271" type="Error" text="Hit error\n" />
    <msg uid="1272" type="Error" text="   But this connection is not bidir.\n" />
    <msg uid="1273" type="Error" text="   But this connection is downstream.\n" />
    <msg uid="1274" type="Error" text="   But this connection is upstream.\n" />
    <msg uid="1275" type="Error" text="Assign pseudo at dist $$d, pin $$d, arc $$d\n" />
    <msg uid="1276" type="Error" text="Found cellshape with no rectangular or triangular or polyline gprim\n" />
    <msg uid="1277" type="Error" text="pl ($$d,$$d) != get_pl ($$d,$$d)\n" />
    <msg uid="1278" type="Error" text="For pinwire on [($$d,$$d),($$d,$$d)] we hit $$d sites ($$d valid):\n" />
    <msg uid="1279" type="Error" text=" Reassign s$$d.x (p$$d) from $$d to $$d\n" />

	<msg uid="1280" type="Error" text="s$$d.x (pin $$d) has no connection\n" />
    <msg uid="1281" type="Error" text="pinwire n$$d.0 does not map to a pin\n" />
    <msg uid="1282" type="Error" text="Found swbox with no rectangular gprim\n" />
    <msg uid="1283" type="Error" text="At inst $$d swb manager offset = ($$d,$$d)!=($$d,$$d)\n" />
    <msg uid="1284" type="Error" text=" These problems are for swbox distribution $$d\n" />
    <msg uid="1285" type="Error" text="n$$d.$$d pin $$d resolves back to n$$d.$$d\n" />
    <msg uid="1286" type="Error" text="swb$$d.$$d p$$d -&gt; w$$d.$$d -&gt; $$d different pins\n" />
    <msg uid="1287" type="Error" text="No swbox hits for pin $$d at ($$d,$$d) \n" />
    <msg uid="1288" type="Error" text="At pin $$d at ($$d,$$d) got w$$d.$$d and w$$d.$$d\n" />
    <msg uid="1289" type="Error" text="w$$d.$$d already has base name index $$d skipping $$d\n" />
    <msg uid="1290" type="Error" text="Could not open $$s\n" />
    <msg uid="1291" type="Error" text="w$$d.0 has $$d terms inst $$d has $$d\n" />
    <msg uid="1292" type="Error" text="distribution $$d has differing equations\n" />
    <msg uid="1293" type="Error" text="At w$$d.0 name $$d is $$s\n" />
    <msg uid="1294" type="Error" text="At w$$d.0 name $$d is $$s w$$d.$$d is $$s\n" />
    <msg uid="1295" type="Error" text="Found wire equation irregularity at w$$d.$$d\n" />
    <msg uid="1296" type="Error" text="Illegal DD_BASECLASS name &lt;$$s&gt;.  Making the name empty.\n" />
    <msg uid="1297" type="Error" text="Celltype &lt;$$s&gt; references speed &lt;$$s&gt; of incorrect type.\n" />
    <msg uid="1298" type="Error" text="Site speed table &lt;$$s&gt; is not defined for sitetype &lt;$$s&gt;\n" />
    <msg uid="1299" type="Error" text="Site speed table &lt;$$s&gt; is not defined for sitetype  &lt;$$s&gt; in site &lt;$$s&gt;.\n" />
	<msg uid="1300" type="Error" text="Data loss in c_write_2bit for $$d (&gt;3)\n\n" />
    <msg uid="1301" type="Error" text="Unable to open binary $$s file $$s. \n" />
    <msg uid="1302" type="Error" text="DD_GPRIM $$X is of base type\n" />
    <msg uid="1303" type="Error" text="DD_GPRIM $$X with no type\n" />
    <msg uid="1304" type="Error" text="DD_TEMPLATE($$X)-&gt;getprim($$d) is NT_GCALLPRIM with template $$X\n" />
    <msg uid="1305" type="Error" text=" ctypespmap $$X has $$d logical names and $$d physical names\n" />
    <msg uid="1306" type="Error" text="NT_GPRIM $$X is of base type\n" />
    <msg uid="1307" type="Error" text="NTM_IO has non NULL pkgmgr, whereas pkgmgr is NULL\n" />
    <msg uid="1308" type="Error" text="NTM_IO has stored $$d speed grades, whereas speedmanager has $$d\n" />
    <msg uid="1309" type="Error" text="NTM_IO has non NULL speedtable, whereas speedtable is NULL\n" />
    <msg uid="1310" type="Error" text="NTM_IO has stored $$d speed templates, whereas speedtable has $$d\n" />
    <msg uid="1311" type="Error" text="Cannot access PROGLOGICPRIM::PROGLOGICPRIM\n" />
    <msg uid="1312" type="Error" text="Unknown NT_LOGICPRIM type &quot;$$s&quot;\n\n" />
    <msg uid="1313" type="Error" text="Unknown NT_LOGICPRIM type &quot;$$d&quot;\n\n" />
    <msg uid="1314" type="Error" text="This speed table cannot be written with the current algorithm\n" />
    <msg uid="1315" type="Error" text="This model cannot be written with the current algorithm\n" />
    <msg uid="1316" type="Error" text="Line $$d: $$s, &quot;$$s&quot;, in this line, &quot;$$s&quot; \n" />
    <msg uid="1317" type="Error" text="No gugly data for receive instance.\n" />
    <msg uid="1318" type="Error" text="Could not find segment for layer $$s\n" />
    <msg uid="1319" type="Error" text="GR_WIREDATA::init failed - no GR_CALL *\n" />


	<msg uid="1320" type="Error" text="GR_WIREDATA::init failed - cannot verify insertion point, GR_CALL $$s\n" />
    <msg uid="1321" type="Error" text="Did not find wire ID.  GR_INSTANCE: $$s GR_CALL offset ($$ld,$$ld), GR_LINE index $$ld, address $$p, line coordinates ($$ld,$$ld), ($$ld,$$ld), line absolute coordinates ($$ld,$$ld),($$ld,$$ld), number of GR_LINEs in this instance: $$d\n" />
    <msg uid="1322" type="Error" text="GR_WIREDATA::translate - insertion point mismatch in GR_CALL $$s, offset ($$ld,$$ld), delta ($$ld,$$ld).  Should be ($$ld,$$ld), calculated ($$ld,$$ld), wireid $$ld, GR_LINE index $$ld, GR_LINE coordinates ($$ld,$$ld),($$ld,$$ld), $$ld of lines in this GR_INSTANCE\n" />
    <msg uid="1323" type="Error" text="GR_WIREDATA::translate - did not reset GR_CALL $$s from offset ($$ld,$$ld) to new offset ($$ld,$$ld)\n\n" />
    <msg uid="1324" type="Error" text="GR_WIREDATA::traverse - did not find wire id. GR_INSTANCE: $$s GR_CALL offset ($$ld,$$ld), GR_LINE index $$ld, address $$p, line coordinates ($$ld,$$ld), ($$ld,$$ld), line absolute coordinates ($$ld,$$ld),($$ld,$$ld), number of GR_LINEs in this instance: $$d\n" />
    <msg uid="1325" type="Error" text="GR_WIREDATA::traverse - insertion point mismatch in GR_CALL $$s, offset ($$ld,$$ld), delta ($$ld,$$ld).  Should be ($$ld,$$ld), calculated ($$ld,$$ld), wireid $$ld, GR_LINE index $$ld, GR_LINE coordinates ($$ld,$$ld),($$ld,$$ld), $$ld of lines in this GR_INSTANCE\n" />
    <msg uid="1326" type="Error" text="GR_WIREDATA::traverse - did not reset insertion point\n" />
    <msg uid="1327" type="Error" text="on localwire layer translation\n" />
    <msg uid="1328" type="Error" text="on longwire layer translation\n" />
    <msg uid="1329" type="Error" text="Error - no instance found for segment $$s\n" />
    <msg uid="1330" type="Error" text="Translation aborted\n" />
    <msg uid="1331" type="Error" text="Found a non GR_CALL primitive representing a wire. Primitive type: $$d\n" />
    <msg uid="1332" type="Error" text="Failed in $$s\n" />
    <msg uid="1333" type="Error" text="Translation aborted, grf file is corrupted\n" />
    <msg uid="1334" type="Error" text="Cannot find instance for call $$s at $$d,$$d\n" />
    <msg uid="1335" type="Error" text="Wire primitive other than line found in wire $$s\n" />
    <msg uid="1336" type="Error" text="Unable to find a pinwire for pin $$d,$$d\n" />
    <msg uid="1337" type="Error" text="Non-call on the site layer.\n" />
    <msg uid="1338" type="Error" text="Unable to find a clean cell for site at $$d,$$d\n" />
    <msg uid="1339" type="Error" text="Unable to find pinwire placement for $$s\n" />
	<msg uid="1340" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_LONG.\n" />
    <msg uid="1341" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_PINWIRE.\n" />
    <msg uid="1342" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_SWITCH.\n" />
    <msg uid="1343" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_REPOWER.\n" />
    <msg uid="1344" type="Error" text="Unrecognized layer type for layer &lt;$$s&gt;\n" />
    <msg uid="1345" type="Error" text="::DD_LOGICPRIM_DXF_PORTAL: unrecognized cmtype\n" />
    <msg uid="1346" type="Error" text="line $$d: cannot add pins to modebox or attrbox &lt;$$s&gt;\n" />
    <msg uid="1347" type="Error" text="line $$d: cannot add buttons to non-programmable logic prim &lt;$$s&gt;\n" />
    <msg uid="1348" type="Error" text="line $$d: Cannot add buttons to logic prim &lt;$$s&gt;\n" />
    <msg uid="1349" type="Error" text="line $$d: unnamed pin found - ensure that logicprim pins are properly mapped\n" />
    <msg uid="1350" type="Error" text="line $$d: attempted to set configuration string on non-programmable logic prim &lt;$$s&gt;\n" />
    <msg uid="1351" type="Error" text="line $$d: cannot attach primitive to non-NT_LPATTRBOX &lt;$$s&gt;\n" />
    <msg uid="1352" type="Error" text="line $$d: unable to find CM template definition for placed instance &lt;$$s&gt;\n" />
    <msg uid="1353" type="Error" text="line $$d: instance &lt;$$s&gt; is an unsupported primitive type found on layer &lt;$$s&gt;\n" />
    <msg uid="1354" type="Error" text="line $$d: unable to find layer named &lt;$$s&gt; for mode &lt;$$s&gt;\n" />
    <msg uid="1355" type="Error" text="No hardware input version in $$s. Default hardware input version: &quot;$$s&quot;\n" />
    <msg uid="1356" type="Error" text="Cannot open $$s. Default hardware input version: &quot;$$s&quot;\n" />
    <msg uid="1357" type="Error" text="In sortcells, celltype $$d and $$d are the same pointer\n\n" />
    <msg uid="1358" type="Error" text="Unable to continue with hidden switch generation ... \n" />
    <msg uid="1359" type="Error" text="Unable to attain PM_DATABASE\n" />
	<msg uid="1360" type="Error" text="Unable to find PM $$s\n" />
    <msg uid="1361" type="Error" text="Unable to find ext device name for $$s\n" />
    <msg uid="1362" type="Error" text="emptyMessage\n" />
	<msg uid="1363" type="Error" text="The site naming function was not specified - using a very simple function.\n" />
    <msg uid="1364" type="Error" text="Pin speed &lt;$$s&gt; is not defined for pin &lt;$$s&gt;\n" />
    <msg uid="1365" type="Error" text="Switch speed &lt;$$s&gt; is not defined for switch &lt;$$s&gt;\n" />
    <msg uid="1366" type="Error" text="Switch speed &lt;$$s&gt; is not defined for swboxswitch \n" />
    <msg uid="1367" type="Error" text="Cell switch speed &lt;$$s&gt; is not defined for cellswitch &lt;$$s&gt;\n" />
    <msg uid="1368" type="Error" text="Wire speed &lt;$$s&gt; is not defined for wire &lt;$$s&gt;\n" />
    <msg uid="1369" type="Error" text="Misalignment of speed records and NPH speed names.\n" />
    <msg uid="1370" type="Error" text="Device Extrema:  $$6d $$6d $$6d $$6d\n" />
    <msg uid="1371" type="Error" text="Scan failed.\n" />
    <msg uid="1372" type="Error" text="make_pattern_mamnager failed.\n" />
    <msg uid="1373" type="Error" text="adduniquewire - multiset found wire but it does not match \n" />
    <msg uid="1374" type="Error" text="Wire $$s not added by adduniquewire. \n" />
    <msg uid="1375" type="Error" text="No layers defined for model &lt;$$s&gt;\n" />
    <msg uid="1376" type="Error" text="Improper layer data found for layer &lt;$$s&gt; - ensure the add layers are properly added in AutoNTM.\n" />
    <msg uid="1377" type="Error" text="NT_MODEL::hsw_gen_nt_switches:  unable to find null_speed in speed table.\n" />
    <msg uid="1378" type="Error" text="Error creating hidden NT_SWITCH $$s\n" />
    <msg uid="1379" type="Error" text="Switch template $$s not found, skipping this wire &quot;$$d $$d $$d $$d $$s&quot;\n" />
    <msg uid="1380" type="Error" text="($$d,$$d) has no cleanwire associated with it. \n" />
    <msg uid="1381" type="Error" text="\tskipping this wire &quot;$$d $$d $$d $$d $$s&quot;\n" />
    <msg uid="1382" type="Error" text="($$d,$$d) lies on both horizontal and vertical lines\n" />
	<msg uid="1383" type="Error" text="Primitive other than polyline found in pinwire &lt;$$s&gt;.\n" />
    <msg uid="1384" type="Error" text="   No switch intersections found for pinwire &quot;$$s&quot; - trimmed away\n" />
    <msg uid="1385" type="Error" text="Flatten: could not find instance &lt;$$s&gt;.\n" />
    <msg uid="1386" type="Error" text="fixpinname called with NULL pin name\n" />
    <msg uid="1387" type="Error" text="Line $$d: could not find template definition for placed instance &lt;$$s&gt;\n" />
    <msg uid="1388" type="Error" text="Line $$d: NT_PLACE_DXF_PORTAL::unrecognized placed object type &lt;$$s&gt;\n" />
    <msg uid="1389" type="Error" text="Attempting to define cell &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1390" type="Error" text="Additional layer violations not reported - use environment variable &lt;REPORT_LAYER_VIOS&gt; to see all layer violations\n" />
    <msg uid="1391" type="Error" text="Line $$d: unnamed pin found - ensure that sitetype pins are properly mapped\n" />
    <msg uid="1392" type="Error" text="Line $$d: no pin parameters defined for celltype &lt;$$s&gt;\n" />
    <msg uid="1393" type="Error" text="Attempting to define switch &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1394" type="Error" text="Additional layer violations not reported - use environment variable &lt;REPORT_LAYER_VIOS&gt; to see all layer violations\n" />
    <msg uid="1395" type="Error" text="Attempting to define wire &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1396" type="Error" text="Attempting to define switchbox &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1397" type="Error" text="Attempting to define wiregroup &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1398" type="Error" text="Attempting to define switchgroup &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="1399" type="Error" text="Line $$d: could not find any layer named &lt;$$s&gt;\n" />
    <msg uid="1400" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_SITE.\n" />
    <msg uid="1401" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_SWBOX.\n" />
    <msg uid="1402" type="Error" text="Layers &lt;$$s&gt; and &lt;$$s&gt; have the same layer type LYR_LOCAL.\n" />
	

    <!-- define warning message 2000 to 2999 -->
    <msg uid="2000" type="Warning" text="NT_CMIO::build - no cellmodels defined, no cm generation done.\n" />
    <msg uid="2001" type="Warning" text="buildconnectionlist: ignoring empty cm_prim for clean primitive &lt;$$s&gt;.\n" />
    <msg uid="2002" type="Warning" text="Found a mode-to-nonmode connection from pin &lt;$$s&gt; on primitive &lt;$$s&gt; on layer &lt;$$s&gt; - no connection made.\n" />
    <msg uid="2003" type="Warning" text="Attachattrs: ignoring empty cm_prim for clean primitive &lt;$$s&gt;.\n" />
    <msg uid="2004" type="Warning" text="Wire group $$s has no wires.\n" />
    <msg uid="2005" type="Warning" text="Unable to find the proper cm primitive while tagging logic primitive &lt;$$s&gt;\n" />
    <msg uid="2006" type="Warning" text="Unable to find a celltype for cellmodel &lt;$$s&gt;.\n" />
    <msg uid="2007" type="Warning" text="Layer &lt;$$s&gt; in cellmodel &lt;$$s&gt; is not in any mode.\n" />
    <msg uid="2008" type="Warning" text="NT_CMGRFIO::build - no cellmodels defined, no graphics generation done.\n" />
    <msg uid="2009" type="Warning" text="Cannot configure $$sSELMUX &quot;$$s&quot;.\n" />
    <msg uid="2010" type="Warning" text="Non-Input pin &quot;$$s&quot; as config for MUX &quot;$$s&quot;.\n" />
    <msg uid="2011" type="Warning" text="Non-Output pin &quot;$$s&quot; as config for DEMUX &quot;$$s&quot;.\n" />
    <msg uid="2012" type="Warning" text="Invalid pintype &lt;$$d&gt; added to MUX &quot;$$s&quot;.\n" />
    <msg uid="2013" type="Warning" text="Inputs expected = $$d, added = $$d in MUX &quot;$$s&quot;.\n" />
    <msg uid="2014" type="Warning" text="Outputs expected = $$d, added = $$d in MUX &quot;$$s&quot;.\n" />
    <msg uid="2015" type="Warning" text="Invalid pintype &lt;$$d&gt; added to GATE &quot;$$s&quot;.\n" />
    <msg uid="2016" type="Warning" text="Inputs expected = $$d, added = $$d in GATE &quot;$$s&quot;.\n" />
    <msg uid="2017" type="Warning" text="Outputs expected = 1, added = $$d in GATE &quot;$$s&quot;.\n" />
    <msg uid="2018" type="Warning" text="Invalid pintype &lt;$$d&gt; added to FLOP &quot;$$s&quot;.\n" />
    <msg uid="2019" type="Warning" text="Inputs expected = 1, added = $$d in FLOP &quot;$$s&quot;.\n" />
	<msg uid="2020" type="Warning" text="Outputs expected = 1, added = $$d in FLOP &quot;$$s&quot;.\n" />
    <msg uid="2021" type="Warning" text="Clocks expected = 1, added = $$d in FLOP &quot;$$s&quot;.\n" />
    <msg uid="2022" type="Warning" text="Enables expected = $$d, added = $$d in FLOP &quot;$$s&quot;.\n" />
    <msg uid="2023" type="Warning" text="Set/resets expected = $$d, added = $$d in FLOP &quot;$$s&quot;.\n" />
    <msg uid="2024" type="Warning" text="Invalid pintype &lt;$$d&gt; added to MEMORY &quot;$$s&quot;.\n" />
    <msg uid="2025" type="Warning" text="Inputs expected = $$d, added = $$d for MEMORY &quot;$$s&quot;.\n" />
    <msg uid="2026" type="Warning" text="Pins expected = $$d, added = $$d in BUFFER &quot;$$s&quot;.\n" />
    <msg uid="2027" type="Warning" text="Invalid pintype &lt;$$d&gt; added to BUFFER &quot;$$s&quot;.\n" />
    <msg uid="2028" type="Warning" text="Inputs expected = 1, added = $$d for BUFFER &quot;$$s&quot;.\n" />
    <msg uid="2029" type="Warning" text="Outputs expected = 1, added = $$d for BUFFER &quot;$$s&quot;.\n" />
    <msg uid="2030" type="Warning" text="Enables expected = $$d, added = $$d for BUFFER &quot;$$s&quot;.\n" />
    <msg uid="2031" type="Warning" text="Outputs expected = 1, added = $$d in PULLUP &quot;$$s&quot;.\n" />
    <msg uid="2032" type="Warning" text="Invalid pintype &lt;$$d&gt; added to PULLUP &quot;$$s&quot;.\n" />
    <msg uid="2033" type="Warning" text="Outputs expected = 1, added = $$d in OSCILLATOR &quot;$$s&quot;.\n" />
    <msg uid="2034" type="Warning" text="Invalid pintype &lt;$$d&gt; added to OSCILLATOR &quot;$$s&quot;.\n" />
    <msg uid="2035" type="Warning" text="Outputs expected = 1, added = $$d in POWER &quot;$$s&quot;.\n" />
    <msg uid="2036" type="Warning" text="Invalid pintype &lt;$$d&gt; added to POWER &quot;$$s&quot;.\n" />
    <msg uid="2037" type="Warning" text="Port primitive &lt;$$s&gt; has no type.  Assuming type INPORT.\n" />
    <msg uid="2038" type="Warning" text="Expected 1 pin added = $$d in PORT &quot;$$s&quot;.\n" />
    <msg uid="2039" type="Warning" text="Invalid pintype &lt;$$d&gt; added to PORT &quot;$$s&quot;.\n" />
	<msg uid="2040" type="Warning" text="Unable to find configuration &quot;$$s&quot; for ATTRBOX &quot;$$s&quot;.\n" />
    <msg uid="2041" type="Warning" text="Invalid pintype &lt;$$d&gt; added to BLACKBOX &quot;$$s&quot;.\n" />
    <msg uid="2042" type="Warning" text="Inputs expected = $$d, added = $$d for BLACKBOX &quot;$$s&quot;.\n" />
    <msg uid="2043" type="Warning" text="Outputs expected = $$d, added = $$d for BLACKBOX &quot;$$s&quot;.\n" />
    <msg uid="2044" type="Warning" text="Expected 1 pin added = $$d in PAD &quot;$$s&quot;.\n" />
    <msg uid="2045" type="Warning" text="Invalid pintype &lt;$$d&gt; added to PAD &quot;$$s&quot;.\n" />
    <msg uid="2046" type="Warning" text="Unsupported object type $$d &quot;$$s&quot;.\n" />
    <msg uid="2047" type="Warning" text="Grafting 2 base wires &quot;$$s&quot; &quot;$$s&quot;\n" />
    <msg uid="2048" type="Warning" text="BAD, wire $$s not inserted\n" />
    <msg uid="2049" type="Warning" text="Cannot open $$s for writing\n" />
    <msg uid="2050" type="Warning" text="Cannot open file $$s for writing\n" />
    <msg uid="2051" type="Warning" text="Cannot find clean wire at input location\n" />
    <msg uid="2052" type="Warning" text="Cannot find clean pin at input location\n" />
    <msg uid="2053" type="Warning" text="Cannot find clean wire from clean pin\n" />
    <msg uid="2054" type="Warning" text="arc direction NT_H2V does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2055" type="Warning" text="arc direction NT_V2H does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2056" type="Warning" text="arc direction NT_T2B does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2057" type="Warning" text="arc direction NT_T2B ambiguous for wire geometry at ($$d, $$d)\n" />
    <msg uid="2058" type="Warning" text="arc direction NT_B2T does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2059" type="Warning" text="arc direction NT_B2T ambiguous for wire geometry at ($$d, $$d)\n" />
	<msg uid="2060" type="Warning" text="arc direction NT_L2R does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2061" type="Warning" text="arc direction NT_L2R ambiguous for wire geometry at ($$d, $$d)\n" />
    <msg uid="2062" type="Warning" text="arc direction NT_R2L does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2063" type="Warning" text="Unconnected cell pin at $$d, $$d on &quot;$$s&quot;\n" />
    <msg uid="2064" type="Warning" text="T junction of different wires with no switch x=$$d y=$$d $$s and $$s\n" />
    <msg uid="2065" type="Warning" text="Hidden switch direction NT_H2V does not match wire geometry at ($$d, $$d)\n" />
    <msg uid="2066" type="Warning" text="Found cellshape with non-rec and non-tri non pline gprim\n" />
    <msg uid="2067" type="Warning" text="For device $$s recursion depth is $$d\n" />
    <msg uid="2068" type="Warning" text="Wire $$d has LINE gprim from: ($$d,$$d) to ($$d,$$d)\n" />
    <msg uid="2069" type="Warning" text="Row $$d column $$d overlay $$d of APL has height $$d and $$d\n" />
    <msg uid="2070" type="Warning" text="New row height for row $$d is $$d\n" />
    <msg uid="2071" type="Warning" text="Row $$d column $$d overlay $$d of APL has width $$d and $$d\n" />
    <msg uid="2072" type="Warning" text="New column width for column $$d is $$d\n" />
    <msg uid="2073" type="Warning" text="APL file could not be found\n" />
    <msg uid="2074" type="Warning" text="Number of coefficients is incorrect. Expected &lt;$$d&gt;, found &lt;$$d&gt;\n" />
    <msg uid="2075" type="Warning" text="BDELAY data too large\n" />
    <msg uid="2076" type="Warning" text="BDELAY data is not a whole number\n" />
    <msg uid="2077" type="Warning" text="BDELAY scaling factor too small\n" />
    <msg uid="2078" type="Warning" text="BDELAY scaling factor too large\n" />
    <msg uid="2079" type="Warning" text="BDELAY scaling factor is not a whole number\n" />
	<msg uid="2080" type="Warning" text="Cannot find l2pmap data for logical $$s and physical $$s\n" />
    <msg uid="2081" type="Warning" text="Found unindexed site centred at ($$d,$$d) now indexed to $$d\n" />
    <msg uid="2082" type="Warning" text="Found unindexed site located at ($$d,$$d) now indexed to $$d\n" />
    <msg uid="2083" type="Warning" text="Unable to open pkl file.\n" />
    <msg uid="2084" type="Warning" text="PKL file $$s already exists - overwriting.\n" />
    <msg uid="2085" type="Warning" text="In cell [$$d,$$d] cast long $$d to double $$f\n" />
    <msg uid="2086" type="Warning" text="Family &quot;$$s&quot; is unknown\n" />
    <msg uid="2087" type="Warning" text="Device &quot;$$s&quot; is unknown\n" />
    <msg uid="2088" type="Warning" text="Default alias already set to $$s, ignore $$s\n" />
    <msg uid="2089" type="Warning" text="Ignoring period $$d in string $$s\n" />
    <msg uid="2090" type="Warning" text="No default value detected. Set default to $$s\n" />
    <msg uid="2091" type="Warning" text="No package information set - making all IOB's external\n" />
    <msg uid="2092" type="Warning" text="Cannot find pad for site named $$s\n" />
    <msg uid="2093" type="Warning" text="No clean up - cannot generate package information\n" />
    <msg uid="2094" type="Warning" text="Class has $$d instances and made [$$d,$$d] array\n" />
    <msg uid="2095" type="Warning" text="Adding element at ($$d,$$d) ieq $$d layer $$d ind $$d\n" />
    <msg uid="2096" type="Warning" text="New top level assembly is NULL. Need to calculate.\n" />
    <msg uid="2097" type="Warning" text="At w$$d*lt;-&gt;w$$d overlap found:\n" />
    <msg uid="2098" type="Warning" text="Do not add\n" />
    <msg uid="2099" type="Warning" text="at w$$d.$$d &lt;- (s$$d) (to w$$d.$$d) has enum $$s buf20 $$d buf21 $$d\n" />
	<msg uid="2100" type="Warning" text="Attempted to remove unregistered $$s\n" />
    <msg uid="2101" type="Warning" text="write_cleanswitchbox:  writing separate switchbox $$s\n" />
    <msg uid="2102" type="Warning" text="write_cleancell:  writing separate cell $$s\n" />
    <msg uid="2103" type="Warning" text="write_cleanass:  writing separate ass $$s\n" />
    <msg uid="2104" type="Warning" text="write_cleanswitch:  writing separate switch $$s\n" />
    <msg uid="2105" type="Warning" text="write_cleanwire:  writing separate wire $$s\n" />
    <msg uid="2106" type="Warning" text="Cannot open clean pins and lines\n" />
    <msg uid="2107" type="Warning" text="Constructed separate switchbox $$s\n" />
    <msg uid="2108" type="Warning" text="Constructed separate cell $$s\n" />
    <msg uid="2109" type="Warning" text="Constructed separate assembly $$s\n" />
	<msg uid="2110" type="Warning" text="Constructed separate switch $$s\n" />
    <msg uid="2111" type="Warning" text="Constructed separate wire $$s\n" />
    <msg uid="2112" type="Warning" text="Wire group placement $$s has no wires.\n" />
    <msg uid="2113" type="Warning" text="Switch group placement $$s has no switches.\n" />
    <msg uid="2114" type="Warning" text="Switch group $$s has no switches.\n" />
    <msg uid="2115" type="Warning" text="GR_WIREDATA::traverse - found a GR_MARK that should have not been set.  GR_INSTANCE: $$s GR_CALL offset ($$ld,$$ld), GR_LINE index $$ld, address $$p, line coordinates ($$ld,$$ld), ($$ld,$$ld), line absolute coordinates ($$ld,$$ld),($$ld,$$ld), number of GR_LINEs in this instance: $$d\n\n" />
    <msg uid="2116" type="Warning" text="Primitive other than line or call found in findmatchinginst\n" />
    <msg uid="2117" type="Warning" text="Additional layer violations not reported - use environment variable &lt;REPORT_LAYER_VIOS&gt; to see all layer violations\n" />
    <msg uid="2118" type="Warning" text="Ignoring site switches for non-default site type at line $$d\n" />
    <msg uid="2119" type="Warning" text="Line $$d: Malformed configuration string &lt;$$s&gt; for logic prim &lt;$$s&gt;--changing it to &lt;#OFF 0&gt;\n" />
	<msg uid="2120" type="Warning" text="Attempting to place logicprim &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="2121" type="Warning" text="Attempting to place primitive &lt;$$s&gt; on illegal layer &lt;$$s&gt;.\n" />
    <msg uid="2122" type="Warning" text="DXF file $$s already exists - overwriting.\n" />
    <msg uid="2123" type="Warning" text="Unable to open dxf file &lt;$$s&gt;.\n" />
    <msg uid="2124" type="Warning" text="Hit $$d placed switches in building top\n" />
    <msg uid="2125" type="Warning" text="Cannot find cell model &quot;$$s&quot;\n" />
    <msg uid="2126" type="Warning" text="emptyMessage\n" />
	<msg uid="2127" type="Warning" text="At w$$d.$$d -&gt; (s$$d) (to w$$d.$$d) has enum $$s buf20 $$d buf21 $$d\n" />
    <msg uid="2128" type="Warning" text=" Use DIST sw_dist($$d,$$d,$$x,$$d,$$s,$$s) where speed index should be $$d\n" />
    <msg uid="2129" type="Warning" text=" At group $$d (with $$d prims) hit self conn\n" />
    <msg uid="2130" type="Warning" text="Found arc dist from w$$d to w$$d with no switches\n" />
    <msg uid="2131" type="Warning" text=" At group $$d (with $$d prims) could not find w$$d in sw$$d\n" />
    <msg uid="2132" type="Warning" text="At dist $$d, pin $$d, arc $$d is reversed\n" />
    <msg uid="2133" type="Warning" text="Found second rectangular or triangular or pline gprim for cellshape\n" />
    <msg uid="2134" type="Warning" text="For pinwire on [($$d,$$d),($$d,$$d)] at hit $$d site is bogus\n" />
    <msg uid="2135" type="Warning" text="At s$$d.0 (of $$d inst) pin $$d at ($$d,$$d) pinwire dist = $$d\n" />
    <msg uid="2136" type="Warning" text="Found swbox with non-rec gprim\n" />
	<msg uid="2137" type="Warning" text="Found second rectangular gprim for swbox\n" />
    <msg uid="2138" type="Warning" text="At swb$$d.$$d p$$d there is no wire\n" />
    <msg uid="2139" type="Warning" text=" swb$$d.$$d p$$d got zero hits at ($$d,$$d)\n" />
    <msg uid="2140" type="Warning" text="At w$$d.0 base name is $$s\n" />
    <msg uid="2141" type="Warning" text="At w$$d.$$d base name is $$s\n" />
    <msg uid="2142" type="Warning" text="At w$$d.$$d equations have differing length\n" />
    <msg uid="2143" type="Warning" text="swbox switch $$d already in swbox $$s\n" />
    <msg uid="2144" type="Warning" text=" Wire $$s has degenerate line $$d\n" />
    <msg uid="2145" type="Warning" text="Attempting to add unnamed $$s\n" />
    <msg uid="2146" type="Warning" text="Attempting to add duplicate $$s: $$s\n" />



     <!-- define status message 3000 to 3999 -->
    <msg uid="3000" type="Status" text="Beginning cellmodel::checkme..." />
    <msg uid="3001" type="Status" text="Beginning read/write cellmodel verification..." />
    <msg uid="3002" type="Status" text="...end of cellmodel read/write verification" />
    <msg uid="3003" type="Status" text="   Dump NT_CMIO : use environment variables." />
    <msg uid="3004" type="Status" text="   Dump NT_CMGRFIO : use environment variables." />
    <msg uid="3005" type="Status" text=" Using switch for pm name &lt;$$s&gt;" />
    <msg uid="3006" type="Status" text=" Using environment variable ORCA_PM for pm name &lt;$$s&gt;" />
    <msg uid="3007" type="Status" text="Warning:  NEO_PM has been deprecated, use ORCA_PM instead." />
    <msg uid="3008" type="Status" text=" Using environment variable for pm name &lt;$$s&gt;" />
    <msg uid="3009" type="Status" text=" Using default for pm name &lt;$$s&gt;" />
    <msg uid="3010" type="Status" text=" Using switch for device name &lt;$$s&gt;" />
    <msg uid="3011" type="Status" text=" Using environment variable ORCA_DEVICE for device name &lt;$$s&gt;" />
    <msg uid="3012" type="Status" text="Warning:  NEO_DEVICE has been deprecated, use ORCA_DEVICE instead." />
    <msg uid="3013" type="Status" text=" Using environment variable for device name &lt;$$s&gt;" />
    <msg uid="3014" type="Status" text=" Using default for device name &lt;$$s&gt;" />
    <msg uid="3015" type="Status" text="pm name &quot;$$s&quot; is series 1 or 2\n" />
    <msg uid="3016" type="Status" text="pm name &quot;$$s&quot; is not series 1 or 2, " />
    <msg uid="3017" type="Status" text="Skip cell model parse\n" />
    <msg uid="3018" type="Status" text="Same pm name as in the NTM database" />
    <msg uid="3019" type="Status" text="Must replace pm name &quot;$$s&quot; with &quot;$$s&quot;\n" />
	<msg uid="3020" type="Status" text="Same dev name as in the NTM database\n" />
    <msg uid="3021" type="Status" text="Must replace dev name &quot;$$s&quot; with &quot;$$s&quot;\n" />
    <msg uid="3022" type="Status" text="Changing NTM flag &quot;inputio&quot; from $$d to $$d\n" />
    <msg uid="3023" type="Status" text="Changing NTM flag &quot;do_debug_stuff&quot; from $$d to $$d\n" />
    <msg uid="3024" type="Status" text="Changing NTM flag &quot;aswitch&quot; from $$d to $$d\n" />
    <msg uid="3025" type="Status" text="Changing NTM flag &quot;dswitch&quot; from $$d to $$d\n" />
    <msg uid="3026" type="Status" text="Changing NTM flag &quot;ntm_output&quot; from $$d to $$d\n" />
    <msg uid="3027" type="Status" text="Changing NTM flag &quot;trim&quot; from $$d to $$d\n" />
    <msg uid="3028" type="Status" text="Changing NTM flag &quot;clean&quot; from $$d to $$d\n" />
    <msg uid="3029" type="Status" text="Changing NTM flag &quot;graft&quot; from $$d to $$d\n" />
    <msg uid="3030" type="Status" text="Changing NTM flag &quot;donph&quot; from $$d to $$d\n" />
    <msg uid="3031" type="Status" text="Changing NTM flag &quot;dopkg&quot; from $$d to $$d\n" />
    <msg uid="3032" type="Status" text="Changing NTM flag &quot;dospd&quot; from $$d to $$d\n" />
    <msg uid="3033" type="Status" text="Changing NTM flag &quot;dogrf&quot; from $$d to $$d\n" />
    <msg uid="3034" type="Status" text="Changing NTM flag &quot;docm&quot; from $$d to $$d\n" />
    <msg uid="3035" type="Status" text="Changing NTM flag &quot;docmgrf&quot; from $$d to $$d\n" />
    <msg uid="3036" type="Status" text="Changing NTM flag &quot;dontml&quot; from $$d to $$d\n" />
    <msg uid="3037" type="Status" text="Changing NTM flag &quot;dodxf&quot; from $$d to $$d\n" />
    <msg uid="3038" type="Status" text="Changing NTM flag &quot;dospl&quot; from $$d to $$d\n" />
    <msg uid="3039" type="Status" text="Changing NTM flag &quot;dopkl&quot; from $$d to $$d\n" />
	<msg uid="3040" type="Status" text="Changing NTM flag &quot;dobit&quot; from $$d to $$d\n" />
    <msg uid="3041" type="Status" text="Changing NTM flag &quot;dodef&quot; from $$d to $$d\n" />
    <msg uid="3042" type="Status" text="Changing NTM flag &quot;REMOVE_SWITCHBOX_PINS&quot; from $$d to $$d\n" />
    <msg uid="3043" type="Status" text="Changing NTM flag &quot;REMOVE_CELL_PINS&quot; from $$d to $$d\n" />
    <msg uid="3044" type="Status" text="Changing NTM flag &quot;assign_speed_names&quot; from $$d to $$d\n" />
    <msg uid="3045" type="Status" text="Changing NTM flag &quot;grid_spacing&quot; from $$d to $$d\n" />
    <msg uid="3046" type="Status" text="Prim $$s : x=$$d y=$$d." />
    <msg uid="3047" type="Status" text="x=$$d  y=$$d  type=$$d  wire=$$d." />
    <msg uid="3048" type="Status" text="Clean Wire $$s : x=$$d y=$$d pin=$$d switches=$$d switchboxes=$$d." />
    <msg uid="3049" type="Status" text="DDB clean up finished with." />
    <msg uid="3050" type="Status" text="\t$$6d cells." />
    <msg uid="3051" type="Status" text="\t$$6d cell pins." />
    <msg uid="3052" type="Status" text="\t$$6d switch boxes." />
    <msg uid="3053" type="Status" text="\t$$6d switch box pins." />
    <msg uid="3054" type="Status" text="\t$$6d placed switches." />
    <msg uid="3055" type="Status" text="\t$$6d wires." />
    <msg uid="3056" type="Status" text="Start writing $$s." />
    <msg uid="3057" type="Status" text="Finished writing $$s." />
    <msg uid="3058" type="Status" text="DDB explode started with." />
    <msg uid="3059" type="Status" text="\t$$6d placed assemblies." />
	<msg uid="3060" type="Status" text="\t$$6d placed cells." />
    <msg uid="3061" type="Status" text="\t$$6d placed switch boxes." />
    <msg uid="3062" type="Status" text="\t$$6d placed switches." />
    <msg uid="3063" type="Status" text="Dump wire prims: no NT_WIRE*." />
    <msg uid="3064" type="Status" text="\t$$6d placed NT_WIRES." />
    <msg uid="3065" type="Status" text="\t$$6d placed wires." />
    <msg uid="3066" type="Status" text="\t$$6d placed wire groups." />
    <msg uid="3067" type="Status" text="Print_assembly_details" />
    <msg uid="3068" type="Status" text="Explode device from placed assemblies." />
    <msg uid="3069" type="Status" text="Explode device from APL file $$s.apl." />
    <msg uid="3070" type="Status" text="DDB cleanup started with." />
    <msg uid="3071" type="Status" text="\t$$6d horizontal lines." />
    <msg uid="3072" type="Status" text="\t$$6d vertical lines." />
    <msg uid="3073" type="Status" text="DD_WIRE prim dump, wire: $$s." />
    <msg uid="3074" type="Status" text="  Line $$d, ($$ld,$$ld),($$ld,$$ld)." />
    <msg uid="3075" type="Status" text="Dump cleanwire: no NT_WIRE*." />
    <msg uid="3076" type="Status" text="NT_CLEANWIRE dump, wire: $$s, xy: ($$ld,$$ld)." />
    <msg uid="3077" type="Status" text="     with offset ($$ld,$$ld), ($$ld,$$ld),($$ld,$$ld)." />
    <msg uid="3078" type="Status" text="XXXX check error, $$p, $$p." />
    <msg uid="3079" type="Status" text="NOTE: additional timing model errors will not be reported - use environment variable &lt;REPORT_TIMING_MODEL_ERRORS=count&gt; to see &lt;count&gt; errors." />
	<msg uid="3080" type="Status" text="There were $$d timing model errors. More timing model errors may exist. Set environment variable &lt;REPORT_TIMING_MODEL_ERRORS=count&gt; to see &lt;count&gt; errors (default is set to report max of $$d errors)." />
    <msg uid="3081" type="Status" text="No draw for gprim (base class)." />
    <msg uid="3082" type="Status" text="From ($$d,$$d) to." />
    <msg uid="3083" type="Status" text="     ($$d,$$d) to." />
    <msg uid="3084" type="Status" text="     ($$d,$$d)." />
    <msg uid="3085" type="Status" text="From ($$d,$$d) to ($$d,$$d)." />
    <msg uid="3086" type="Status" text="No draw for gprim (circle)." />
    <msg uid="3087" type="Status" text="No draw for gprim (arc)." />
    <msg uid="3088" type="Status" text="No draw for gprim (text)." />
    <msg uid="3089" type="Status" text="No draw for gprim (call)." />
    <msg uid="3090" type="Status" text="Graphics for clnwire at ($$d,$$d)." />
    <msg uid="3091" type="Status" text=" Current NPH insert is ($$d,$$d) named $$s." />
    <msg uid="3092" type="Status" text="$$s$$s assembly at $$d,$$d extrema $$d,$$d $$d,$$d." />
    <msg uid="3093" type="Status" text=" Do not add wire $$s queried at ($$d,$$d) to BXD." />
    <msg uid="3094" type="Status" text="  Here BX_INST $$s is [($$d,$$d)($$d,$$d)]." />
    <msg uid="3095" type="Status" text="  In local cords NOTE:($$d,$$d)." />
    <msg uid="3096" type="Status" text="crap1 in fits_in_child." />
    <msg uid="3097" type="Status" text="Running with INS_DATA generated from an $$s file." />
    <msg uid="3098" type="Status" text="add_to_hierarchy:: unknown object type $$d." />
    <msg uid="3099" type="Status" text="replacing &quot;$$s&quot; with &quot;$$s&quot;." />
	<msg uid="3100" type="Status" text="APL data has $$d rows and $$d columns." />
    <msg uid="3101" type="Status" text=" Parse row $$d." />
    <msg uid="3102" type="Status" text="Row center is $$d column center is $$d." />
    <msg uid="3103" type="Status" text="Starting open_read_close_apl_file." />
    <msg uid="3104" type="Status" text="Opening INS file for device $$s." />
    <msg uid="3105" type="Status" text="Opening APL file for device $$s." />
    <msg uid="3106" type="Status" text="Finished reading APL file for device $$s." />
    <msg uid="3107" type="Status" text="Starting read_apl_data_from_file (line limit $$d chars)." />
    <msg uid="3108" type="Status" text="First three lines should give: num rows, num cols and a blank." />
    <msg uid="3109" type="Status" text="Now read $$d template lines." />
    <msg uid="3110" type="Status" text="Read in $$d aliases." />
    <msg uid="3111" type="Status" text="Centre read in as $$d, $$d." />
    <msg uid="3112" type="Status" text="Read line $$d which is &quot;$$s&quot;." />
    <msg uid="3113" type="Status" text="Start set_overlays_template_index." />
    <msg uid="3114" type="Status" text="Start populate_tiles_from_apl_data." />
    <msg uid="3115" type="Status" text="Starting parse of APL file." />
    <msg uid="3116" type="Status" text="Counted $$d tiles." />
    <msg uid="3117" type="Status" text="Convert APL to ins data." />
    <msg uid="3118" type="Status" text="Set chip bounds" />
    <msg uid="3119" type="Status" text="sort_tiles_by_template_type." />
	<msg uid="3120" type="Status" text="rename_instances." />
    <msg uid="3121" type="Status" text="Make NP_GRAPH_PAPER from NP_INS_FILE_DATA with." />
    <msg uid="3122" type="Status" text="Num rows $$d." />
    <msg uid="3123" type="Status" text=" row[$$d] = $$d." />
    <msg uid="3124" type="Status" text="Num cols $$d." />
    <msg uid="3125" type="Status" text=" col[$$d] = $$d." />
    <msg uid="3126" type="Status" text="Num sub_rows $$d." />
    <msg uid="3127" type="Status" text="Num sub_cols $$d." />
    <msg uid="3128" type="Status" text="Num templates $$d." />
    <msg uid="3129" type="Status" text="Num tiles $$d." />
    <msg uid="3130" type="Status" text=" Chip core is [($$d,$$d),($$d,$$d)]." />
    <msg uid="3131" type="Status" text=" Chip bounds is [($$d,$$d),($$d,$$d)]." />
    <msg uid="3132" type="Status" text="Found APL file $$s with $$d tiles." />
    <msg uid="3133" type="Status" text="Wrote INS file from APL file $$s with $$d tiles." />
    <msg uid="3134" type="Status" text="Found INS file $$s with $$d tiles." />
    <msg uid="3135" type="Status" text="Could not find INS so create data from $$d placed assemblies." />
    <msg uid="3136" type="Status" text="Now write INS file $$s." />
    <msg uid="3137" type="Status" text="Wrote INS file from $$d placed assemblies." />
    <msg uid="3138" type="Status" text="No APL file, INS file or placed assemblies for device $$s live without INS data." />
    <msg uid="3139" type="Status" text="No placed assemblies for device $$s to construct INS data." />
	<msg uid="3140" type="Status" text="Found $$d tiles of type $$s." />
    <msg uid="3141" type="Status" text="Found a primitive or path delay. Try loading in a cellmodel." />
    <msg uid="3142" type="Status" text="Device hardware input version is $$s." />
    <msg uid="3143" type="Status" text="Speed table $$s:" />
    <msg uid="3144" type="Status" text="$$d speed grades defined:" />
    <msg uid="3145" type="Status" text="   $$s." />
    <msg uid="3146" type="Status" text="Found site name file $$s." />
    <msg uid="3147" type="Status" text="Site name file $$s loaded." />
    <msg uid="3148" type="Status" text="Failed to load site name file $$s." />
    <msg uid="3149" type="Status" text="Unable to find site name file." />
    <msg uid="3150" type="Status" text="Decomposition failed at line: $$d.\n" />
    <msg uid="3151" type="Status" text="Found site name rule file $$s." />
    <msg uid="3152" type="Status" text="Site name rule file $$s loaded." />
    <msg uid="3153" type="Status" text="Failed to load site name rule file $$s." />
    <msg uid="3154" type="Status" text="Could not find site name rule file." />
    <msg uid="3155" type="Status" text="swboxsw $$d problem: wire1 = wire2 = $$d\n" />
    <msg uid="3156" type="Status" text="pin1($$X) is at ($$d,$$d) pin2($$X) is at ($$d,$$d)\n" />
    <msg uid="3157" type="Status" text="cellsw $$d problem: wire1 = wire2 = $$d\n" />
    <msg uid="3158" type="Status" text="at pw$$d.$$d site$$d.$$d find two pinwires pw$$d.$$d and pw$$d.$$d." />
    <msg uid="3159" type="Status" text="pw$$d.$$d and pw$$d.$$d is recommended." />
	<msg uid="3160" type="Status" text=" Pin $$d connects to n$$d.$$d." />
    <msg uid="3161" type="Status" text="OK at pw$$d.$$d site$$d.$$d." />
    <msg uid="3162" type="Status" text="ARC connecting w1 at ($$d,$$d) and w2 at ($$d, $$d) has flags $$x." />
    <msg uid="3163" type="Status" text="      processed $$ld nodes for SS $$d,." />
    <msg uid="3164" type="Status" text="          ensure that both were removed (Removing celltype ...)?" />
    <msg uid="3165" type="Status" text=" Unable to find a logical site param for physical site $$s." />
    <msg uid="3166" type="Status" text=" Unable to find a physical site param for logical site $$s." />
    <msg uid="3167" type="Status" text="      processed $$d sites for SS $$d,." />
    <msg uid="3168" type="Status" text="Error: unable to get site name at $$d, $$d." />
    <msg uid="3169" type="Status" text="There are $$d regular-arcs." />
    <msg uid="3170" type="Status" text="There are $$d hidden-arcs." />
    <msg uid="3171" type="Status" text="There are $$d swbox arcs." />
    <msg uid="3172" type="Status" text="There are $$d psuedo-arcs." />
    <msg uid="3173" type="Status" text="Skipping arc scanning on $$d arcs." />
    <msg uid="3174" type="Status" text="This switch is named $$s." />
    <msg uid="3175" type="Status" text="This clean switch has no template." />
    <msg uid="3176" type="Status" text="Cleanwire $$d is at ($$d,$$d) with graphics finds node $$x:" />
    <msg uid="3177" type="Status" text="Cleanwire $$d is at ($$d,$$d) with graphics finds node $$x::" />
    <msg uid="3178" type="Status" text="      processed $$ld arcs  $$ld port arcs for SS $$d  ($$d remain),." />
    <msg uid="3179" type="Status" text="Legend:  end_sw = $$d, end_hsw = $$d, end_swbsw = $$d, end_cellsw = $$d." />
	<msg uid="3180" type="Status" text="Supersite $$d  =&gt; Graph 0x$$X." />
    <msg uid="3181" type="Status" text="      processed $$ld arcs for SS $$d,." />
    <msg uid="3182" type="Status" text="There are $$d cleanswitches." />
    <msg uid="3183" type="Status" text=" From NT_CELLSWITCH $$d have isnotexclude==1, $$d have isnotexclude==0" />
    <msg uid="3184" type="Status" text=" From NT_SWBSWITCH $$d have isnotexclude==1, $$d have isnotexclude==0" />
    <msg uid="3185" type="Status" text=" From HIDDEN_SWITCH_TEMPLATE $$d have isnotexclude==1, $$d have isnotexclude==0" />
    <msg uid="3186" type="Status" text=" From NT_SWITCH $$d have isnotexclude==1, $$d have isnotexclude==0" />
    <msg uid="3187" type="Status" text="$$s darray is NULL\n" />
    <msg uid="3188" type="Status" text="$$s element_to_add is NULL. darray has $$d elements already\n" />
    <msg uid="3189" type="Status" text="$$s element $$d is repeated\n" />
    <msg uid="3190" type="Status" text="$$s element $$d is unique\n" />
    <msg uid="3191" type="Status" text="printing assemblies to $$s." />
    <msg uid="3192" type="Status" text=" Array[$$d]=$$d." />
    <msg uid="3193" type="Status" text="Found $$d words in string &quot;$$s&quot;. They are" />
    <msg uid="3194" type="Status" text=" $$d) &quot;$$s&quot; ." />
    <msg uid="3195" type="Status" text="Completed printing placed assemblies to $$s." />
    <msg uid="3196" type="Status" text="reading pkl file &lt;$$s&gt;..." />
    <msg uid="3197" type="Status" text="...end reading pkl file." />
    <msg uid="3198" type="Status" text="Column header: $$s with $$d pin columns." />
    <msg uid="3199" type="Status" text="Column $$d has mode value $$s in these $$d rows." />
	<msg uid="3200" type="Status" text=" Row $$d maps to &quot;$$s&quot;." />
    <msg uid="3201" type="Status" text="Column $$d (header $$s) will be inverted." />
    <msg uid="3202" type="Status" text="Inverted $$d tables." />
    <msg uid="3203" type="Status" text="**************" />
    <msg uid="3204" type="Status" text="Print table $$d. " />
    <msg uid="3205" type="Status" text=" Cannot find type column." />
    <msg uid="3206" type="Status" text=" The first character of $$s (r$$d c$$d) is not F." />
    <msg uid="3207" type="Status" text="Field $$d is $$d." />
    <msg uid="3208" type="Status" text="Hit only 1 swbox (instance $$d.)" />
    <msg uid="3209" type="Status" text="Hit $$d swboxes." />
	<msg uid="3210" type="Status" text="Adding NOINDEX speed" />
    <msg uid="3211" type="Status" text="Even though tile template $$d != $$d." />
    <msg uid="3212" type="Status" text="           nph-cwg = ($$d,$$d)." />
    <msg uid="3213" type="Status" text="           cwg = ($$d,$$d)." />
    <msg uid="3214" type="Status" text="           nph = ($$d,$$d)." />
    <msg uid="3215" type="Status" text="Print graphics for instance $$d (name $$s, spdnm $$s)." />
    <msg uid="3216" type="Status" text="At ($$d,$$d) resolved to (r$$d,c$$d,x=$$d,y=$$d) grouping number is $$d." />
    <msg uid="3217" type="Status" text=" This is ieq $$d inst $$d with gindex $$d." />
    <msg uid="3218" type="Status" text="Pin   wires: [0,$$d)  $$d instances." />
    <msg uid="3219" type="Status" text="Local wires: [$$d,$$d) $$d instances." />
	<msg uid="3220" type="Status" text="Long  wires: [$$d,$$d) $$d instances." />
    <msg uid="3221" type="Status" text="Local wires: h!c: $$d, hc: $$d, v!c: $$d, vc: $$d (total $$d)." />
    <msg uid="3222" type="Status" text="Local hclock wires: [$$d,$$d)." />
    <msg uid="3223" type="Status" text="Local h nonclock wires: [$$d,$$d)." />
    <msg uid="3224" type="Status" text="Local vclock wires: [$$d,$$d)." />
    <msg uid="3225" type="Status" text="Local v nonclock wires: [$$d,$$d)." />
    <msg uid="3226" type="Status" text="Long  wires: h!c: $$d, hc: $$d, v!c: $$d, vc: $$d (total $$d)." />
    <msg uid="3227" type="Status" text="Long hclock wires: [$$d,$$d." />
    <msg uid="3228" type="Status" text="Long h nonclock wires: [$$d,$$d)." />
    <msg uid="3229" type="Status" text="Long vclock wires: [$$d,$$d)." />
	<msg uid="3230" type="Status" text="Long v nonclock wires: [$$d,$$d)." />
    <msg uid="3231" type="Status" text="Cleanwire $$d has flag $$d but cleanwire $$d has flag $$d." />
    <msg uid="3232" type="Status" text="Cleanwire $$d has speed $$d but cleanwire $$d has speed $$d." />
    <msg uid="3233" type="Status" text="Traditionally $$d np_nodes." />
    <msg uid="3234" type="Status" text="Compressed $$d wires." />
    <msg uid="3235" type="Status" text="Found $$d I EQ CLASSES in $$d classes\n" />
    <msg uid="3236" type="Status" text="In G EQ CLASS $$d (with $$d instances):" />
    <msg uid="3237" type="Status" text=" I EQ CLASS $$d has $$d instances (flags $$d, spd $$d):" />
    <msg uid="3238" type="Status" text="In ~DD_ARC_MANAGER()e." />
    <msg uid="3239" type="Status" text="Delete sw_g_man." />
	<msg uid="3240" type="Status" text="Delete cip_g_man." />
    <msg uid="3241" type="Status" text="Delete map_org;" />
    <msg uid="3242" type="Status" text="Running from basddb debug library." />
    <msg uid="3243" type="Status" text="CALL cache_cleanwire_node_ids()." />
    <msg uid="3244" type="Status" text="Corrected $$d reorders." />
    <msg uid="3245" type="Status" text="No errors found by new_switch_connectivity_diagnostics." />
    <msg uid="3246" type="Status" text="Speed to add is $$d != $$d (recorded)." />
    <msg uid="3247" type="Status" text=" Key is $$d. " />
    <msg uid="3248" type="Status" text="At w$$d&lt;-&gt;w$$d there were $$d partitions found:" />
    <msg uid="3249" type="Status" text=" At partition $$d:" />
	<msg uid="3250" type="Status" text="w$$d&lt;-&gt;w$$d (fr) has me rows[$$d]: $$s." />



    <!-- define information message -->
	

    <msg uid="3251" type="Status" text="w$$d&lt;-&gt;w$$d (to) has me rows[$$d]: $$s." />
    <msg uid="3252" type="Status" text="w$$d&lt;-&gt;w$$d (fr) has me cols[$$d]: $$s." />
    <msg uid="3253" type="Status" text="w$$d&lt;-&gt;w$$d (to) has me cols[$$d]: $$s." />
    <msg uid="3254" type="Status" text="DD_SW_DIST_INDEX_SET::get_num_elements() is $$d has ths partition:" />
    <msg uid="3255" type="Status" text="to" />
    <msg uid="3256" type="Status" text="Add_inst_to_set_list at w$$d.$$d&lt;-&gt;w$$d.$$d." />
    <msg uid="3257" type="Status" text="The connections from dist $$d." />
    <msg uid="3258" type="Status" text="List $$d of from_dist $$d." />
    <msg uid="3259" type="Status" text="   $$d) w$$d.$$d &lt;-&gt; w$$d.$$d." />
	<msg uid="3260" type="Status" text="   $$d) w$$d.$$d to w$$d.$$d, Order important: $$d and reversed: $$d (enum $$s buf20 $$d buf21 $$d)." />
    <msg uid="3261" type="Status" text="Linear from node map (m=$$d b=$$d) with $$d elements:" />
    <msg uid="3262" type="Status" text=" m[$$d]=$$d." />
    <msg uid="3263" type="Status" text="Linear to node map (m=$$d b=$$d) with $$d elements:" />
    <msg uid="3264" type="Status" text="Timing index hit $$d." />
    <msg uid="3265" type="Status" text="    $$d) w$$d.$$d - w$$d.$$d switch $$d.$$d." />
    <msg uid="3266" type="Status" text="    $$d) w$$d.$$d-&gt;w$$d.$$d switch $$d.$$d  (group $$d)." />
    <msg uid="3267" type="Status" text="** group $$d has $$d primitives." />
    <msg uid="3268" type="Status" text="*** organized into these $$d groups ***" />
    <msg uid="3269" type="Status" text="**************************************\n" />
	<msg uid="3270" type="Status" text="%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%" />
    <msg uid="3271" type="Status" text="Mapping from w$$d (with $$d instances) can be reordered ($$d groups)." />
    <msg uid="3272" type="Status" text="  Primitive $$d (conn through sw$$d):" />
    <msg uid="3273" type="Status" text="At dist $$d." />
    <msg uid="3274" type="Status" text="At dist $$d to dist $$d there are $$d arc_dists." />
    <msg uid="3275" type="Status" text="Dump arc_mgr." />
    <msg uid="3276" type="Status" text=" Dump distribution $$d." />
    <msg uid="3277" type="Status" text=" sw_dist$$d w$$d&lt;-&gt;w$$d: spd $$d flgs $$x at ($$d,$$d) G-ind $$d ($$s) has $$d inst." />
    <msg uid="3278" type="Status" text=" fr nm = $$d and fr am = $$d but fr map = $$d." />
    <msg uid="3279" type="Status" text=" to nm = $$d and to am = $$d but to map = $$d." />
	<msg uid="3280" type="Status" text="    w$$d.$$d&lt;- $$d -&gt; w$$d.$$d." />
    <msg uid="3281" type="Status" text="Print the $$d distributions in DD_ARC_MANAGER." />
    <msg uid="3282" type="Status" text=" Distribution $$d is:" />
    <msg uid="3283" type="Status" text=" w$$d.$$d &lt;-&gt; w$$d.$$d flg $$x, spd $$d type $$s ($$d) at ($$d,$$d)." />
    <msg uid="3284" type="Status" text=" w$$d.$$d &lt;-  w$$d.$$d flg $$x, spd $$d type $$s ($$d) at ($$d,$$d)." />
    <msg uid="3285" type="Status" text=" w$$d.$$d  -&gt; w$$d.$$d flg $$x, spd $$d type $$s ($$d) at ($$d,$$d)." />
    <msg uid="3286" type="Status" text="Wire class $$d (with $$d instances) instantiates $$d distributions." />
    <msg uid="3287" type="Status" text=" Dist $$d instantiates these connections." />
    <msg uid="3288" type="Status" text="Reordered $$d of $$d ($$f percent)." />
    <msg uid="3289" type="Status" text="Missed $$d. Could achieve $$f percent reorder." />
	<msg uid="3290" type="Status" text="bidir density is $$f percent." />
    <msg uid="3291" type="Status" text="Hit $$d is s$$d.$$d." />
    <msg uid="3292" type="Status" text="No errors found in pinwire connections." />
    <msg uid="3293" type="Status" text=" $$d site dist correctly counted." />
    <msg uid="3294" type="Status" text="This dist has $$d instances." />
    <msg uid="3295" type="Status" text="Instance $$d is in true row $$d true col $$d." />
    <msg uid="3296" type="Status" text="Found $$d pinwiredists, $$d other dists. Total: $$d dists." />
    <msg uid="3297" type="Status" text="On device $$s, no trimmed wires detected." />
    <msg uid="3298" type="Status" text="Resolving ref for assembly &quot;$$s&quot; (layer &quot;$$s&quot;) with $$d objects." />
    <msg uid="3299" type="Status" text=" Object $$d ($$d,$$d) is an assembly with name $$s." />




	<msg uid="3300" type="Status" text="$$d Switch Templates\n" />
    <msg uid="3301" type="Status" text="swName: $$s   spdName: $$s   flags: 0x$$x   dirName: $$s\n" />
    <msg uid="3302" type="Status" text="$$d Switch Definitions\n" />
    <msg uid="3303" type="Status" text="pt1:  ($$d,$$d)  pt2:  ($$d,$$d)  swName:  $$s\n" />
    <msg uid="3304" type="Status" text="$$s WARNING: could not find clean wire for &lt;$$s&gt; at $$d,$$d." />
    <msg uid="3305" type="Status" text="$$s$$s wire at nodeloc $$d,$$d." />
    <msg uid="3306" type="Status" text="$$s$$s pinwire nodeloc $$d,$$d." />
    <msg uid="3307" type="Status" text="$$s WARNING: could not find cleanpin for pin &lt;$$s&gt; at $$d,$$d." />
    <msg uid="3308" type="Status" text="   Dump NT_NPHIO : use environment variables DUMPALL | DUMPNODES | DUMPSITES | DUMPARCS | DUMPGRAPHS." />
    <msg uid="3309" type="Status" text="Device Name: $$s." />
	<msg uid="3310" type="Status" text="Extrema: &lt;$$d,$$d&gt; &lt;$$d,$$d&gt;" />
    <msg uid="3311" type="Status" text="#Nodes: $$d." />
    <msg uid="3312" type="Status" text="#Arcs: $$d." />
    <msg uid="3313" type="Status" text="#Sites: $$d" />
    <msg uid="3314" type="Status" text="   processing nodes..." />
    <msg uid="3315" type="Status" text="   processing sites..." />
    <msg uid="3316" type="Status" text="   processing arcs..." />
    <msg uid="3317" type="Status" text="******************************************************************" />
    <msg uid="3318" type="Status" text="Construct _patternMan from file &quot;$$s&quot;" />
    <msg uid="3319" type="Status" text="Unable to open file &quot;$$s&quot; construct _patternMan from device." />
	<msg uid="3320" type="Status" text="Created PATTERN_MANAGER:  NT_NPHIO is $$X _patternMan is $$X." />
    <msg uid="3321" type="Status" text="   add siteparams to pattern manager..." />
    <msg uid="3322" type="Status" text="Unable to open device revision file $$s." />
    <msg uid="3323" type="Status" text="Device revision is $$d." />
    <msg uid="3324" type="Status" text="Unable to get device revision for device $$s." />
    <msg uid="3325" type="Status" text="NP_DEVICE default revision $$d." />
    <msg uid="3326" type="Status" text="Device name is $$s." />
    <msg uid="3327" type="Status" text="Set NP_DEVICE revision $$d." />
    <msg uid="3328" type="Status" text="The extrema for the top level graph is too small for this device.  Assigning the ntm device extrema as the extents for the top level graph." />
    <msg uid="3329" type="Status" text="After the NPH is complete, you will need the INS data. Reconstruct now." />
	<msg uid="3330" type="Status" text=" char $$d is $$s\n" />
    <msg uid="3331" type="Status" text=" char $$d is $$x\n" />
    <msg uid="3332" type="Status" text=" char $$d is $$d\n" />
    <msg uid="3333" type="Status" text="Truncating &quot;$$s&quot; to $$d cahrs\n" />
    <msg uid="3334" type="Status" text="Unable to open binary WRITE file $$s. It already exists.\n" />
    <msg uid="3335" type="Status" text="   start_populate_$$d_spdrecords" />
    <msg uid="3336" type="Status" text="   start_write_$$d_spdrecords" />
    <msg uid="3337" type="Status" text="   start_write_$$d_spdtemplates" />
    <msg uid="3338" type="Status" text="Writing dd_template not found in model of type $$d (&quot;$$s&quot;) $$X\n" />
    <msg uid="3339" type="Status" text="Reading dd_template not found in model of type $$d\n" />
	<msg uid="3340" type="Status" text="ABORTING print.\n" />
    <msg uid="3341" type="Status" text="ABORTING difference.\n" />
    <msg uid="3342" type="Status" text="Found   difference in stats for $$s and $$s\n" />
    <msg uid="3343" type="Status" text="Found   difference in pkg_mgr for $$s and $$s\n" />
    <msg uid="3344" type="Status" text="Found   difference in speedtemplates or speedgrades for $$s and $$s\n" />
    <msg uid="3345" type="Status" text="Found   difference in speedrecords for $$s and $$s\n" />
    <msg uid="3346" type="Status" text="Found   difference in speedrecord data for $$s and $$s\n" />
    <msg uid="3347" type="Status" text="Found   difference in nt_wires for $$s and $$s\n" />
    <msg uid="3348" type="Status" text="Found   difference in nt_layers for $$s and $$s\n" />
    <msg uid="3349" type="Status" text="Found   difference in nt_pins for $$s and $$s\n" />
	<msg uid="3350" type="Status" text="Found   difference in nt_switches for $$s and $$s\n" />
    <msg uid="3351" type="Status" text="Found   difference in (hidden) nt_switches for $$s and $$s\n" />
    <msg uid="3352" type="Status" text="Found   difference in nt_celltypes for $$s and $$s\n" />
    <msg uid="3353" type="Status" text="Found   difference in nt_cellswitches for $$s and $$s\n" />
    <msg uid="3354" type="Status" text="Found   difference in nt_swboxswitches for $$s and $$s\n" />
    <msg uid="3355" type="Status" text="Found   difference in nt_switchboxes for $$s and $$s\n" />
    <msg uid="3356" type="Status" text="Found   difference in nt_ctypespmaps for $$s and $$s\n" />
    <msg uid="3357" type="Status" text="Found   difference in nt_cells for $$s and $$s\n" />
    <msg uid="3358" type="Status" text="Found   difference in nt_assemblies for $$s and $$s\n" />
    <msg uid="3359" type="Status" text="Found   difference in nt_assemblyplaced for $$s and $$s\n" />
	<msg uid="3360" type="Status" text="Found   difference in nt_wireplaced for $$s and $$s\n" />
    <msg uid="3361" type="Status" text="Found   difference in nt_switchplaceds for $$s and $$s\n" />
    <msg uid="3362" type="Status" text="Found   difference in nt_cleancellpins for $$s and $$s\n" />
    <msg uid="3363" type="Status" text="Found   difference in nt_cleanswboxpins for $$s and $$s\n" />
    <msg uid="3364" type="Status" text="Found   difference in nt_cleanswitchboxes for $$s and $$s\n" />
    <msg uid="3365" type="Status" text="Found   difference in nt_cleancells for $$s and $$s\n" />
    <msg uid="3366" type="Status" text="Found   difference in nt_cleanswitches for $$s and $$s\n" />
    <msg uid="3367" type="Status" text="Found   difference in nt_cleanwires for $$s and $$s\n" />
    <msg uid="3368" type="Status" text="Found   difference in nt_cleanhlines for $$s and $$s\n" />
    <msg uid="3369" type="Status" text="Found   difference in nt_cleanvlines for $$s and $$s\n" />
	<msg uid="3370" type="Status" text="Found   difference in nt_cleanhiddenswitches for $$s and $$s\n" />
    <msg uid="3371" type="Status" text="Found   difference in nt_cleancellmodels for $$s and $$s\n" />
    <msg uid="3372" type="Status" text="Found   difference in top_assembly for $$s and $$s\n" />
    <msg uid="3373" type="Status" text="Unable to open file &quot;$$s&quot; \n" />
    <msg uid="3374" type="Status" text=" start_write_darrays_nt_model." />
    <msg uid="3375" type="Status" text="  start_write $$d nt_wires." />
    <msg uid="3376" type="Status" text="  start_write $$d nt_layers." />
    <msg uid="3377" type="Status" text="  start_write $$d nt_pins." />
    <msg uid="3378" type="Status" text="  start_write $$d nt_switches." />
    <msg uid="3379" type="Status" text="  start_write $$d hidden_nt_switches." />
	<msg uid="3380" type="Status" text=" start_write $$d nt_assemblies." />
    <msg uid="3381" type="Status" text="  Write $$d placed_assemblies." />
    <msg uid="3382" type="Status" text="  Write $$d placed_wires." />
    <msg uid="3383" type="Status" text="  Write $$d placed_switches." />
    <msg uid="3384" type="Status" text=" start_write_nt_model." />
    <msg uid="3385" type="Status" text="  Write $$d nt_celltypes." />
    <msg uid="3386" type="Status" text="  Write $$d nt_cellswitches." />
    <msg uid="3387" type="Status" text="  Write $$d nt_swboxswitches." />
    <msg uid="3388" type="Status" text="  Write $$d nt_switchboxes." />
    <msg uid="3389" type="Status" text="  Write $$d nt_ctypespmaps." />
	<msg uid="3390" type="Status" text="  Write $$d nt_cells." />
    <msg uid="3391" type="Status" text="start_write_nt_device: compact is $$d." />
    <msg uid="3392" type="Status" text="Write: repeated instance (index $$d) &quot;$$s&quot; at ($$d,$$d) template type $$s\n" />
    <msg uid="3393" type="Status" text=" start_write_cleaned_darrays." />
    <msg uid="3394" type="Status" text="  Write $$d clean_cell_pins." />
    <msg uid="3395" type="Status" text="  Write $$d clean_switchbox_pins." />
    <msg uid="3396" type="Status" text="  Write $$d clean_hlines." />
    <msg uid="3397" type="Status" text="  Write $$d clean_vlines." />
    <msg uid="3398" type="Status" text="  Write $$d clean_cells." />
    <msg uid="3399" type="Status" text="  Write $$d clean_wires." />
	<msg uid="3400" type="Status" text="  Write $$d clean_switchboxes." />
    <msg uid="3401" type="Status" text="  Write $$d clean_switches." />
    <msg uid="3402" type="Status" text="  Write $$d clean_h_switches." />
    <msg uid="3403" type="Status" text=" Write/destroy/read NTM data base into $$s.ntm." />
    <msg uid="3404" type="Status" text="making unique wire group $$s because of wire flags." />
    <msg uid="3405" type="Status" text="$$d pinwire is $$.s" />
    <msg uid="3406" type="Status" text="   ntwire is $$s jwire." />
    <msg uid="3407" type="Status" text="Trimming pinwire $$s polyline $$d." />
    <msg uid="3408" type="Status" text="Search for $$s." />
    <msg uid="3409" type="Status" text="   Match pinwire $$s found." />
	<msg uid="3410" type="Status" text="   Unique pinwire $$s found." />
    <msg uid="3411" type="Status" text="Split wire definition $$s." />
    <msg uid="3412" type="Status" text="Ignoring $$s &lt;$$s&gt;." />
    <msg uid="3413" type="Status" text="ignoring NULL cell_obj." />
    <msg uid="3414" type="Status" text="Ignoring NULL assembly_obj." />
    <msg uid="3415" type="Status" text="Ignoring DD_CTYPES_PMAP &lt;$$s:$$s&gt;." />
    <msg uid="3416" type="Status" text="Ignoring NULL pmap_obj." />
    <msg uid="3417" type="Status" text="Ignoring mode &lt;$$s&gt;." />
    <msg uid="3418" type="Status" text="Processing architecture $$s device $$s." />
    <msg uid="3419" type="Status" text="Graph Data:  maximum depth: $$d." />
	<msg uid="3420" type="Status" text="Loading pm: $$s." />
    <msg uid="3421" type="Status" text="Loading device: $$s." />
    <msg uid="3422" type="Status" text="Note:  there must be no .ddd file, creating a default graph hierarchy." />
    <msg uid="3423" type="Status" text="Found hardware input version &quot;$$s&quot;." />
    <msg uid="3424" type="Status" text="Delete all cleancellpins." />
    <msg uid="3425" type="Status" text="Removing celltype $$s." />
    <msg uid="3426" type="Status" text="$$s--------" />
    <msg uid="3427" type="Status" text="$$s x=$$d y=$$d." />
    <msg uid="3428" type="Status" text="Error: NT_SWBIN::add cannot find a bin." />
    <msg uid="3429" type="Status" text="  Removing empty assembly $$s." />
	<msg uid="3430" type="Status" text="  Removing newly empty assembly $$s." />
    <msg uid="3431" type="Status" text="  Removing duplicate assembly $$s." />
    <msg uid="3432" type="Status" text=" Grouping $$s size = $$d,$$d with $$d cells $$d switches." />
    <msg uid="3433" type="Status" text=" Cannot group $$s  with $$d cells $$d switches." />
    <msg uid="3434" type="Status" text="  Removing unreferenced wire $$s." />
    <msg uid="3435" type="Status" text="  Removing unreferenced wire group $$s." />
    <msg uid="3436" type="Status" text="  Removing unreferenced switch group $$s." />
    <msg uid="3437" type="Status" text="  Removing unreferenced switch box $$s." />
    <msg uid="3438" type="Status" text="Load $$s for def generation." />
    <msg uid="3439" type="Status" text="Found lkp for $$s." />
	<msg uid="3440" type="Status" text="Found no lkp for $$s." />
    <msg uid="3441" type="Status" text="****************************************" />
    <msg uid="3442" type="Status" text="***** Start build device $$d ************" />
    <msg uid="3443" type="Status" text="****** End build device $$d *************" />
    <msg uid="3444" type="Status" text="emptyMessage" />
	
    <!-- define information message -->

	
	 <!-- basopt 9100 to 9399      9400 to 9699     9700 to 9999  -->
    <!-- define error message 9100 to 9399 -->
    <msg uid="9100" type="Error" text="Incorrect usage: optnph &lt;device_name&gt;\n" />
    <msg uid="9101" type="Error" text="Unable tofind device data file $$s.\n" />
    <msg uid="9102" type="Error" text="Unable to retrieve pm name from $$s\n" />
    <msg uid="9103" type="Error" text="Failed to open file $$s\n" />
    <msg uid="9104" type="Error" text="Compress failed.\n" />
    <msg uid="9105" type="Error" text="The nph is already compressed. Num graphs &lt;$$d&gt; Num super-sites &lt;$$d&gt;\n" />
    <msg uid="9106" type="Error" text="NP_DEVCOMP::findnode, graph $$d is null.\n" />
    <msg uid="9107" type="Error" text="emptyMessage\n" />
 
    <!-- define warning message 9400 to 9699 -->
    <msg uid="9400" type="Warning" text="Found a non-pseudo arc after pseudo arcs. shuffle\n" />
    <msg uid="9401" type="Warning" text="Found a node with no arcs.\n" />
    <msg uid="9402" type="Warning" text="emptyMessage\n" />

    <!-- define status message 9700 to 9999 -->
    <msg uid="9700" type="Status" text="(oldarc-arcs), $$d is too large for ARC #$$d." />
    <msg uid="9701" type="Status" text="Setting dup arc for one of the arcs." />
    <msg uid="9702" type="Status" text="Found an arc connecting the node." />
    <msg uid="9703" type="Status" text="Must update delay tables." />
    <msg uid="9704" type="Status" text="   Graph $$2d ($$2d):  $$9d arcs." />
    <msg uid="9705" type="Status" text="                     $$d local arcs, $$d port arcs." />
    <msg uid="9706" type="Status" text="gd is ($$d,$$d)-($$d,$$d.)" />
    <msg uid="9707" type="Status" text="ss$$d is ($$d,$$d)-($$d,$$d)." />
    <msg uid="9708" type="Status" text=" Hit ss$$d." />
    <msg uid="9709" type="Status" text="Device Compression Summary:" />
    <msg uid="9710" type="Status" text="================================================================================" />
    <msg uid="9711" type="Status" text="                     OLD:           NEW:         %" />
    <msg uid="9712" type="Status" text=" # arcs:           $$d         $$d      $$d%" />
    <msg uid="9713" type="Status" text=" # nodes:          $$d         $$d      $$d%" />
    <msg uid="9714" type="Status" text=" # dsites          $$d         $$d      $$d%" />
    <msg uid="9715" type="Status" text=" # sites:          $$d         $$d      $$d%" />
    <msg uid="9716" type="Status" text=" # graphs:         $$d         $$d      $$d%" />
    <msg uid="9717" type="Status" text=" # supersites:     $$d         $$d      $$d%" />
    <msg uid="9718" type="Status" text=" # siteparams:     $$d         $$d      $$d%" />
    <msg uid="9719" type="Status" text=" # l2pmaps:        $$d         $$d      $$d%" />
	<msg uid="9720" type="Status" text="Individual Graph Comparison:" />
	<msg uid="9721" type="Status" text="   Depth:$$d  Graph:$$d  ($$d)" />
	<msg uid="9722" type="Status" text=" # nodes:          $$d         $$d      $$d%" />
	<msg uid="9723" type="Status" text=" # arcs:           $$d         $$d      $$d%" />
	<msg uid="9724" type="Status" text=" # port nodes:     $$d         $$d      $$d%" />
	<msg uid="9725" type="Status" text=" # port arcs:      $$d         $$d      $$d%" />
	<msg uid="9726" type="Status" text="End searching for $$swire &lt;$$d,$$d&gt; in $$d graphs." />
	<msg uid="9727" type="Status" text="Found a self-connect." />
	<msg uid="9728" type="Status" text=" Hit ss$$d." />
	<msg uid="9729" type="Status" text="optnph: $$s: $$s\n" />
	<msg uid="9730" type="Status" text="Loading pm: $$s." />
	<msg uid="9731" type="Status" text="Open pm: $$s dev: $$s." />
	<msg uid="9732" type="Status" text="Set dev: $$s." />
	<msg uid="9733" type="Status" text="Remove $$s." />
	<msg uid="9734" type="Status" text="cp $$s $$s." />
	<msg uid="9735" type="Status" text="OPTIMAL NPH found for $$s.  Unable to compress." />
	<msg uid="9736" type="Status" text="Copy INS data to compressed nph." />
	<msg uid="9737" type="Status" text="Copy INS data to compressed nph failed." />
	<msg uid="9738" type="Status" text="emptyMessage" />

  </messages>
</messageFile>


